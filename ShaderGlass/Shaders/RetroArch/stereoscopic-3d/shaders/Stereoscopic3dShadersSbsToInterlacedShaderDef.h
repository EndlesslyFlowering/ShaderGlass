/*
ShaderGlass shader stereoscopic-3d/shaders\sbs-to-interlaced imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/stereoscopic-3d/shaders/sbs-to-interlaced.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// side-by-side to interlaced 3D
// author: hunterk
// license: public domain
// convert side-by-side content to work with interlaced 3D displays
// interlaced displays want every other physical pixel, so use gl_FragCoord

*/

#pragma once

namespace RetroArchStereoscopic3dShadersSbsToInterlacedShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,72,168,
199,56,74,41,160,113,
188,88,54,66,28,5,
110,215,1,0,0,0,
16,8,0,0,5,0,
0,0,52,0,0,0,
72,4,0,0,148,4,
0,0,28,5,0,0,
116,7,0,0,82,68,
69,70,12,4,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
226,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,10,0,0,0,
24,1,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,168,2,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,196,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,232,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
196,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
252,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,196,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,14,3,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,40,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,76,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
100,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
136,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,100,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,158,3,
0,0,60,0,0,0,
4,0,0,0,0,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,184,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
100,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
202,3,0,0,68,0,
0,0,4,0,0,0,
0,0,0,0,100,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,214,3,
0,0,72,0,0,0,
4,0,0,0,0,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,186,2,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
32,3,0,0,112,97,
114,97,109,115,95,115,
112,108,105,116,95,100,
105,115,116,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
94,3,0,0,112,97,
114,97,109,115,95,105,
110,116,101,114,108,97,
99,101,95,122,111,111,
109,0,112,97,114,97,
109,115,95,105,110,116,
101,114,108,97,99,101,
95,101,121,101,95,115,
119,97,112,0,112,97,
114,97,109,115,95,97,
115,112,101,99,116,95,
109,111,100,0,112,97,
114,97,109,115,95,99,
114,111,112,0,112,97,
114,97,109,115,95,118,
101,114,116,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,171,171,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
128,0,0,0,4,0,
0,0,8,0,0,0,
104,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
104,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,3,0,0,
104,0,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,12,0,0,
113,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,2,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,80,2,
0,0,80,0,1,0,
148,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
89,0,0,4,70,142,
32,0,1,0,0,0,
5,0,0,0,95,0,
0,3,242,16,16,0,
0,0,0,0,95,0,
0,3,50,16,16,0,
1,0,0,0,101,0,
0,3,50,32,16,0,
0,0,0,0,101,0,
0,3,194,32,16,0,
0,0,0,0,101,0,
0,3,50,32,16,0,
1,0,0,0,103,0,
0,4,242,32,16,0,
2,0,0,0,1,0,
0,0,104,0,0,2,
2,0,0,0,0,0,
0,10,50,0,16,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,191,0,0,0,191,
0,0,0,0,0,0,
0,0,56,0,0,8,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,166,138,
32,0,1,0,0,0,
3,0,0,0,56,0,
0,8,18,0,16,0,
1,0,0,0,10,0,
16,0,0,0,0,0,
10,128,32,0,1,0,
0,0,4,0,0,0,
54,0,0,5,162,0,
16,0,1,0,0,0,
86,5,16,0,0,0,
0,0,0,0,0,10,
178,32,16,0,0,0,
0,0,70,12,16,0,
1,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,0,0,0,0,63,
0,0,0,10,114,0,
16,0,0,0,0,0,
198,0,16,0,1,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,63,
0,0,0,0,54,0,
0,6,50,0,16,0,
1,0,0,0,86,133,
32,0,1,0,0,0,
3,0,0,0,0,0,
0,7,66,32,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,54,0,0,5,
66,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,0,0,0,
0,8,50,32,16,0,
1,0,0,0,70,0,
16,0,0,0,0,0,
150,5,16,128,65,0,
0,0,1,0,0,0,
56,0,0,8,242,0,
16,0,0,0,0,0,
86,21,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,1,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,6,16,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,2,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,32,16,0,
2,0,0,0,246,31,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,3,0,0,0,
70,14,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,15,0,0,0,
2,0,0,0,0,0,
0,0,6,0,0,0,
11,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,19,104,
150,230,217,201,28,231,
253,142,114,128,176,72,
170,117,1,0,0,0,
180,8,0,0,5,0,
0,0,52,0,0,0,
0,4,0,0,136,4,
0,0,188,4,0,0,
24,8,0,0,82,68,
69,70,196,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
154,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,10,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,96,2,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,124,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,160,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
124,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
180,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,124,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,198,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,224,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,3,0,0,
52,0,0,0,4,0,
0,0,0,0,0,0,
28,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
64,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,28,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,86,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,28,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,3,0,0,
64,0,0,0,4,0,
0,0,0,0,0,0,
28,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
130,3,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,28,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,142,3,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,28,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,114,2,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
216,2,0,0,112,97,
114,97,109,115,95,115,
112,108,105,116,95,100,
105,115,116,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
22,3,0,0,112,97,
114,97,109,115,95,105,
110,116,101,114,108,97,
99,101,95,122,111,111,
109,0,112,97,114,97,
109,115,95,105,110,116,
101,114,108,97,99,101,
95,101,121,101,95,115,
119,97,112,0,112,97,
114,97,109,115,95,97,
115,112,101,99,116,95,
109,111,100,0,112,97,
114,97,109,115,95,99,
114,111,112,0,112,97,
114,97,109,115,95,118,
101,114,116,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,171,171,73,83,
71,78,128,0,0,0,
4,0,0,0,8,0,
0,0,104,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,0,
0,0,104,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,12,
0,0,104,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,113,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
2,0,0,0,15,3,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,84,3,
0,0,80,0,0,0,
213,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,5,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,194,16,16,0,
0,0,0,0,98,16,
0,3,50,16,16,0,
1,0,0,0,100,32,
0,4,50,16,16,0,
2,0,0,0,1,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
3,0,0,0,0,0,
0,8,18,0,16,0,
0,0,0,0,10,16,
16,128,65,0,0,0,
2,0,0,0,26,16,
16,0,2,0,0,0,
50,0,0,10,18,0,
16,0,0,0,0,0,
42,128,32,0,1,0,
0,0,4,0,0,0,
10,0,16,0,0,0,
0,0,10,16,16,0,
2,0,0,0,0,0,
0,7,34,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,56,0,0,7,
66,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
65,0,0,5,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,50,0,0,10,
34,0,16,0,0,0,
0,0,42,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,0,64,26,0,
16,0,0,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,63,65,0,
0,5,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
50,0,0,10,18,0,
16,0,0,0,0,0,
42,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
0,64,10,0,16,0,
0,0,0,0,0,0,
0,8,34,0,16,0,
0,0,0,0,10,0,
16,128,65,0,0,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
50,0,0,10,18,0,
16,0,0,0,0,0,
58,128,32,0,1,0,
0,0,3,0,0,0,
26,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,49,0,
0,7,18,0,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
10,0,16,0,0,0,
0,0,49,0,0,7,
34,0,16,0,0,0,
0,0,42,16,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
49,0,0,8,66,0,
16,0,0,0,0,0,
26,128,32,0,1,0,
0,0,4,0,0,0,
42,16,16,0,0,0,
0,0,1,0,0,7,
34,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
242,0,16,0,1,0,
0,0,230,26,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,1,0,0,7,
242,0,16,0,1,0,
0,0,86,5,16,0,
0,0,0,0,70,14,
16,0,1,0,0,0,
49,0,0,7,34,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,10,16,16,0,
1,0,0,0,49,0,
0,8,66,0,16,0,
0,0,0,0,10,16,
16,0,1,0,0,0,
26,128,32,0,1,0,
0,0,4,0,0,0,
1,0,0,7,34,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,242,0,
16,0,2,0,0,0,
70,16,16,0,1,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
1,0,0,7,242,0,
16,0,2,0,0,0,
86,5,16,0,0,0,
0,0,70,14,16,0,
2,0,0,0,55,0,
0,9,242,32,16,0,
0,0,0,0,6,0,
16,0,0,0,0,0,
70,14,16,0,1,0,
0,0,70,14,16,0,
2,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,24,0,
0,0,3,0,0,0,
0,0,0,0,4,0,
0,0,16,0,0,0,
0,0,0,0,4,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
2,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class Stereoscopic3dShadersSbsToInterlacedShaderDef : public ShaderDef
{
public:
	Stereoscopic3dShadersSbsToInterlacedShaderDef() : ShaderDef{}
	{
		Name = "sbs-to-interlaced";
		VertexByteCode = RetroArchStereoscopic3dShadersSbsToInterlacedShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchStereoscopic3dShadersSbsToInterlacedShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchStereoscopic3dShadersSbsToInterlacedShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchStereoscopic3dShadersSbsToInterlacedShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("split_dist", -1, 52, 4, -1.000000f, 1.000000f, 0.250000f, 0.001000f, "Eye Separation"));
		Params.push_back(ShaderParam("interlace_zoom", -1, 56, 4, 0.000000f, 2.000000f, 0.800000f, 0.010000f, "Interlace Zoom"));
		Params.push_back(ShaderParam("interlace_eye_swap", -1, 60, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Interlace Swap Eyes"));
		Params.push_back(ShaderParam("aspect_mod", -1, 64, 4, 0.000000f, 2.000000f, 0.550000f, 0.010000f, "Aspect Mod"));
		Params.push_back(ShaderParam("crop", -1, 68, 4, 0.000000f, 1.000000f, 0.500000f, 0.005000f, "Crop Edges"));
		Params.push_back(ShaderParam("vert", -1, 72, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Swap Interlacing Direction (horz / vert)"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
