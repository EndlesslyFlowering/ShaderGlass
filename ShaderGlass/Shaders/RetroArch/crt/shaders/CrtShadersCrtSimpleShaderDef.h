/*
ShaderGlass shader crt/shaders\crt-simple imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/crt/shaders/crt-simple.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// Parameter lines go here:
///////////////////////////////////////////////////////////////////////////////////////////////
// Calculate the influence of a scanline on the current pixel.
//
// 'distance' is the distance in texture coordinates from the current
// pixel to the scanline in question.
// 'color' is the colour of the scanline at the horizontal location of
// the current pixel.
// The "width" of the scanline beam is set as 2*(1 + x^4) for
// each RGB channel.
// The "weights" lines basically specify the formula that gives
// you the profile of the beam, i.e. the intensity as
// a function of distance from the vertical center of the
// scanline. In this case, it is gaussian if width=2, and
// becomes nongaussian for larger widths. Ideally this should
// be normalized so that the integral across the beam is
// independent of its width. That is, for a narrower beam
// "weights" should have a higher peak at the center of the
// scanline than for a wider beam.
// Barrel distortion shrinks the display area a bit, this will allow us to counteract that.
// Texture coordinates of the texel containing the active pixel.
// Of all the pixels that are mapped onto the texel we are
// currently rendering, which pixel are we currently rendering?
// Snap to the center of the underlying texel.
// Calculate the effective colour of the current and next
// scanlines at the horizontal location of the current pixel.
// Calculate the influence of the current and next scanlines on
// the current pixel.
// dot-mask emulation:

*/

#pragma once

namespace RetroArchCrtShadersCrtSimpleShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,7,90,
244,202,208,136,239,143,
61,205,42,234,171,96,
146,251,1,0,0,0,
160,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
4,3,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,44,111,
146,35,88,4,102,206,
108,116,153,137,18,213,
18,184,1,0,0,0,
248,14,0,0,5,0,
0,0,52,0,0,0,
44,4,0,0,96,4,
0,0,148,4,0,0,
92,14,0,0,82,68,
69,70,240,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
198,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,1,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,11,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,136,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,164,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,200,2,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
164,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
220,2,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,164,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,238,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,8,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
104,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,68,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,120,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,68,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,138,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
157,3,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,68,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,169,3,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,68,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,181,3,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
154,2,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,3,
0,0,112,97,114,97,
109,115,95,68,73,83,
84,79,82,84,73,79,
78,0,102,108,111,97,
116,0,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,62,3,
0,0,112,97,114,97,
109,115,95,83,67,65,
78,76,73,78,69,0,
112,97,114,97,109,115,
95,73,78,80,85,84,
71,65,77,77,65,0,
112,97,114,97,109,115,
95,79,85,84,80,85,
84,71,65,77,77,65,
0,112,97,114,97,109,
115,95,77,65,83,75,
0,112,97,114,97,109,
115,95,83,73,90,69,
0,112,97,114,97,109,
115,95,68,79,87,78,
83,67,65,76,69,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,171,171,
73,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
192,9,0,0,80,0,
0,0,112,2,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
1,0,0,0,5,0,
0,0,90,0,0,3,
0,96,16,0,1,0,
0,0,88,24,0,4,
0,112,16,0,1,0,
0,0,85,85,0,0,
98,16,0,3,50,16,
16,0,0,0,0,0,
101,0,0,3,242,32,
16,0,0,0,0,0,
104,0,0,2,4,0,
0,0,56,0,0,11,
50,0,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
192,63,0,0,0,0,
0,0,0,0,86,133,
32,0,1,0,0,0,
3,0,0,0,14,0,
0,9,194,0,16,0,
0,0,0,0,6,132,
32,0,1,0,0,0,
0,0,0,0,6,132,
32,0,1,0,0,0,
1,0,0,0,50,0,
0,12,50,0,16,0,
1,0,0,0,70,16,
16,0,0,0,0,0,
230,10,16,0,0,0,
0,0,2,64,0,0,
0,0,0,191,0,0,
0,191,0,0,0,0,
0,0,0,0,15,0,
0,7,66,0,16,0,
1,0,0,0,70,0,
16,0,1,0,0,0,
70,0,16,0,1,0,
0,0,56,0,0,7,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,166,10,
16,0,1,0,0,0,
50,0,0,9,50,0,
16,0,0,0,0,0,
70,0,16,0,1,0,
0,0,70,0,16,0,
0,0,0,0,70,0,
16,0,1,0,0,0,
50,0,0,17,50,0,
16,0,1,0,0,0,
86,133,32,128,65,0,
0,0,1,0,0,0,
3,0,0,0,2,64,
0,0,31,133,107,62,
215,163,176,62,0,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,0,0,0,0,
0,0,50,0,0,12,
194,0,16,0,1,0,
0,0,6,4,16,0,
0,0,0,0,6,4,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,63,0,0,
0,63,56,0,0,7,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,70,0,
16,0,1,0,0,0,
14,0,0,7,194,0,
16,0,0,0,0,0,
166,14,16,0,1,0,
0,0,166,14,16,0,
0,0,0,0,49,0,
0,8,18,0,16,0,
0,0,0,0,10,0,
16,128,129,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
29,0,0,8,34,0,
16,0,0,0,0,0,
26,0,16,128,129,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
0,63,55,0,0,9,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
1,64,0,0,255,255,
255,255,55,0,0,12,
50,0,16,0,0,0,
0,0,6,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,191,
0,0,128,191,0,0,
0,0,0,0,0,0,
230,10,16,0,0,0,
0,0,50,0,0,10,
130,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,26,128,
32,0,1,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,191,
65,0,0,5,18,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,14,0,0,8,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,58,128,
32,0,1,0,0,0,
4,0,0,0,26,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
0,0,0,7,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,14,0,
0,8,66,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
26,128,32,0,1,0,
0,0,0,0,0,0,
0,0,0,8,34,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,58,128,32,0,
1,0,0,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
1,0,0,0,134,0,
16,0,0,0,0,0,
70,126,16,0,1,0,
0,0,0,96,16,0,
1,0,0,0,47,0,
0,5,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,8,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,246,143,32,0,
1,0,0,0,3,0,
0,0,25,0,0,5,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,70,126,16,0,
1,0,0,0,0,96,
16,0,1,0,0,0,
47,0,0,5,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,56,0,0,8,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,246,143,
32,0,1,0,0,0,
3,0,0,0,25,0,
0,5,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,7,114,0,
16,0,2,0,0,0,
70,2,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,50,0,0,15,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,64,0,0,0,0,
2,64,0,0,0,0,
0,64,0,0,0,64,
0,0,0,64,0,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,63,0,0,0,0,
68,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,0,0,0,8,
130,0,16,0,1,0,
0,0,58,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,14,0,
0,8,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
42,128,32,0,1,0,
0,0,3,0,0,0,
14,0,0,8,130,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,42,128,32,0,
1,0,0,0,3,0,
0,0,56,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,246,15,
16,0,1,0,0,0,
47,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,7,
114,0,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,3,0,0,0,
50,0,0,15,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
205,204,76,62,205,204,
76,62,205,204,76,62,
0,0,0,0,2,64,
0,0,154,153,25,63,
154,153,25,63,154,153,
25,63,0,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,59,170,184,191,
59,170,184,191,59,170,
184,191,0,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,56,0,0,10,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,51,51,179,63,
51,51,179,63,51,51,
179,63,0,0,0,0,
14,0,0,7,114,0,
16,0,2,0,0,0,
70,2,16,0,3,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,7,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,56,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,7,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,50,0,
0,15,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,64,0,0,0,64,
0,0,0,64,0,0,
0,0,2,64,0,0,
0,0,0,64,0,0,
0,64,0,0,0,64,
0,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,63,0,0,
0,0,68,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,246,15,
16,0,0,0,0,0,
70,2,16,0,3,0,
0,0,47,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,3,0,
0,0,50,0,0,15,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,205,204,76,62,
205,204,76,62,205,204,
76,62,0,0,0,0,
2,64,0,0,154,153,
25,63,154,153,25,63,
154,153,25,63,0,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,59,170,
184,191,59,170,184,191,
59,170,184,191,0,0,
0,0,25,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,10,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,51,51,
179,63,51,51,179,63,
51,51,179,63,0,0,
0,0,14,0,0,7,
114,0,16,0,2,0,
0,0,70,2,16,0,
3,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,9,114,0,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,0,0,0,0,0,
56,0,0,8,130,0,
16,0,0,0,0,0,
10,16,16,0,0,0,
0,0,10,128,32,0,
1,0,0,0,2,0,
0,0,56,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
14,0,0,8,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,42,128,32,0,
1,0,0,0,4,0,
0,0,26,0,0,5,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,0,0,
0,9,18,0,16,0,
1,0,0,0,1,64,
0,0,0,0,128,63,
26,128,32,128,65,0,
0,0,1,0,0,0,
4,0,0,0,50,0,
0,10,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,26,128,32,0,
1,0,0,0,4,0,
0,0,56,0,0,7,
114,0,16,0,0,0,
0,0,246,15,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
47,0,0,5,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,14,0,0,11,
130,0,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,10,128,
32,0,1,0,0,0,
4,0,0,0,56,0,
0,7,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
246,15,16,0,0,0,
0,0,25,0,0,5,
114,32,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,54,0,
0,5,130,32,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
62,0,0,1,83,84,
65,84,148,0,0,0,
75,0,0,0,4,0,
0,0,0,0,0,0,
2,0,0,0,69,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,2,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersCrtSimpleShaderDef : public ShaderDef
{
public:
	CrtShadersCrtSimpleShaderDef() : ShaderDef{}
	{
		Name = "crt-simple";
		VertexByteCode = RetroArchCrtShadersCrtSimpleShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersCrtSimpleShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersCrtSimpleShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersCrtSimpleShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("DISTORTION", -1, 52, 4, 0.000000f, 0.300000f, 0.120000f, 0.010000f, "Distortion"));
		Params.push_back(ShaderParam("SCANLINE", -1, 56, 4, 0.200000f, 0.600000f, 0.300000f, 0.050000f, "Scanline Weight"));
		Params.push_back(ShaderParam("INPUTGAMMA", -1, 60, 4, 0.000000f, 4.000000f, 2.400000f, 0.050000f, "Input Gamma"));
		Params.push_back(ShaderParam("OUTPUTGAMMA", -1, 64, 4, 0.000000f, 4.000000f, 2.200000f, 0.050000f, "Output Gamma"));
		Params.push_back(ShaderParam("MASK", -1, 68, 4, 0.000000f, 1.000000f, 0.700000f, 0.050000f, "Mask Brightness"));
		Params.push_back(ShaderParam("SIZE", -1, 72, 4, 1.000000f, 2.000000f, 1.000000f, 1.000000f, "Mask Size"));
		Params.push_back(ShaderParam("DOWNSCALE", -1, 76, 4, 1.000000f, 2.000000f, 1.000000f, 1.000000f, "Scanlines Downscale"));
		Samplers.push_back(ShaderSampler("Source", 1));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
