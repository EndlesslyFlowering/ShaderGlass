/*
ShaderGlass shader crt/shaders/guest/advanced\crt-guest-advanced-ntsc-pass1 imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/crt/shaders/guest/advanced/crt-guest-advanced-ntsc-pass1.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,14,47,
213,78,221,130,191,191,
97,225,117,245,226,84,
11,43,1,0,0,0,
160,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
4,3,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
84,0,128,63,84,0,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,213,14,
141,128,150,182,152,23,
30,250,68,158,58,154,
142,114,1,0,0,0,
164,19,0,0,5,0,
0,0,52,0,0,0,
168,4,0,0,220,4,
0,0,16,5,0,0,
8,19,0,0,82,68,
69,70,108,4,0,0,
1,0,0,0,200,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
65,4,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,179,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,193,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,76,105,110,101,97,
114,105,122,101,80,97,
115,115,95,115,97,109,
112,108,101,114,0,76,
105,110,101,97,114,105,
122,101,80,97,115,115,
0,80,117,115,104,0,
171,171,193,0,0,0,
13,0,0,0,224,0,
0,0,96,0,0,0,
0,0,0,0,0,0,
0,0,232,2,0,0,
0,0,0,0,16,0,
0,0,0,0,0,0,
4,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
40,3,0,0,16,0,
0,0,16,0,0,0,
2,0,0,0,4,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,60,3,
0,0,32,0,0,0,
16,0,0,0,0,0,
0,0,4,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,3,0,0,
48,0,0,0,4,0,
0,0,0,0,0,0,
104,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
140,3,0,0,52,0,
0,0,4,0,0,0,
2,0,0,0,164,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,200,3,
0,0,56,0,0,0,
4,0,0,0,2,0,
0,0,164,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,218,3,0,0,
60,0,0,0,4,0,
0,0,2,0,0,0,
164,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
233,3,0,0,64,0,
0,0,4,0,0,0,
2,0,0,0,164,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,246,3,
0,0,68,0,0,0,
4,0,0,0,2,0,
0,0,164,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,4,0,0,
72,0,0,0,4,0,
0,0,2,0,0,0,
164,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
17,4,0,0,76,0,
0,0,4,0,0,0,
0,0,0,0,164,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,37,4,
0,0,80,0,0,0,
4,0,0,0,2,0,
0,0,164,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,49,4,0,0,
84,0,0,0,4,0,
0,0,2,0,0,0,
164,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
250,2,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,96,3,
0,0,112,97,114,97,
109,115,95,83,73,71,
77,65,95,72,79,82,
0,102,108,111,97,116,
0,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,157,3,
0,0,112,97,114,97,
109,115,95,72,83,72,
65,82,80,78,69,83,
83,0,112,97,114,97,
109,115,95,83,95,83,
72,65,82,80,0,112,
97,114,97,109,115,95,
72,65,82,78,71,0,
112,97,114,97,109,115,
95,72,83,72,65,82,
80,0,112,97,114,97,
109,115,95,115,112,105,
107,101,0,112,97,114,
97,109,115,95,105,110,
116,101,114,110,97,108,
95,114,101,115,0,112,
97,114,97,109,115,95,
77,65,88,83,0,112,
97,114,97,109,115,95,
97,117,116,111,95,114,
101,115,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,171,171,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,240,13,
0,0,80,0,0,0,
124,3,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,6,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,14,0,0,0,
56,0,0,8,18,0,
16,0,0,0,0,0,
1,64,0,0,14,116,
90,59,10,128,32,0,
1,0,0,0,1,0,
0,0,64,0,0,5,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,50,32,
0,10,18,0,16,0,
0,0,0,0,26,128,
32,0,1,0,0,0,
5,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,191,50,0,0,9,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,0,0,64,63,
1,64,0,0,0,0,
128,63,61,16,0,137,
194,0,0,128,67,85,
21,0,98,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,0,
38,125,16,0,2,0,
0,0,43,0,0,5,
98,0,16,0,0,0,
0,0,86,6,16,0,
0,0,0,0,14,0,
0,8,50,0,16,0,
1,0,0,0,150,5,
16,0,0,0,0,0,
70,128,32,0,1,0,
0,0,1,0,0,0,
14,0,0,10,194,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
128,63,6,4,16,0,
1,0,0,0,56,0,
0,8,242,0,16,0,
2,0,0,0,70,14,
16,0,1,0,0,0,
70,142,32,0,1,0,
0,0,1,0,0,0,
56,0,0,7,226,0,
16,0,0,0,0,0,
6,4,16,0,2,0,
0,0,6,20,16,0,
0,0,0,0,26,0,
0,5,34,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
0,0,0,8,34,0,
16,0,0,0,0,0,
26,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
0,63,65,0,0,5,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,56,0,
0,10,98,0,16,0,
1,0,0,0,166,11,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,0,50,0,0,9,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,166,14,
16,0,2,0,0,0,
86,9,16,0,1,0,
0,0,56,0,0,7,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
56,0,0,7,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,63,56,0,
0,8,18,0,16,0,
1,0,0,0,10,0,
16,0,0,0,0,0,
42,128,32,0,1,0,
0,0,3,0,0,0,
56,0,0,9,34,0,
16,0,1,0,0,0,
26,128,32,0,1,0,
0,0,3,0,0,0,
26,128,32,0,1,0,
0,0,3,0,0,0,
56,0,0,7,66,0,
16,0,1,0,0,0,
10,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,15,0,
0,7,34,0,16,0,
1,0,0,0,166,10,
16,0,1,0,0,0,
86,5,16,0,1,0,
0,0,14,0,0,10,
34,0,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,26,0,
16,0,1,0,0,0,
56,0,0,8,66,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,56,0,0,7,
66,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
56,0,0,7,66,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
59,170,184,63,25,0,
0,5,66,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
14,0,0,10,130,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
128,63,10,0,16,0,
1,0,0,0,0,0,
0,7,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,66,0,0,5,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,56,0,
0,8,18,0,16,0,
3,0,0,0,10,0,
16,128,65,0,0,0,
1,0,0,0,42,0,
16,0,2,0,0,0,
54,0,0,8,162,0,
16,0,3,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,7,
50,0,16,0,2,0,
0,0,230,10,16,0,
0,0,0,0,70,0,
16,0,3,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
178,0,16,0,2,0,
0,0,70,0,16,0,
2,0,0,0,70,123,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,8,
18,0,16,0,3,0,
0,0,26,0,16,0,
0,0,0,0,10,0,
16,128,65,0,0,0,
1,0,0,0,56,0,
0,8,34,0,16,0,
3,0,0,0,10,0,
16,0,3,0,0,0,
10,0,16,128,65,0,
0,0,3,0,0,0,
56,0,0,7,34,0,
16,0,3,0,0,0,
26,0,16,0,1,0,
0,0,26,0,16,0,
3,0,0,0,56,0,
0,7,34,0,16,0,
3,0,0,0,26,0,
16,0,3,0,0,0,
1,64,0,0,59,170,
184,63,25,0,0,5,
34,0,16,0,3,0,
0,0,26,0,16,0,
3,0,0,0,50,0,
0,11,34,0,16,0,
3,0,0,0,42,0,
16,128,65,0,0,0,
1,0,0,0,58,128,
32,0,1,0,0,0,
3,0,0,0,26,0,
16,0,3,0,0,0,
50,0,0,12,18,0,
16,0,3,0,0,0,
42,128,32,128,65,0,
0,0,1,0,0,0,
3,0,0,0,10,0,
16,0,0,0,0,0,
10,0,16,128,129,0,
0,0,3,0,0,0,
56,32,0,7,18,0,
16,0,3,0,0,0,
58,0,16,0,1,0,
0,0,10,0,16,0,
3,0,0,0,49,0,
0,7,18,0,16,0,
4,0,0,0,26,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
0,0,47,0,0,5,
18,0,16,0,3,0,
0,0,10,0,16,0,
3,0,0,0,56,0,
0,8,18,0,16,0,
3,0,0,0,10,0,
16,0,3,0,0,0,
26,128,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,18,0,
16,0,3,0,0,0,
10,0,16,0,3,0,
0,0,50,0,0,12,
18,0,16,0,3,0,
0,0,10,0,16,0,
3,0,0,0,10,128,
32,0,1,0,0,0,
5,0,0,0,10,128,
32,128,65,0,0,0,
1,0,0,0,5,0,
0,0,52,0,0,7,
18,0,16,0,3,0,
0,0,10,0,16,0,
3,0,0,0,26,0,
16,0,3,0,0,0,
52,0,0,10,226,0,
16,0,4,0,0,0,
6,13,16,0,2,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,51,0,
0,10,226,0,16,0,
5,0,0,0,6,13,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,16,0,0,10,
18,0,16,0,6,0,
0,0,70,3,16,0,
2,0,0,0,2,64,
0,0,208,179,89,62,
89,23,55,63,152,221,
147,61,0,0,0,0,
0,0,0,7,18,0,
16,0,6,0,0,0,
10,0,16,0,6,0,
0,0,1,64,0,0,
205,204,204,60,56,0,
0,7,34,0,16,0,
6,0,0,0,26,0,
16,0,3,0,0,0,
10,0,16,0,6,0,
0,0,52,0,0,7,
18,0,16,0,7,0,
0,0,26,0,16,0,
2,0,0,0,10,0,
16,0,2,0,0,0,
52,0,0,7,18,0,
16,0,7,0,0,0,
58,0,16,0,2,0,
0,0,10,0,16,0,
7,0,0,0,56,0,
0,7,18,0,16,0,
6,0,0,0,26,0,
16,0,6,0,0,0,
10,0,16,0,7,0,
0,0,54,0,0,5,
194,0,16,0,6,0,
0,0,86,9,16,0,
4,0,0,0,55,0,
0,12,242,0,16,0,
6,0,0,0,6,0,
16,0,4,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
6,0,0,0,54,0,
0,5,18,0,16,0,
5,0,0,0,58,0,
16,0,4,0,0,0,
55,0,0,12,242,0,
16,0,5,0,0,0,
6,0,16,0,4,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,70,14,
16,0,5,0,0,0,
55,0,0,9,18,0,
16,0,3,0,0,0,
10,0,16,0,4,0,
0,0,10,0,16,0,
3,0,0,0,26,0,
16,0,3,0,0,0,
56,0,0,7,178,0,
16,0,2,0,0,0,
70,12,16,0,2,0,
0,0,6,0,16,0,
3,0,0,0,0,0,
0,8,34,0,16,0,
3,0,0,0,10,0,
16,128,65,0,0,0,
1,0,0,0,1,64,
0,0,0,0,128,63,
54,0,0,5,114,0,
16,0,4,0,0,0,
70,3,16,0,2,0,
0,0,54,0,0,5,
50,0,16,0,7,0,
0,0,230,10,16,0,
6,0,0,0,54,0,
0,5,66,0,16,0,
7,0,0,0,10,0,
16,0,5,0,0,0,
54,0,0,5,114,0,
16,0,8,0,0,0,
150,7,16,0,5,0,
0,0,54,0,0,5,
82,0,16,0,9,0,
0,0,6,1,16,0,
6,0,0,0,54,0,
0,5,130,0,16,0,
4,0,0,0,10,0,
16,0,3,0,0,0,
54,0,0,5,130,0,
16,0,7,0,0,0,
26,0,16,0,3,0,
0,0,48,0,0,1,
49,0,0,7,130,0,
16,0,8,0,0,0,
10,0,16,0,1,0,
0,0,58,0,16,0,
7,0,0,0,3,0,
4,3,58,0,16,0,
8,0,0,0,56,0,
0,7,66,0,16,0,
3,0,0,0,42,0,
16,0,2,0,0,0,
58,0,16,0,7,0,
0,0,0,0,0,7,
50,0,16,0,10,0,
0,0,230,10,16,0,
0,0,0,0,230,10,
16,0,3,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,10,0,
0,0,70,0,16,0,
10,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,0,0,0,7,
66,0,16,0,3,0,
0,0,26,0,16,0,
0,0,0,0,58,0,
16,0,7,0,0,0,
56,0,0,8,130,0,
16,0,8,0,0,0,
42,0,16,0,3,0,
0,0,42,0,16,128,
65,0,0,0,3,0,
0,0,56,0,0,7,
130,0,16,0,8,0,
0,0,26,0,16,0,
1,0,0,0,58,0,
16,0,8,0,0,0,
56,0,0,7,130,0,
16,0,8,0,0,0,
58,0,16,0,8,0,
0,0,1,64,0,0,
59,170,184,63,25,0,
0,5,130,0,16,0,
8,0,0,0,58,0,
16,0,8,0,0,0,
50,0,0,11,34,0,
16,0,11,0,0,0,
42,0,16,128,65,0,
0,0,1,0,0,0,
58,128,32,0,1,0,
0,0,3,0,0,0,
58,0,16,0,8,0,
0,0,50,0,0,12,
66,0,16,0,3,0,
0,0,42,128,32,128,
65,0,0,0,1,0,
0,0,3,0,0,0,
10,0,16,0,0,0,
0,0,42,0,16,128,
129,0,0,0,3,0,
0,0,56,32,0,7,
66,0,16,0,3,0,
0,0,58,0,16,0,
1,0,0,0,42,0,
16,0,3,0,0,0,
49,0,0,7,130,0,
16,0,8,0,0,0,
26,0,16,0,11,0,
0,0,1,64,0,0,
0,0,0,0,47,0,
0,5,66,0,16,0,
3,0,0,0,42,0,
16,0,3,0,0,0,
56,0,0,8,66,0,
16,0,3,0,0,0,
42,0,16,0,3,0,
0,0,26,128,32,0,
1,0,0,0,4,0,
0,0,25,0,0,5,
66,0,16,0,3,0,
0,0,42,0,16,0,
3,0,0,0,50,0,
0,12,66,0,16,0,
3,0,0,0,42,0,
16,0,3,0,0,0,
10,128,32,0,1,0,
0,0,5,0,0,0,
10,128,32,128,65,0,
0,0,1,0,0,0,
5,0,0,0,52,0,
0,7,34,0,16,0,
9,0,0,0,42,0,
16,0,3,0,0,0,
26,0,16,0,11,0,
0,0,52,0,0,7,
114,0,16,0,12,0,
0,0,70,2,16,0,
7,0,0,0,70,2,
16,0,10,0,0,0,
51,0,0,7,114,0,
16,0,13,0,0,0,
70,2,16,0,8,0,
0,0,70,2,16,0,
10,0,0,0,16,0,
0,10,66,0,16,0,
3,0,0,0,70,2,
16,0,10,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,0,0,0,7,
66,0,16,0,3,0,
0,0,42,0,16,0,
3,0,0,0,1,64,
0,0,205,204,204,60,
56,0,0,7,130,0,
16,0,9,0,0,0,
42,0,16,0,3,0,
0,0,26,0,16,0,
11,0,0,0,52,0,
0,7,130,0,16,0,
10,0,0,0,26,0,
16,0,10,0,0,0,
10,0,16,0,10,0,
0,0,52,0,0,7,
130,0,16,0,10,0,
0,0,42,0,16,0,
10,0,0,0,58,0,
16,0,10,0,0,0,
50,0,0,9,18,0,
16,0,11,0,0,0,
58,0,16,0,9,0,
0,0,58,0,16,0,
10,0,0,0,10,0,
16,0,9,0,0,0,
50,0,0,9,66,0,
16,0,11,0,0,0,
26,0,16,0,11,0,
0,0,42,0,16,0,
3,0,0,0,42,0,
16,0,9,0,0,0,
55,0,0,9,114,0,
16,0,7,0,0,0,
246,15,16,0,8,0,
0,0,70,2,16,0,
7,0,0,0,70,2,
16,0,12,0,0,0,
55,0,0,9,114,0,
16,0,8,0,0,0,
246,15,16,0,8,0,
0,0,70,2,16,0,
8,0,0,0,70,2,
16,0,13,0,0,0,
55,0,0,9,114,0,
16,0,9,0,0,0,
246,15,16,0,8,0,
0,0,70,2,16,0,
9,0,0,0,70,2,
16,0,11,0,0,0,
50,0,0,9,114,0,
16,0,4,0,0,0,
70,2,16,0,10,0,
0,0,86,5,16,0,
9,0,0,0,70,2,
16,0,4,0,0,0,
0,0,0,7,130,0,
16,0,4,0,0,0,
58,0,16,0,4,0,
0,0,26,0,16,0,
9,0,0,0,0,0,
0,7,130,0,16,0,
7,0,0,0,58,0,
16,0,7,0,0,0,
1,64,0,0,0,0,
128,63,22,0,0,1,
14,0,0,7,114,0,
16,0,0,0,0,0,
70,2,16,0,4,0,
0,0,246,15,16,0,
4,0,0,0,14,0,
0,7,130,0,16,0,
0,0,0,0,10,0,
16,0,9,0,0,0,
42,0,16,0,9,0,
0,0,52,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
8,0,0,0,70,2,
16,0,0,0,0,0,
51,0,0,7,114,0,
16,0,1,0,0,0,
70,2,16,0,7,0,
0,0,70,2,16,0,
1,0,0,0,0,0,
0,8,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,128,65,0,
0,0,1,0,0,0,
50,32,0,10,114,0,
16,0,0,0,0,0,
6,128,32,0,1,0,
0,0,4,0,0,0,
70,2,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,52,0,
0,7,18,0,16,0,
1,0,0,0,26,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,52,0,0,7,
18,0,16,0,1,0,
0,0,42,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
0,0,0,8,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,50,32,0,10,
130,32,16,0,0,0,
0,0,42,128,32,0,
1,0,0,0,4,0,
0,0,58,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
54,0,0,5,114,32,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,117,0,0,0,
14,0,0,0,0,0,
0,0,2,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
11,0,0,0,6,0,
0,0,5,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const uint32_t sVertexHash[] = 
{
0x35770e2c,0x13ef12db,0xbba99299,0xa6a0aaae,0xe6e0f04f,0x57936f2b,
0xb0115b80,0x9fdac17d
};


static const uint32_t sFragmentHash[] =
{
0x771390db,0xe204b841,0xf6ce22ec,0xdb7dae1c,0xba86b941,0x7e84db98,
0x8dd46ead,0x70153a30
};

}

namespace RetroArch
{
class CrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDef : public ShaderDef
{
public:
	CrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDef() : ShaderDef{}
	{
		Name = "crt-guest-advanced-ntsc-pass1";
		VertexByteCode = RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs::sVertexByteCode);
		VertexHash = RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs::sVertexHash;
		FragmentByteCode = RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs::sFragmentByteCode);
		FragmentHash = RetroArchCrtShadersGuestAdvancedCrtGuestAdvancedNtscPass1ShaderDefs::sFragmentHash;
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SIGMA_HOR", -1, 52, 4, 0.100000f, 7.000000f, 0.800000f, 0.025000f, "Horizontal Blur Sigma"));
		Params.push_back(ShaderParam("HSHARPNESS", -1, 56, 4, 1.000000f, 8.000000f, 1.600000f, 0.050000f, "Horizontal Filter Range"));
		Params.push_back(ShaderParam("S_SHARP", -1, 60, 4, 0.000000f, 3.000000f, 1.200000f, 0.050000f, "Substractive Sharpness"));
		Params.push_back(ShaderParam("HARNG", -1, 64, 4, 0.000000f, 4.000000f, 0.300000f, 0.050000f, "Substractive Sharpness Ringing"));
		Params.push_back(ShaderParam("HSHARP", -1, 68, 4, 0.000000f, 2.000000f, 1.200000f, 0.100000f, "Sharpness Definition"));
		Params.push_back(ShaderParam("spike", -1, 72, 4, 0.000000f, 2.000000f, 1.000000f, 0.100000f, "Scanline Spike Removal"));
		Params.push_back(ShaderParam("internal_res", -1, 76, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("MAXS", -1, 80, 4, 0.000000f, 0.300000f, 0.180000f, 0.010000f, "Maximum Sharpness"));
		Params.push_back(ShaderParam("auto_res", -1, 84, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "SNES/Amiga Hi-Res Auto Mode"));
		Samplers.push_back(ShaderSampler("LinearizePass", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
