/*
ShaderGlass shader crt/shaders/cathode-retro\cathode-retro-util-tonemap-and-downsample-vert imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/crt/shaders/cathode-retro/cathode-retro-util-tonemap-and-downsample-vert.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This shader does a tonemap and 1D downsample of a texture, which is intended to be for the diffusion emulation in
//  the CRT side of the whole Cathode Retro process. It's worth noting that in practice we're not doing a true 2x
//  downsample, it's going to be something in that ballpark, but not exact. However, the output of this shader is going
//  to be blurred so it doesn't actually matter in practice.
// This is a lanczos2 kernel for a nice 2x downsample. I wish I'd documented how I generated it but I didn't so instead
//  this is what you get. Sorry about that.
//static const float k_lanczos2[8] = {-0.009, -0.042, 0.117, 0.434, 0.434, 0.117, -0.042, -0.009};
// However, it's been optimized to take advantage of the linear filtering using the same technique I used for the
//  gaussian filters at https://drilian.com/gaussian-kernel/
// That means it's only 4 texture samples for an 8-tap lanczos, which is, if I did my math correctly, twice as good!
//DECLARE_TEXTURE2D(g_sourceTexture, g_sampler);
// The direction we want to apply the downsample.
// Calculate the luminosity of the input.
// Calculate the desired output luminosity.
// Apply the luminosity scaling.

*/

#pragma once

namespace RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,98,121,
196,154,194,61,252,4,
201,138,51,20,103,122,
157,45,1,0,0,0,
176,11,0,0,5,0,
0,0,52,0,0,0,
76,9,0,0,152,9,
0,0,240,9,0,0,
20,11,0,0,82,68,
69,70,16,9,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
229,8,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,35,0,
0,0,120,0,0,0,
224,0,0,0,0,0,
0,0,0,0,0,0,
240,5,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,4,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,40,6,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,68,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,104,6,0,0,
80,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
168,6,0,0,84,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,189,6,
0,0,88,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,209,6,0,0,
92,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
227,6,0,0,96,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,251,6,
0,0,100,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,9,7,0,0,
104,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
27,7,0,0,108,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,44,7,
0,0,112,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,59,7,0,0,
116,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
76,7,0,0,120,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,94,7,
0,0,124,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,114,7,0,0,
128,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
136,7,0,0,132,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,148,7,
0,0,136,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,163,7,0,0,
140,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
181,7,0,0,144,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,202,7,
0,0,148,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,223,7,0,0,
152,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
250,7,0,0,156,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,14,8,
0,0,160,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,30,8,0,0,
164,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
49,8,0,0,168,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,68,8,
0,0,172,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,85,8,0,0,
176,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
104,8,0,0,180,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,122,8,
0,0,184,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,145,8,0,0,
188,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
163,8,0,0,192,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,181,8,
0,0,196,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,193,8,0,0,
200,0,0,0,4,0,
0,0,0,0,0,0,
132,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
205,8,0,0,204,0,
0,0,4,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,8,
0,0,208,0,0,0,
4,0,0,0,0,0,
0,0,132,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
251,5,0,0,103,108,
111,98,97,108,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
102,108,111,97,116,52,
0,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,60,6,
0,0,103,108,111,98,
97,108,95,99,98,95,
102,105,114,115,116,95,
115,116,97,114,116,0,
102,108,111,97,116,0,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,126,6,0,0,
103,108,111,98,97,108,
95,99,98,95,108,97,
115,116,95,115,116,97,
114,116,0,103,108,111,
98,97,108,95,99,98,
95,112,104,97,115,101,
95,105,110,99,0,103,
108,111,98,97,108,95,
99,98,95,115,97,109,
112,108,101,115,0,103,
108,111,98,97,108,95,
104,111,114,122,95,116,
114,97,99,107,95,115,
99,97,108,101,0,103,
108,111,98,97,108,95,
109,105,110,108,117,109,
0,103,108,111,98,97,
108,95,99,111,108,111,
114,112,111,119,101,114,
0,103,108,111,98,97,
108,95,99,111,109,112,
111,115,105,116,101,0,
103,108,111,98,97,108,
95,115,105,103,95,112,
97,100,0,103,108,111,
98,97,108,95,103,104,
111,115,116,95,118,105,
115,0,103,108,111,98,
97,108,95,103,104,111,
115,116,95,100,105,115,
116,0,103,108,111,98,
97,108,95,103,104,111,
115,116,95,115,112,114,
101,97,100,0,103,108,
111,98,97,108,95,110,
111,105,115,101,95,115,
116,114,101,110,103,116,
104,0,103,108,111,98,
97,108,95,116,105,110,
116,0,103,108,111,98,
97,108,95,99,97,116,
95,115,97,116,0,103,
108,111,98,97,108,95,
99,97,116,95,98,114,
105,103,104,116,0,103,
108,111,98,97,108,95,
99,97,116,95,119,104,
105,116,101,95,108,118,
108,0,103,108,111,98,
97,108,95,99,97,116,
95,98,108,97,99,107,
95,108,118,108,0,103,
108,111,98,97,108,95,
116,101,109,112,95,97,
114,116,105,102,97,99,
116,95,98,108,101,110,
100,0,103,108,111,98,
97,108,95,98,108,117,
114,83,116,114,101,110,
103,116,104,0,103,108,
111,98,97,108,95,115,
116,101,112,83,105,122,
101,0,103,108,111,98,
97,108,95,112,101,114,
115,105,115,116,101,110,
99,101,0,103,108,111,
98,97,108,95,115,99,
97,110,95,105,110,116,
101,110,115,0,103,108,
111,98,97,108,95,100,
105,102,102,117,115,105,
111,110,0,103,108,111,
98,97,108,95,109,97,
115,107,95,105,110,116,
101,110,115,0,103,108,
111,98,97,108,95,109,
97,115,107,95,100,101,
112,116,104,0,103,108,
111,98,97,108,95,99,
97,116,95,109,97,115,
107,95,112,105,99,107,
101,114,0,103,108,111,
98,97,108,95,109,97,
115,107,95,115,99,97,
108,101,0,103,108,111,
98,97,108,95,97,110,
105,109,95,110,111,105,
115,101,0,103,108,111,
98,97,108,95,100,105,
118,48,0,103,108,111,
98,97,108,95,100,105,
118,49,0,103,108,111,
98,97,108,95,100,105,
118,50,0,103,108,111,
98,97,108,95,100,105,
118,51,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,171,171,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,91,203,
223,179,200,98,72,98,
239,3,218,153,84,108,
16,31,1,0,0,0,
80,16,0,0,5,0,
0,0,52,0,0,0,
16,12,0,0,68,12,
0,0,120,12,0,0,
180,15,0,0,82,68,
69,70,212,11,0,0,
2,0,0,0,220,0,
0,0,4,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
171,11,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
188,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,204,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,211,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
215,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,95,83,111,117,
114,99,101,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,85,66,79,0,80,
117,115,104,0,211,0,
0,0,35,0,0,0,
12,1,0,0,224,0,
0,0,0,0,0,0,
0,0,0,0,215,0,
0,0,9,0,0,0,
124,9,0,0,96,0,
0,0,0,0,0,0,
0,0,0,0,132,6,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,152,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,188,6,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
216,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
252,6,0,0,80,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,60,7,
0,0,84,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,81,7,0,0,
88,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
101,7,0,0,92,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,119,7,
0,0,96,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,143,7,0,0,
100,0,0,0,4,0,
0,0,2,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
157,7,0,0,104,0,
0,0,4,0,0,0,
2,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,175,7,
0,0,108,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,192,7,0,0,
112,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
207,7,0,0,116,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,224,7,
0,0,120,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,242,7,0,0,
124,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
6,8,0,0,128,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,28,8,
0,0,132,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,40,8,0,0,
136,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
55,8,0,0,140,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,73,8,
0,0,144,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,94,8,0,0,
148,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
115,8,0,0,152,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,142,8,
0,0,156,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,162,8,0,0,
160,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
178,8,0,0,164,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,197,8,
0,0,168,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,216,8,0,0,
172,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
233,8,0,0,176,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,252,8,
0,0,180,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,14,9,0,0,
184,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
37,9,0,0,188,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,55,9,
0,0,192,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,73,9,0,0,
196,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
85,9,0,0,200,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,97,9,
0,0,204,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,109,9,0,0,
208,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,108,111,98,97,108,
95,77,86,80,0,102,
108,111,97,116,52,120,
52,0,2,0,3,0,
4,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,143,6,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,208,6,0,0,
103,108,111,98,97,108,
95,99,98,95,102,105,
114,115,116,95,115,116,
97,114,116,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
18,7,0,0,103,108,
111,98,97,108,95,99,
98,95,108,97,115,116,
95,115,116,97,114,116,
0,103,108,111,98,97,
108,95,99,98,95,112,
104,97,115,101,95,105,
110,99,0,103,108,111,
98,97,108,95,99,98,
95,115,97,109,112,108,
101,115,0,103,108,111,
98,97,108,95,104,111,
114,122,95,116,114,97,
99,107,95,115,99,97,
108,101,0,103,108,111,
98,97,108,95,109,105,
110,108,117,109,0,103,
108,111,98,97,108,95,
99,111,108,111,114,112,
111,119,101,114,0,103,
108,111,98,97,108,95,
99,111,109,112,111,115,
105,116,101,0,103,108,
111,98,97,108,95,115,
105,103,95,112,97,100,
0,103,108,111,98,97,
108,95,103,104,111,115,
116,95,118,105,115,0,
103,108,111,98,97,108,
95,103,104,111,115,116,
95,100,105,115,116,0,
103,108,111,98,97,108,
95,103,104,111,115,116,
95,115,112,114,101,97,
100,0,103,108,111,98,
97,108,95,110,111,105,
115,101,95,115,116,114,
101,110,103,116,104,0,
103,108,111,98,97,108,
95,116,105,110,116,0,
103,108,111,98,97,108,
95,99,97,116,95,115,
97,116,0,103,108,111,
98,97,108,95,99,97,
116,95,98,114,105,103,
104,116,0,103,108,111,
98,97,108,95,99,97,
116,95,119,104,105,116,
101,95,108,118,108,0,
103,108,111,98,97,108,
95,99,97,116,95,98,
108,97,99,107,95,108,
118,108,0,103,108,111,
98,97,108,95,116,101,
109,112,95,97,114,116,
105,102,97,99,116,95,
98,108,101,110,100,0,
103,108,111,98,97,108,
95,98,108,117,114,83,
116,114,101,110,103,116,
104,0,103,108,111,98,
97,108,95,115,116,101,
112,83,105,122,101,0,
103,108,111,98,97,108,
95,112,101,114,115,105,
115,116,101,110,99,101,
0,103,108,111,98,97,
108,95,115,99,97,110,
95,105,110,116,101,110,
115,0,103,108,111,98,
97,108,95,100,105,102,
102,117,115,105,111,110,
0,103,108,111,98,97,
108,95,109,97,115,107,
95,105,110,116,101,110,
115,0,103,108,111,98,
97,108,95,109,97,115,
107,95,100,101,112,116,
104,0,103,108,111,98,
97,108,95,99,97,116,
95,109,97,115,107,95,
112,105,99,107,101,114,
0,103,108,111,98,97,
108,95,109,97,115,107,
95,115,99,97,108,101,
0,103,108,111,98,97,
108,95,97,110,105,109,
95,110,111,105,115,101,
0,103,108,111,98,97,
108,95,100,105,118,48,
0,103,108,111,98,97,
108,95,100,105,118,49,
0,103,108,111,98,97,
108,95,100,105,118,50,
0,103,108,111,98,97,
108,95,100,105,118,51,
0,171,171,171,228,10,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,216,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,246,10,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
216,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
10,11,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,216,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,28,11,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,52,11,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,88,11,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
216,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
113,11,0,0,80,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,126,11,
0,0,84,0,0,0,
4,0,0,0,0,0,
0,0,24,7,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,139,11,0,0,
88,0,0,0,4,0,
0,0,0,0,0,0,
24,7,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
153,11,0,0,92,0,
0,0,4,0,0,0,
0,0,0,0,24,7,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,46,11,0,0,
112,97,114,97,109,115,
95,70,105,110,97,108,
86,105,101,119,112,111,
114,116,83,105,122,101,
0,112,97,114,97,109,
115,95,119,97,114,112,
88,0,112,97,114,97,
109,115,95,119,97,114,
112,89,0,112,97,114,
97,109,115,95,99,111,
114,110,101,114,0,112,
97,114,97,109,115,95,
110,111,105,115,101,95,
115,101,101,100,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,52,3,
0,0,80,0,0,0,
205,0,0,0,106,8,
0,1,53,24,0,0,
18,0,0,0,75,75,
43,192,96,229,80,189,
0,0,0,0,0,0,
0,0,255,91,54,191,
86,14,13,63,0,0,
0,0,0,0,0,0,
254,91,54,63,86,14,
13,63,0,0,0,0,
0,0,0,0,75,75,
43,64,96,229,80,189,
0,0,0,0,0,0,
0,0,89,0,0,4,
70,142,32,0,0,0,
0,0,7,0,0,0,
89,0,0,4,70,142,
32,0,1,0,0,0,
1,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
4,0,0,0,0,0,
0,12,50,0,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,0,64,0,0,
0,0,0,0,0,0,
150,133,32,128,65,0,
0,0,0,0,0,0,
6,0,0,0,67,0,
0,6,194,0,16,0,
0,0,0,0,6,132,
32,0,1,0,0,0,
0,0,0,0,14,0,
0,10,194,0,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,128,63,
166,14,16,0,0,0,
0,0,54,0,0,8,
242,0,16,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,54,0,
0,5,18,0,16,0,
2,0,0,0,1,64,
0,0,0,0,0,0,
48,0,0,1,33,0,
0,7,34,0,16,0,
2,0,0,0,10,0,
16,0,2,0,0,0,
1,64,0,0,4,0,
0,0,3,0,4,3,
26,0,16,0,2,0,
0,0,50,0,0,10,
98,0,16,0,2,0,
0,0,166,11,16,0,
0,0,0,0,6,144,
144,0,10,0,16,0,
2,0,0,0,6,17,
16,0,0,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
242,0,16,0,3,0,
0,0,150,5,16,0,
2,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,50,0,0,10,
242,0,16,0,1,0,
0,0,70,14,16,0,
3,0,0,0,86,149,
144,0,10,0,16,0,
2,0,0,0,70,14,
16,0,1,0,0,0,
30,0,0,7,18,0,
16,0,2,0,0,0,
10,0,16,0,2,0,
0,0,1,64,0,0,
1,0,0,0,22,0,
0,1,16,0,0,10,
66,0,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
0,0,0,8,130,0,
16,0,0,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
42,0,16,0,0,0,
0,0,0,0,0,8,
18,0,16,0,0,0,
0,0,10,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,14,32,
0,7,18,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,47,0,0,5,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,56,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,25,0,0,5,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,14,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,56,0,0,7,
114,32,16,0,0,0,
0,0,6,0,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,24,0,0,0,
4,0,0,0,4,0,
0,0,2,0,0,0,
14,0,0,0,2,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const uint32_t sVertexHash[] = 
{
0x4cbac5b3,0xa9f1ab30,0xff2a5ee8,0x52f5f73c,0x9bfa596b,0x4c0d82f4,
0xd74c81fc,0xb4a0a039
};


static const uint32_t sFragmentHash[] =
{
0x71206365,0x5e416cad,0x313574bb,0x39315659,0x59d7655a,0x3a81adbb,
0xaf0814fd,0xb2791f93
};

}

namespace RetroArch
{
class CrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDef : public ShaderDef
{
public:
	CrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDef() : ShaderDef{}
	{
		Name = "cathode-retro-util-tonemap-and-downsample-vert";
		VertexByteCode = RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs::sVertexByteCode);
		VertexHash = RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs::sVertexHash;
		FragmentByteCode = RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs::sFragmentByteCode);
		FragmentHash = RetroArchCrtShadersCathodeRetroCathodeRetroUtilTonemapAndDownsampleVertShaderDefs::sFragmentHash;
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("cb_first_start", 0, 80, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Color Burst Phase First Scanline"));
		Params.push_back(ShaderParam("cb_last_start", 0, 84, 4, 0.000000f, 100.000000f, 1.000000f, 1.000000f, "CB Phase Prev Frame First Scanline"));
		Params.push_back(ShaderParam("cb_phase_inc", 0, 88, 4, 0.000000f, 3.000000f, 1.666660f, 0.010000f, "Color Burst Phase Increment"));
		Params.push_back(ShaderParam("cb_samples", 0, 92, 4, 1.000000f, 100.000000f, 2.000000f, 1.000000f, "Samples Per Color Burst Cyle"));
		Params.push_back(ShaderParam("horz_track_scale", 0, 96, 4, 0.000000f, 3.000000f, 1.000000f, 0.050000f, "Horizontal Tracking Instability Scale"));
		Params.push_back(ShaderParam("minlum", 0, 100, 4, 0.000000f, 1.000000f, 1.000000f, 0.010000f, "Minimum Luminance"));
		Params.push_back(ShaderParam("colorpower", 0, 104, 4, 0.000000f, 2.000000f, 1.000000f, 0.010000f, "Color Power"));
		Params.push_back(ShaderParam("composite", 0, 108, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Blend Chrome/Luma (aka Composite)"));
		Params.push_back(ShaderParam("sig_pad", 0, 112, 4, 0.000000f, 10.000000f, 0.000000f, 1.000000f, "Signal Padding at Edges"));
		Params.push_back(ShaderParam("ghost_vis", 0, 116, 4, 0.000000f, 1.000000f, 0.150000f, 0.010000f, "Ghost Visibility"));
		Params.push_back(ShaderParam("ghost_dist", 0, 120, 4, 0.000000f, 100.000000f, 1.000000f, 1.000000f, "Ghost Delay Cycles"));
		Params.push_back(ShaderParam("ghost_spread", 0, 124, 4, 0.000000f, 100.000000f, 1.000000f, 1.000000f, "Ghost Spread Cycles"));
		Params.push_back(ShaderParam("noise_strength", 0, 128, 4, 0.000000f, 1.000000f, 0.150000f, 0.010000f, "Artifact Noise Strength"));
		Params.push_back(ShaderParam("tint", 0, 132, 4, -1.000000f, 1.000000f, 0.000000f, 0.010000f, "Tint Knob Adjustment"));
		Params.push_back(ShaderParam("cat_sat", 0, 136, 4, 0.000000f, 2.000000f, 1.000000f, 0.010000f, "Saturation"));
		Params.push_back(ShaderParam("cat_bright", 0, 140, 4, 0.000000f, 2.000000f, 1.000000f, 0.010000f, "Brightness"));
		Params.push_back(ShaderParam("cat_white_lvl", 0, 144, 4, 0.000000f, 2.000000f, 1.000000f, 0.010000f, "White Level"));
		Params.push_back(ShaderParam("cat_black_lvl", 0, 148, 4, 0.000000f, 2.000000f, 0.000000f, 0.010000f, "Black Level"));
		Params.push_back(ShaderParam("temp_artifact_blend", 0, 152, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Temporal Artifact Blending (Toggle)"));
		Params.push_back(ShaderParam("blurStrength", 0, 156, 4, -1.000000f, 1.000000f, -0.150000f, 0.010000f, "Sharpness"));
		Params.push_back(ShaderParam("stepSize", 0, 160, 4, 1.000000f, 100.000000f, 1.000000f, 1.000000f, "Texels Between Each Sample"));
		Params.push_back(ShaderParam("persistence", 0, 164, 4, 0.000000f, 1.000000f, 0.250000f, 0.010000f, "Phosphor Persistence"));
		Params.push_back(ShaderParam("scan_intens", 0, 168, 4, 0.000000f, 1.000000f, 0.400000f, 0.010000f, "Scanline Intensity"));
		Params.push_back(ShaderParam("diffusion", 0, 172, 4, 0.000000f, 1.000000f, 0.500000f, 0.010000f, "Diffusion Strength"));
		Params.push_back(ShaderParam("mask_intens", 0, 176, 4, 0.000000f, 1.000000f, 0.400000f, 0.010000f, "Mask Strength"));
		Params.push_back(ShaderParam("mask_depth", 0, 180, 4, 0.000000f, 1.000000f, 0.300000f, 0.010000f, "Mask Background Darkness"));
		Params.push_back(ShaderParam("cat_mask_picker", 0, 184, 4, 0.000000f, 3.000000f, 1.000000f, 1.000000f, "Mask (0=none, 1=aperture, 2=slot, 3=shadow)"));
		Params.push_back(ShaderParam("mask_scale", 0, 188, 4, 1.000000f, 200.000000f, 1.000000f, 1.000000f, "Mask Scale (2 or 3 for 4K)"));
		Params.push_back(ShaderParam("anim_noise", 0, 192, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Animate Anti-Moire Noise"));
		Params.push_back(ShaderParam("div0", 0, 196, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, "--------Screen Settings--------"));
		Params.push_back(ShaderParam("div1", 0, 200, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, "---------TV Knob Settings---------"));
		Params.push_back(ShaderParam("div2", 0, 204, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, "---------Signal Parameters---------"));
		Params.push_back(ShaderParam("div3", 0, 208, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, "-------Artifact Settings-------"));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FinalViewportSize", -1, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("warpX", -1, 80, 4, 0.000000f, 1.000000f, 0.200000f, 0.010000f, "Barrel Distortion X"));
		Params.push_back(ShaderParam("warpY", -1, 84, 4, 0.000000f, 1.000000f, 0.100000f, 0.010000f, "Barrel Distortion Y"));
		Params.push_back(ShaderParam("corner", -1, 88, 4, 0.000000f, 1.000000f, 0.030000f, 0.010000f, "Rounded Corner Size"));
		Params.push_back(ShaderParam("noise_seed", -1, 92, 4, 179.000000f, 313.000000f, 247.000000f, 1.000000f, "Noise Seed"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
