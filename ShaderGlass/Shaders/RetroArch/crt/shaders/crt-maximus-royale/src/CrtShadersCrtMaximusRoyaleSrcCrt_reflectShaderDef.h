/*
ShaderGlass shader crt/shaders/crt-maximus-royale/src\crt_reflect imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/crt/shaders/crt-maximus-royale/src/crt_reflect.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

/////////////////////////////  GPL LICENSE NOTICE  /////////////////////////////
//  crt-maximus-royale: A fully customizable extension for crt-royale shader,
//  inside a TV / MONITOR BOX with backlight and some other cool stuff.
//  Copyright (C) 2022 DigiDwrf
//
//  This program is free software; you can redistribute it and/or modify it
//  under the terms of the GNU General Public License as published by the Free
//  Software Foundation; either version 2 of the License, or any later version.
//
//  This program is distributed in the hope that it will be useful, but WITHOUT
//  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
//  more details.
//
//  You should have received a copy of the GNU General Public License along with
//  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
//  Place, Suite 330, Boston, MA 02111-1307 USA
////CALCULATE REFLEXION COORDS 1st pass////
////CALCULATE REFLEXION COORDS 2nd pass////

*/

#pragma once

namespace RetroArchCrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,183,13,
251,49,167,40,151,153,
48,215,239,248,83,236,
56,86,1,0,0,0,
180,5,0,0,5,0,
0,0,52,0,0,0,
76,2,0,0,152,2,
0,0,32,3,0,0,
24,5,0,0,82,68,
69,70,16,2,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
232,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,3,0,0,0,
24,1,0,0,16,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,144,1,
0,0,0,0,0,0,
4,0,0,0,2,0,
0,0,168,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,1,0,0,
4,0,0,0,4,0,
0,0,2,0,0,0,
168,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
218,1,0,0,8,0,
0,0,4,0,0,0,
2,0,0,0,168,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,99,
114,116,70,114,97,109,
101,0,102,108,111,97,
116,0,171,171,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
160,1,0,0,112,97,
114,97,109,115,95,88,
115,99,97,108,101,0,
112,97,114,97,109,115,
95,89,115,99,97,108,
101,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,128,0,0,0,
4,0,0,0,8,0,
0,0,104,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,104,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,3,
0,0,104,0,0,0,
2,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,12,
0,0,113,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
2,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
240,1,0,0,80,0,
1,0,124,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,4,0,
0,0,89,0,0,4,
70,142,32,0,1,0,
0,0,1,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
101,0,0,3,194,32,
16,0,0,0,0,0,
101,0,0,3,50,32,
16,0,1,0,0,0,
103,0,0,4,242,32,
16,0,2,0,0,0,
1,0,0,0,104,0,
0,2,2,0,0,0,
0,0,0,10,242,0,
16,0,0,0,0,0,
70,20,16,0,1,0,
0,0,2,64,0,0,
0,0,0,191,0,0,
0,191,0,0,0,191,
0,0,0,191,56,0,
0,10,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
2,64,0,0,11,8,
134,63,188,156,130,63,
11,8,134,63,236,153,
132,63,24,0,0,8,
18,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,64,10,128,
32,0,1,0,0,0,
0,0,0,0,55,0,
0,9,194,32,16,0,
0,0,0,0,6,0,
16,0,1,0,0,0,
166,14,16,0,0,0,
0,0,6,4,16,0,
0,0,0,0,54,0,
0,5,50,32,16,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
56,0,0,11,50,32,
16,0,1,0,0,0,
2,64,0,0,10,215,
35,60,10,215,35,60,
0,0,0,0,0,0,
0,0,150,133,32,0,
1,0,0,0,0,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,2,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,11,0,
0,0,2,0,0,0,
0,0,0,0,6,0,
0,0,8,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,255,145,
177,216,191,174,36,11,
30,82,18,181,219,202,
253,115,1,0,0,0,
216,11,0,0,5,0,
0,0,52,0,0,0,
24,2,0,0,124,2,
0,0,176,2,0,0,
60,11,0,0,82,68,
69,70,220,1,0,0,
1,0,0,0,204,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
180,1,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,1,0,
0,0,181,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,3,0,
0,0,1,0,0,0,
13,0,0,0,197,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,109,97,120,105,109,
117,115,95,114,101,102,
112,97,115,115,95,115,
97,109,112,108,101,114,
0,109,97,120,105,109,
117,115,95,114,101,102,
112,97,115,115,0,80,
117,115,104,0,171,171,
197,0,0,0,3,0,
0,0,228,0,0,0,
16,0,0,0,0,0,
0,0,0,0,0,0,
92,1,0,0,0,0,
0,0,4,0,0,0,
2,0,0,0,116,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,152,1,
0,0,4,0,0,0,
4,0,0,0,0,0,
0,0,116,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,166,1,0,0,
8,0,0,0,4,0,
0,0,0,0,0,0,
116,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,99,114,116,70,114,
97,109,101,0,102,108,
111,97,116,0,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,108,1,0,0,
112,97,114,97,109,115,
95,88,115,99,97,108,
101,0,112,97,114,97,
109,115,95,89,115,99,
97,108,101,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,73,83,71,78,
92,0,0,0,3,0,
0,0,8,0,0,0,
80,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,0,0,0,
80,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,12,0,0,
80,0,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,132,8,0,0,
80,0,0,0,33,2,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
1,0,0,0,90,0,
0,3,0,96,16,0,
3,0,0,0,88,24,
0,4,0,112,16,0,
3,0,0,0,85,85,
0,0,98,16,0,3,
194,16,16,0,0,0,
0,0,98,16,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
6,0,0,0,24,0,
0,11,50,0,16,0,
0,0,0,0,2,64,
0,0,0,0,64,64,
0,0,128,64,0,0,
0,0,0,0,0,0,
6,128,32,0,1,0,
0,0,0,0,0,0,
55,0,0,9,34,0,
16,0,1,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
143,194,85,63,1,64,
0,0,0,0,128,63,
54,0,0,8,82,0,
16,0,1,0,0,0,
2,64,0,0,41,92,
15,62,0,0,0,0,
164,112,125,63,0,0,
0,0,55,0,0,12,
114,0,16,0,0,0,
0,0,86,5,16,0,
0,0,0,0,2,64,
0,0,205,204,204,61,
31,133,107,63,225,122,
132,63,0,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,7,
146,0,16,0,0,0,
0,0,6,0,16,0,
0,0,0,0,246,27,
16,0,0,0,0,0,
56,0,0,10,146,0,
16,0,0,0,0,0,
6,12,16,0,0,0,
0,0,2,64,0,0,
0,0,64,64,0,0,
0,0,0,0,0,0,
0,0,128,64,77,0,
0,6,0,208,0,0,
146,0,16,0,0,0,
0,0,6,12,16,0,
0,0,0,0,14,0,
0,7,146,0,16,0,
0,0,0,0,166,30,
16,0,0,0,0,0,
6,12,16,0,0,0,
0,0,14,0,0,7,
50,0,16,0,0,0,
0,0,198,0,16,0,
0,0,0,0,86,5,
16,0,0,0,0,0,
14,0,0,7,50,0,
16,0,1,0,0,0,
70,0,16,0,0,0,
0,0,166,10,16,0,
0,0,0,0,0,0,
0,10,50,0,16,0,
1,0,0,0,70,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,0,0,
0,0,14,0,0,7,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
0,0,0,10,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,0,
0,0,0,0,49,0,
0,10,194,0,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,205,204,
76,189,205,204,76,189,
6,4,16,0,0,0,
0,0,49,0,0,10,
50,0,16,0,2,0,
0,0,70,0,16,0,
0,0,0,0,2,64,
0,0,102,102,134,63,
102,102,134,63,0,0,
0,0,0,0,0,0,
1,0,0,7,130,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,10,0,16,0,
2,0,0,0,1,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,0,0,7,
130,0,16,0,0,0,
0,0,26,0,16,0,
2,0,0,0,58,0,
16,0,0,0,0,0,
31,0,4,3,58,0,
16,0,0,0,0,0,
0,0,0,11,194,0,
16,0,1,0,0,0,
6,4,16,128,65,0,
0,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,128,63,0,0,
128,63,56,0,0,10,
50,0,16,0,2,0,
0,0,70,0,16,0,
1,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,0,0,0,0,0,
50,0,0,15,194,0,
16,0,2,0,0,0,
6,4,16,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,63,
0,0,0,63,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,191,0,0,0,191,
14,0,0,10,50,0,
16,0,3,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,0,0,
0,0,70,16,16,0,
1,0,0,0,50,0,
0,12,194,0,16,0,
0,0,0,0,6,4,
16,0,3,0,0,0,
166,10,16,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,191,
0,0,0,191,49,0,
0,10,50,0,16,0,
3,0,0,0,70,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,49,0,0,8,
194,0,16,0,3,0,
0,0,6,4,16,128,
65,0,0,0,2,0,
0,0,86,1,16,0,
1,0,0,0,1,0,
0,7,50,0,16,0,
3,0,0,0,230,10,
16,0,3,0,0,0,
70,0,16,0,3,0,
0,0,49,0,0,8,
50,0,16,0,2,0,
0,0,70,0,16,128,
65,0,0,0,2,0,
0,0,182,15,16,0,
1,0,0,0,1,0,
0,7,50,0,16,0,
2,0,0,0,70,0,
16,0,2,0,0,0,
70,0,16,0,3,0,
0,0,0,0,0,9,
98,0,16,0,3,0,
0,0,166,11,16,128,
65,0,0,0,0,0,
0,0,6,1,16,128,
65,0,0,0,1,0,
0,0,50,0,0,12,
50,0,16,0,4,0,
0,0,182,15,16,0,
0,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,0,0,0,0,0,
230,10,16,0,1,0,
0,0,50,0,0,13,
194,0,16,0,4,0,
0,0,6,4,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,63,0,0,0,63,
246,11,16,128,65,0,
0,0,0,0,0,0,
50,0,0,9,130,0,
16,0,3,0,0,0,
26,0,16,0,1,0,
0,0,10,0,16,0,
4,0,0,0,42,0,
16,0,4,0,0,0,
55,0,0,9,162,0,
16,0,3,0,0,0,
6,0,16,0,2,0,
0,0,86,13,16,0,
3,0,0,0,6,4,
16,0,1,0,0,0,
49,0,0,10,82,0,
16,0,4,0,0,0,
2,64,0,0,0,0,
128,63,0,0,0,0,
0,0,128,63,0,0,
0,0,6,1,16,0,
1,0,0,0,49,0,
0,7,50,0,16,0,
5,0,0,0,230,10,
16,0,2,0,0,0,
22,5,16,0,1,0,
0,0,1,0,0,7,
82,0,16,0,4,0,
0,0,6,2,16,0,
4,0,0,0,6,1,
16,0,5,0,0,0,
49,0,0,7,82,0,
16,0,2,0,0,0,
166,11,16,0,2,0,
0,0,246,14,16,0,
1,0,0,0,1,0,
0,7,82,0,16,0,
2,0,0,0,6,2,
16,0,2,0,0,0,
6,2,16,0,4,0,
0,0,0,0,0,8,
82,0,16,0,4,0,
0,0,6,1,16,128,
65,0,0,0,1,0,
0,0,166,11,16,0,
0,0,0,0,0,0,
0,10,98,0,16,0,
5,0,0,0,6,2,
16,0,4,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,64,
0,0,0,64,0,0,
0,0,50,0,0,13,
82,0,16,0,4,0,
0,0,246,14,16,0,
0,0,0,0,2,64,
0,0,0,0,0,64,
0,0,0,0,0,0,
0,64,0,0,0,0,
166,11,16,128,65,0,
0,0,1,0,0,0,
0,0,0,10,82,0,
16,0,4,0,0,0,
6,2,16,0,4,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
0,0,0,0,128,63,
0,0,0,0,50,0,
0,13,194,0,16,0,
0,0,0,0,166,14,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,63,0,0,
0,63,246,11,16,128,
65,0,0,0,0,0,
0,0,50,0,0,9,
130,0,16,0,5,0,
0,0,58,0,16,0,
3,0,0,0,10,0,
16,0,4,0,0,0,
42,0,16,0,0,0,
0,0,55,0,0,9,
194,0,16,0,1,0,
0,0,6,0,16,0,
2,0,0,0,86,13,
16,0,5,0,0,0,
86,13,16,0,3,0,
0,0,50,0,0,9,
18,0,16,0,3,0,
0,0,42,0,16,0,
1,0,0,0,26,0,
16,0,4,0,0,0,
58,0,16,0,4,0,
0,0,55,0,0,9,
194,0,16,0,1,0,
0,0,86,5,16,0,
2,0,0,0,6,8,
16,0,3,0,0,0,
166,14,16,0,1,0,
0,0,50,0,0,9,
18,0,16,0,5,0,
0,0,42,0,16,0,
1,0,0,0,42,0,
16,0,4,0,0,0,
58,0,16,0,0,0,
0,0,55,0,0,9,
194,0,16,0,0,0,
0,0,166,10,16,0,
2,0,0,0,6,8,
16,0,5,0,0,0,
166,14,16,0,1,0,
0,0,18,0,0,1,
54,0,0,5,194,0,
16,0,0,0,0,0,
6,4,16,0,1,0,
0,0,21,0,0,1,
49,0,0,10,194,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,6,4,16,0,
1,0,0,0,49,0,
0,10,50,0,16,0,
1,0,0,0,70,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,0,0,0,0,
0,0,1,0,0,7,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
1,0,0,7,18,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,1,0,
0,7,18,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,55,0,0,9,
50,0,16,0,0,0,
0,0,6,0,16,0,
1,0,0,0,70,0,
16,0,0,0,0,0,
230,10,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,242,32,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,61,0,
0,0,6,0,0,0,
0,0,0,0,3,0,
0,0,37,0,0,0,
0,0,0,0,10,0,
0,0,2,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
7,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class CrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDef : public ShaderDef
{
public:
	CrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDef() : ShaderDef{}
	{
		Name = "crt_reflect";
		VertexByteCode = RetroArchCrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersCrtMaximusRoyaleSrcCrt_reflectShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("crtFrame", -1, 0, 4, 1.000000f, 4.000000f, 1.000000f, 1.000000f, "CRT Frame"));
		Params.push_back(ShaderParam("Xscale", -1, 4, 4, 75.000000f, 150.000000f, 100.000000f, 0.100000f, "Horizontal Scale %"));
		Params.push_back(ShaderParam("Yscale", -1, 8, 4, 75.000000f, 150.000000f, 100.000000f, 0.100000f, "Vertical Scale %"));
		Samplers.push_back(ShaderSampler("maximus_refpass", 3));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
