/*
ShaderGlass shader crt/shaders\fake-crt-geom imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/crt/shaders/fake-crt-geom.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// Simple scanlines with curvature and mask effects lifted from crt-geom
// original by hunterk, edited by DariusG
// Parameter lines go here:
// Distortion of scanlines, and end of screen alpha.
// mask calculation
// cgwg mask.
// apply the mask; looks bad with vert scanlines so make them mutually exclusive
// hacky clamp fix for GLES
// re-apply the gamma curve for the mask path

*/

#pragma once

namespace RetroArchCrtShadersFakeCrtGeomShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,7,90,
244,202,208,136,239,143,
61,205,42,234,171,96,
146,251,1,0,0,0,
160,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
4,3,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,84,111,
195,214,152,55,37,180,
203,181,37,57,41,1,
179,236,1,0,0,0,
12,16,0,0,5,0,
0,0,52,0,0,0,
220,4,0,0,16,5,
0,0,68,5,0,0,
112,15,0,0,82,68,
69,70,160,4,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
118,4,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,1,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,14,0,0,0,
208,0,0,0,96,0,
0,0,0,0,0,0,
0,0,0,0,0,3,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,28,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,64,3,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
28,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
84,3,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,28,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,102,3,
0,0,48,0,0,0,
4,0,0,0,2,0,
0,0,128,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,164,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
200,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
236,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,200,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,249,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,200,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,6,4,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
200,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
26,4,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,200,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,38,4,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,200,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,51,4,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
200,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
72,4,0,0,80,0,
0,0,4,0,0,0,
2,0,0,0,200,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,89,4,
0,0,84,0,0,0,
4,0,0,0,2,0,
0,0,200,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,101,4,0,0,
88,0,0,0,4,0,
0,0,2,0,0,0,
200,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,83,111,117,114,99,
101,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
18,3,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,115,
95,70,114,97,109,101,
67,111,117,110,116,0,
100,119,111,114,100,0,
171,171,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,120,3,
0,0,112,97,114,97,
109,115,95,83,67,65,
78,76,73,78,69,95,
83,73,78,69,95,67,
79,77,80,95,66,0,
102,108,111,97,116,0,
171,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,192,3,
0,0,112,97,114,97,
109,115,95,119,97,114,
112,88,0,112,97,114,
97,109,115,95,119,97,
114,112,89,0,112,97,
114,97,109,115,95,99,
111,114,110,101,114,95,
114,111,117,110,100,0,
112,97,114,97,109,115,
95,99,103,119,103,0,
112,97,114,97,109,115,
95,98,111,111,115,116,
0,112,97,114,97,109,
115,95,109,111,110,105,
116,111,114,95,103,97,
109,109,97,0,112,97,
114,97,109,115,95,99,
114,116,95,103,97,109,
109,97,0,112,97,114,
97,109,115,95,83,73,
90,69,0,112,97,114,
97,109,115,95,71,76,
79,87,95,76,73,78,
69,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
171,171,73,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,36,10,0,0,
80,0,0,0,137,2,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
6,0,0,0,90,0,
0,3,0,96,16,0,
1,0,0,0,88,24,
0,4,0,112,16,0,
1,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
4,0,0,0,14,0,
0,9,50,0,16,0,
0,0,0,0,70,128,
32,0,1,0,0,0,
0,0,0,0,70,128,
32,0,1,0,0,0,
1,0,0,0,56,0,
0,7,194,0,16,0,
0,0,0,0,6,4,
16,0,0,0,0,0,
6,20,16,0,0,0,
0,0,50,0,0,15,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,64,0,0,0,64,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,128,191,0,0,
128,191,56,0,0,7,
50,0,16,0,1,0,
0,0,182,15,16,0,
0,0,0,0,182,15,
16,0,0,0,0,0,
50,0,0,13,50,0,
16,0,1,0,0,0,
70,0,16,0,1,0,
0,0,230,138,32,0,
1,0,0,0,3,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,7,194,0,16,0,
0,0,0,0,166,14,
16,0,0,0,0,0,
6,4,16,0,1,0,
0,0,50,0,0,15,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,63,0,0,0,63,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,63,0,0,
0,63,14,0,0,9,
50,0,16,0,1,0,
0,0,70,128,32,0,
1,0,0,0,1,0,
0,0,70,128,32,0,
1,0,0,0,0,0,
0,0,56,0,0,7,
50,0,16,0,2,0,
0,0,230,10,16,0,
0,0,0,0,70,0,
16,0,1,0,0,0,
56,0,0,8,66,0,
16,0,0,0,0,0,
26,0,16,0,2,0,
0,0,26,128,32,0,
1,0,0,0,5,0,
0,0,56,0,0,8,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,26,128,
32,0,1,0,0,0,
0,0,0,0,26,0,
0,5,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
216,15,73,64,77,0,
0,6,66,0,16,0,
0,0,0,0,0,208,
0,0,42,0,16,0,
0,0,0,0,56,0,
0,8,18,0,16,0,
1,0,0,0,26,0,
16,0,2,0,0,0,
26,128,32,0,1,0,
0,0,0,0,0,0,
65,0,0,5,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,0,0,0,7,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,1,64,
0,0,0,0,0,63,
14,0,0,8,66,0,
16,0,2,0,0,0,
10,0,16,0,1,0,
0,0,26,128,32,0,
1,0,0,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
3,0,0,0,134,0,
16,0,2,0,0,0,
70,126,16,0,1,0,
0,0,0,96,16,0,
1,0,0,0,52,0,
0,7,66,0,16,0,
1,0,0,0,26,0,
16,0,3,0,0,0,
10,0,16,0,3,0,
0,0,52,0,0,7,
66,0,16,0,1,0,
0,0,42,0,16,0,
3,0,0,0,42,0,
16,0,1,0,0,0,
56,0,0,8,66,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,26,128,32,0,
1,0,0,0,3,0,
0,0,56,0,0,7,
66,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,1,64,
0,0,0,0,0,191,
50,0,0,10,66,0,
16,0,1,0,0,0,
26,128,32,0,1,0,
0,0,3,0,0,0,
1,64,0,0,0,0,
192,63,42,0,16,0,
1,0,0,0,50,0,
0,9,66,0,16,0,
0,0,0,0,42,0,
16,0,1,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,0,0,
0,8,66,0,16,0,
0,0,0,0,42,0,
16,128,65,0,0,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
56,0,0,7,114,0,
16,0,3,0,0,0,
166,10,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,50,0,
0,10,66,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
0,0,0,0,26,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
128,63,50,0,0,9,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,26,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
128,63,56,0,0,8,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,86,133,
32,0,1,0,0,0,
5,0,0,0,56,0,
0,8,194,0,16,0,
0,0,0,0,166,14,
16,0,0,0,0,0,
86,133,32,0,1,0,
0,0,0,0,0,0,
26,0,0,5,194,0,
16,0,0,0,0,0,
166,14,16,0,0,0,
0,0,56,0,0,10,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,216,15,
73,64,216,15,73,64,
77,0,0,6,194,0,
16,0,0,0,0,0,
0,208,0,0,166,14,
16,0,0,0,0,0,
50,0,0,10,130,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,42,0,
16,128,65,0,0,0,
1,0,0,0,50,0,
0,10,66,0,16,0,
0,0,0,0,42,0,
16,0,1,0,0,0,
42,0,16,0,0,0,
0,0,42,0,16,128,
65,0,0,0,1,0,
0,0,0,0,0,10,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
128,63,0,0,128,63,
56,0,0,7,226,0,
16,0,1,0,0,0,
166,10,16,0,0,0,
0,0,6,9,16,0,
3,0,0,0,56,0,
0,7,226,0,16,0,
1,0,0,0,246,15,
16,0,0,0,0,0,
86,14,16,0,1,0,
0,0,47,0,0,5,
226,0,16,0,1,0,
0,0,86,14,16,0,
1,0,0,0,54,0,
0,6,66,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
5,0,0,0,56,0,
0,7,226,0,16,0,
1,0,0,0,86,14,
16,0,1,0,0,0,
166,10,16,0,0,0,
0,0,25,0,0,5,
226,0,16,0,1,0,
0,0,86,14,16,0,
1,0,0,0,56,0,
0,8,66,0,16,0,
0,0,0,0,10,16,
16,0,0,0,0,0,
10,128,32,0,1,0,
0,0,2,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
71,3,0,63,26,0,
0,5,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
49,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,63,55,0,
0,13,114,0,16,0,
3,0,0,0,166,10,
16,0,0,0,0,0,
86,133,32,0,1,0,
0,0,4,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,56,0,0,7,
226,0,16,0,1,0,
0,0,86,14,16,0,
1,0,0,0,6,9,
16,0,3,0,0,0,
47,0,0,5,226,0,
16,0,1,0,0,0,
86,14,16,0,1,0,
0,0,14,0,0,11,
66,0,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,58,128,
32,0,1,0,0,0,
4,0,0,0,56,0,
0,7,114,0,16,0,
3,0,0,0,150,7,
16,0,1,0,0,0,
166,10,16,0,0,0,
0,0,54,0,0,5,
130,0,16,0,3,0,
0,0,1,64,0,0,
0,0,0,0,25,0,
0,5,242,0,16,0,
3,0,0,0,70,14,
16,0,3,0,0,0,
50,0,0,10,242,0,
16,0,3,0,0,0,
70,14,16,0,3,0,
0,0,166,138,32,0,
1,0,0,0,4,0,
0,0,70,14,16,0,
3,0,0,0,86,0,
0,6,66,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
3,0,0,0,56,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,189,116,
19,60,26,0,0,5,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,0,0,
0,8,130,0,16,0,
0,0,0,0,1,64,
0,0,0,0,240,66,
26,128,32,0,1,0,
0,0,0,0,0,0,
50,0,0,10,66,0,
16,0,0,0,0,0,
58,0,16,128,65,0,
0,0,0,0,0,0,
42,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,0,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
240,66,56,32,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,137,136,8,60,
50,0,0,9,130,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,192,1,64,
0,0,0,0,64,64,
56,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,56,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,26,0,0,5,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
1,0,0,0,166,10,
16,0,0,0,0,0,
166,138,32,0,1,0,
0,0,5,0,0,0,
70,14,16,0,3,0,
0,0,56,0,0,7,
194,0,16,0,0,0,
0,0,6,4,16,0,
0,0,0,0,6,8,
16,0,2,0,0,0,
50,0,0,13,50,0,
16,0,0,0,0,0,
134,0,16,128,65,0,
0,0,2,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,0,0,
0,0,0,0,51,0,
0,7,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
230,10,16,0,0,0,
0,0,14,0,0,9,
34,0,16,0,2,0,
0,0,26,128,32,0,
1,0,0,0,1,0,
0,0,10,128,32,0,
1,0,0,0,1,0,
0,0,54,0,0,5,
18,0,16,0,2,0,
0,0,1,64,0,0,
0,0,128,63,56,0,
0,7,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,0,16,0,2,0,
0,0,51,0,0,8,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,6,128,
32,0,1,0,0,0,
4,0,0,0,0,0,
0,9,50,0,16,0,
0,0,0,0,70,0,
16,128,65,0,0,0,
0,0,0,0,6,128,
32,0,1,0,0,0,
4,0,0,0,15,0,
0,7,18,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,75,0,0,5,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,0,0,
0,9,18,0,16,0,
0,0,0,0,10,0,
16,128,65,0,0,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
4,0,0,0,56,32,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
150,67,56,0,0,7,
242,32,16,0,0,0,
0,0,6,0,16,0,
0,0,0,0,70,14,
16,0,1,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
81,0,0,0,4,0,
0,0,0,0,0,0,
2,0,0,0,74,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
7,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class CrtShadersFakeCrtGeomShaderDef : public ShaderDef
{
public:
	CrtShadersFakeCrtGeomShaderDef() : ShaderDef{}
	{
		Name = "fake-crt-geom";
		VertexByteCode = RetroArchCrtShadersFakeCrtGeomShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersFakeCrtGeomShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchCrtShadersFakeCrtGeomShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersFakeCrtGeomShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SCANLINE_SINE_COMP_B", -1, 52, 4, 0.000000f, 1.000000f, 0.300000f, 0.050000f, "Scanline Intensity"));
		Params.push_back(ShaderParam("warpX", -1, 56, 4, 0.000000f, 0.125000f, 0.030000f, 0.010000f, "warpX"));
		Params.push_back(ShaderParam("warpY", -1, 60, 4, 0.000000f, 0.125000f, 0.050000f, 0.010000f, "warpY"));
		Params.push_back(ShaderParam("corner_round", -1, 64, 4, 0.005000f, 0.100000f, 0.030000f, 0.005000f, "Corner Roundness"));
		Params.push_back(ShaderParam("cgwg", -1, 68, 4, 0.000000f, 1.000000f, 0.700000f, 0.100000f, "CGWG mask brightness"));
		Params.push_back(ShaderParam("boost", -1, 72, 4, 0.000000f, 1.000000f, 0.200000f, 0.020000f, "Bright boost"));
		Params.push_back(ShaderParam("monitor_gamma", -1, 76, 4, 1.000000f, 4.000000f, 2.250000f, 0.050000f, "Monitor Gamma"));
		Params.push_back(ShaderParam("crt_gamma", -1, 80, 4, 1.000000f, 4.000000f, 2.400000f, 0.050000f, "CRT Gamma"));
		Params.push_back(ShaderParam("SIZE", -1, 84, 4, 0.500000f, 2.000000f, 1.000000f, 0.500000f, "Scanline size"));
		Params.push_back(ShaderParam("GLOW_LINE", -1, 88, 4, 0.000000f, 0.200000f, 0.006000f, 0.001000f, "Glowing line"));
		Samplers.push_back(ShaderSampler("Source", 1));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
