/*
ShaderGlass shader crt/shaders\crt-geom-mini imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/crt/shaders/crt-geom-mini.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
// Parameter lines go here:
// Configuration.
// Compute sinc filter.
// Barrel distortion shrinks the display area a bit, this will allow us to counteract that.
//kaizer precalculated

*/

#pragma once

namespace RetroArchCrtShadersCrtGeomMiniShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,245,105,
49,54,24,66,192,20,
24,121,150,66,82,223,
24,116,1,0,0,0,
232,6,0,0,5,0,
0,0,52,0,0,0,
248,3,0,0,68,4,
0,0,180,4,0,0,
76,6,0,0,82,68,
69,70,188,3,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
146,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,9,0,0,0,
24,1,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,128,2,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,156,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,192,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
156,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
212,2,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,156,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,230,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,0,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,36,3,0,0,
52,0,0,0,4,0,
0,0,0,0,0,0,
56,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
92,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,56,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,109,3,
0,0,60,0,0,0,
4,0,0,0,0,0,
0,0,56,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,121,3,0,0,
64,0,0,0,4,0,
0,0,0,0,0,0,
56,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
135,3,0,0,68,0,
0,0,4,0,0,0,
0,0,0,0,56,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,146,2,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,248,2,0,0,
112,97,114,97,109,115,
95,67,85,82,86,0,
102,108,111,97,116,0,
171,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,48,3,
0,0,112,97,114,97,
109,115,95,115,99,97,
110,108,105,110,101,115,
0,112,97,114,97,109,
115,95,77,65,83,75,
0,112,97,114,97,109,
115,95,73,78,84,69,
82,76,0,112,97,114,
97,109,115,95,83,65,
84,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
171,171,73,83,71,78,
68,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,15,0,0,
56,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,104,0,
0,0,3,0,0,0,
8,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,12,0,0,80,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
4,11,0,0,89,0,
0,0,0,0,0,0,
1,0,0,0,3,0,
0,0,1,0,0,0,
15,0,0,0,84,69,
88,67,79,79,82,68,
0,83,86,95,80,111,
115,105,116,105,111,110,
0,171,171,171,83,72,
69,88,144,1,0,0,
80,0,1,0,100,0,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,0,0,0,0,
4,0,0,0,89,0,
0,4,70,142,32,0,
1,0,0,0,3,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
66,32,16,0,0,0,
0,0,103,0,0,4,
242,32,16,0,1,0,
0,0,1,0,0,0,
104,0,0,2,1,0,
0,0,56,0,0,7,
18,0,16,0,0,0,
0,0,10,16,16,0,
1,0,0,0,1,64,
0,0,71,3,128,63,
56,0,0,8,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,10,128,32,0,
1,0,0,0,2,0,
0,0,56,0,0,7,
66,32,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,219,15,73,64,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
9,0,0,0,1,0,
0,0,0,0,0,0,
5,0,0,0,8,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,119,7,
130,201,127,250,209,207,
152,218,75,105,48,255,
140,232,1,0,0,0,
48,15,0,0,5,0,
0,0,52,0,0,0,
176,3,0,0,252,3,
0,0,48,4,0,0,
148,14,0,0,82,68,
69,70,116,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
74,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,1,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,9,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,56,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,84,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,120,2,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
84,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
140,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,84,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,158,2,
0,0,48,0,0,0,
4,0,0,0,2,0,
0,0,184,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,220,2,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
240,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
20,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,240,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,37,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,240,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,49,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
240,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
63,3,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,240,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,74,2,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,176,2,0,0,
112,97,114,97,109,115,
95,67,85,82,86,0,
102,108,111,97,116,0,
171,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,232,2,
0,0,112,97,114,97,
109,115,95,115,99,97,
110,108,105,110,101,115,
0,112,97,114,97,109,
115,95,77,65,83,75,
0,112,97,114,97,109,
115,95,73,78,84,69,
82,76,0,112,97,114,
97,109,115,95,83,65,
84,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
171,171,73,83,71,78,
68,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
56,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,4,4,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,92,10,0,0,
80,0,0,0,151,2,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
5,0,0,0,90,0,
0,3,0,96,16,0,
1,0,0,0,88,24,
0,4,0,112,16,0,
1,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,98,16,0,3,
66,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
5,0,0,0,0,0,
0,10,50,0,16,0,
0,0,0,0,70,16,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,191,0,0,0,191,
0,0,0,0,0,0,
0,0,15,0,0,7,
66,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
56,0,0,7,194,0,
16,0,0,0,0,0,
166,10,16,0,0,0,
0,0,6,4,16,0,
0,0,0,0,50,0,
0,12,50,0,16,0,
0,0,0,0,230,10,
16,0,0,0,0,0,
2,64,0,0,143,194,
245,61,0,0,128,62,
0,0,0,0,0,0,
0,0,70,0,16,0,
0,0,0,0,56,0,
0,10,194,0,16,0,
0,0,0,0,6,4,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
236,81,120,63,133,235,
113,63,50,0,0,15,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,2,64,
0,0,236,81,120,63,
133,235,113,63,0,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,0,0,
0,0,49,0,0,8,
66,0,16,0,0,0,
0,0,42,0,16,128,
129,0,0,0,0,0,
0,0,1,64,0,0,
0,0,0,63,29,0,
0,8,130,0,16,0,
0,0,0,0,58,0,
16,128,129,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
55,0,0,9,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,255,255,255,255,
55,0,0,12,50,0,
16,0,0,0,0,0,
166,10,16,0,0,0,
0,0,2,64,0,0,
0,0,128,191,0,0,
128,191,0,0,0,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
24,0,0,8,66,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,26,128,32,0,
1,0,0,0,3,0,
0,0,55,0,0,9,
50,0,16,0,1,0,
0,0,166,10,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,16,16,0,0,0,
0,0,56,0,0,8,
130,0,16,0,0,0,
0,0,26,0,16,0,
1,0,0,0,26,128,
32,0,1,0,0,0,
0,0,0,0,65,0,
0,5,66,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
0,0,0,7,66,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,50,0,
0,11,34,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
26,128,32,0,1,0,
0,0,0,0,0,0,
42,0,16,128,65,0,
0,0,1,0,0,0,
0,0,0,9,18,0,
16,0,2,0,0,0,
10,0,16,0,1,0,
0,0,42,128,32,128,
65,0,0,0,1,0,
0,0,0,0,0,0,
56,0,0,7,18,0,
16,0,1,0,0,0,
26,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,56,0,
0,7,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,56,0,0,7,
18,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
50,0,0,9,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,65,42,0,
16,0,1,0,0,0,
56,0,0,8,34,0,
16,0,2,0,0,0,
10,0,16,0,1,0,
0,0,58,128,32,0,
1,0,0,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
1,0,0,0,70,0,
16,0,2,0,0,0,
70,126,16,0,1,0,
0,0,0,96,16,0,
1,0,0,0,54,0,
0,6,18,0,16,0,
3,0,0,0,42,128,
32,0,1,0,0,0,
0,0,0,0,54,0,
0,5,34,0,16,0,
3,0,0,0,1,64,
0,0,0,0,0,0,
50,0,0,12,242,0,
16,0,4,0,0,0,
70,4,16,0,3,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
0,64,0,0,192,63,
0,0,64,64,70,4,
16,0,2,0,0,0,
50,0,0,12,50,0,
16,0,2,0,0,0,
70,0,16,0,3,0,
0,0,2,64,0,0,
0,0,0,64,0,0,
128,64,0,0,0,0,
0,0,0,0,70,0,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,0,16,0,
2,0,0,0,70,126,
16,0,1,0,0,0,
0,96,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
3,0,0,0,70,0,
16,0,4,0,0,0,
70,126,16,0,1,0,
0,0,0,96,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
230,10,16,0,4,0,
0,0,70,126,16,0,
1,0,0,0,0,96,
16,0,1,0,0,0,
56,0,0,10,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,2,64,0,0,
51,51,83,64,51,51,
83,64,51,51,83,64,
0,0,0,0,50,0,
0,12,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
2,64,0,0,205,204,
204,191,205,204,204,191,
205,204,204,191,0,0,
0,0,70,2,16,0,
3,0,0,0,50,0,
0,12,114,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,51,51,
179,64,51,51,179,64,
51,51,179,64,0,0,
0,0,70,2,16,0,
1,0,0,0,50,0,
0,12,114,0,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
192,191,0,0,192,191,
0,0,192,191,0,0,
0,0,70,2,16,0,
1,0,0,0,56,0,
0,10,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
2,64,0,0,61,141,
48,62,61,141,48,62,
61,141,48,62,0,0,
0,0,16,0,0,10,
130,0,16,0,1,0,
0,0,2,64,0,0,
0,0,128,62,0,0,
128,62,0,0,128,62,
0,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,8,18,0,
16,0,2,0,0,0,
58,0,16,0,1,0,
0,0,42,128,32,0,
1,0,0,0,3,0,
0,0,50,0,0,9,
130,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,1,64,
0,0,208,204,204,190,
1,64,0,0,154,153,
185,63,50,0,0,10,
18,0,16,0,2,0,
0,0,10,0,16,0,
2,0,0,0,1,64,
0,0,204,204,204,190,
42,128,32,0,1,0,
0,0,3,0,0,0,
86,0,0,6,34,0,
16,0,2,0,0,0,
10,128,32,0,1,0,
0,0,3,0,0,0,
56,0,0,7,66,0,
16,0,2,0,0,0,
26,0,16,0,2,0,
0,0,1,64,0,0,
0,0,0,63,65,0,
0,5,66,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
50,0,0,10,34,0,
16,0,2,0,0,0,
42,0,16,128,65,0,
0,0,2,0,0,0,
1,64,0,0,0,0,
0,64,26,0,16,0,
2,0,0,0,49,0,
0,7,34,0,16,0,
2,0,0,0,26,0,
16,0,2,0,0,0,
1,64,0,0,0,0,
128,63,24,0,0,8,
66,0,16,0,2,0,
0,0,1,64,0,0,
0,0,128,63,10,128,
32,0,1,0,0,0,
4,0,0,0,49,0,
0,8,130,0,16,0,
2,0,0,0,1,64,
0,0,0,0,200,67,
26,128,32,0,1,0,
0,0,1,0,0,0,
1,0,0,7,66,0,
16,0,2,0,0,0,
58,0,16,0,2,0,
0,0,42,0,16,0,
2,0,0,0,55,0,
0,15,162,0,16,0,
2,0,0,0,86,13,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,0,0,0,64,191,
0,0,0,0,0,0,
0,63,2,64,0,0,
0,0,0,0,0,0,
128,190,0,0,0,0,
0,0,128,63,55,0,
0,9,34,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
26,0,16,0,2,0,
0,0,1,64,0,0,
0,0,128,190,50,0,
0,9,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
58,0,16,0,2,0,
0,0,26,0,16,0,
2,0,0,0,56,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,218,15,
201,64,77,0,0,6,
130,0,16,0,0,0,
0,0,0,208,0,0,
58,0,16,0,0,0,
0,0,50,0,0,9,
130,0,16,0,0,0,
0,0,10,0,16,0,
2,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,0,0,0,8,
130,0,16,0,0,0,
0,0,10,0,16,128,
65,0,0,0,2,0,
0,0,58,0,16,0,
0,0,0,0,77,0,
0,6,18,0,16,0,
2,0,0,0,0,208,
0,0,42,16,16,0,
0,0,0,0,50,0,
0,10,18,0,16,0,
2,0,0,0,58,128,
32,0,1,0,0,0,
3,0,0,0,10,0,
16,0,2,0,0,0,
1,64,0,0,0,0,
128,63,0,0,0,9,
18,0,16,0,2,0,
0,0,10,0,16,0,
2,0,0,0,58,128,
32,128,65,0,0,0,
1,0,0,0,3,0,
0,0,56,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,10,0,
16,0,2,0,0,0,
56,0,0,7,114,0,
16,0,1,0,0,0,
246,15,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,246,15,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,16,0,0,10,
130,0,16,0,0,0,
0,0,2,64,0,0,
225,122,148,62,154,153,
25,63,174,71,225,61,
0,0,0,0,70,2,
16,0,2,0,0,0,
50,0,0,10,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,246,15,16,0,
1,0,0,0,246,15,
16,128,65,0,0,0,
0,0,0,0,50,32,
0,10,114,0,16,0,
1,0,0,0,86,133,
32,0,1,0,0,0,
4,0,0,0,70,2,
16,0,1,0,0,0,
246,15,16,0,0,0,
0,0,75,0,0,5,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,0,0,
0,11,50,0,16,0,
2,0,0,0,70,0,
16,128,65,0,0,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
0,0,0,0,0,0,
51,0,0,7,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,70,0,16,0,
2,0,0,0,14,0,
0,7,18,0,16,0,
0,0,0,0,1,64,
0,0,23,183,209,56,
10,0,16,0,0,0,
0,0,29,0,0,7,
34,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
49,0,0,7,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
23,183,209,56,60,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,1,0,0,7,
18,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
55,0,0,12,114,32,
16,0,0,0,0,0,
6,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,74,0,0,0,
5,0,0,0,0,0,
0,0,3,0,0,0,
56,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,6,0,
0,0,3,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const uint32_t sVertexHash[] = 
{
0x10bb844e,0x13d79f43,0xa2d41988,0x8a0ea0cb,0xa126a170,0x7a1ca04a,
0xe2a4c813,0x73bed6f
};


static const uint32_t sFragmentHash[] =
{
0x512eb70,0xb58ee691,0x39a3a3ae,0xb5d450c7,0xb337be6c,0x3084947,
0xfcd80f38,0xd4446d1
};

}

namespace RetroArch
{
class CrtShadersCrtGeomMiniShaderDef : public ShaderDef
{
public:
	CrtShadersCrtGeomMiniShaderDef() : ShaderDef{}
	{
		Name = "crt-geom-mini";
		VertexByteCode = RetroArchCrtShadersCrtGeomMiniShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchCrtShadersCrtGeomMiniShaderDefs::sVertexByteCode);
		VertexHash = RetroArchCrtShadersCrtGeomMiniShaderDefs::sVertexHash;
		FragmentByteCode = RetroArchCrtShadersCrtGeomMiniShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchCrtShadersCrtGeomMiniShaderDefs::sFragmentByteCode);
		FragmentHash = RetroArchCrtShadersCrtGeomMiniShaderDefs::sFragmentHash;
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("CURV", -1, 52, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "CRT-Geom Curvature"));
		Params.push_back(ShaderParam("scanlines", -1, 56, 4, 0.000000f, 0.500000f, 0.500000f, 0.050000f, "CRT-Geom Scanline Weight"));
		Params.push_back(ShaderParam("MASK", -1, 60, 4, 0.000000f, 0.500000f, 0.200000f, 0.050000f, "CRT-Geom Dotmask Strength"));
		Params.push_back(ShaderParam("INTERL", -1, 64, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "CRT-Geom Interlacing Simulation"));
		Params.push_back(ShaderParam("SAT", -1, 68, 4, 0.000000f, 2.000000f, 1.000000f, 0.050000f, "CRT-Geom Saturation"));
		Samplers.push_back(ShaderSampler("Source", 1));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
