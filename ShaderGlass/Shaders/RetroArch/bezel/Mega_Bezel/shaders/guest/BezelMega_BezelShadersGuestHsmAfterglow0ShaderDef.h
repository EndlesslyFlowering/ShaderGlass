/*
ShaderGlass shader bezel/Mega_Bezel/shaders/guest / hsm-afterglow0 imported from MegaBezel:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/bezel/Mega_Bezel
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchBezelMega_BezelShadersGuestHsmAfterglow0ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,103,207,
132,18,139,184,157,78,
82,174,95,145,47,184,
228,52,1,0,0,0,
68,8,0,0,5,0,
0,0,52,0,0,0,
224,2,0,0,20,3,
0,0,72,3,0,0,
168,7,0,0,82,68,
69,70,164,2,0,0,
1,0,0,0,56,1,
0,0,5,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
124,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
220,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,240,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
1,0,0,0,15,1,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
2,0,0,0,1,0,
0,0,13,0,0,0,
26,1,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,3,0,0,0,
1,0,0,0,13,0,
0,0,48,1,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,95,80,
114,101,67,82,84,80,
97,115,115,95,115,97,
109,112,108,101,114,0,
95,65,102,116,101,114,
103,108,111,119,80,97,
115,115,70,101,101,100,
98,97,99,107,95,115,
97,109,112,108,101,114,
0,80,114,101,67,82,
84,80,97,115,115,0,
65,102,116,101,114,103,
108,111,119,80,97,115,
115,70,101,101,100,98,
97,99,107,0,80,117,
115,104,0,171,171,171,
48,1,0,0,4,0,
0,0,80,1,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
240,1,0,0,0,0,
0,0,16,0,0,0,
2,0,0,0,16,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,52,2,
0,0,16,0,0,0,
4,0,0,0,2,0,
0,0,68,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,104,2,0,0,
20,0,0,0,4,0,
0,0,2,0,0,0,
68,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
114,2,0,0,24,0,
0,0,4,0,0,0,
2,0,0,0,68,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,68,
101,114,101,122,101,100,
80,97,115,115,83,105,
122,101,0,102,108,111,
97,116,52,0,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,7,2,0,0,
112,97,114,97,109,115,
95,80,82,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
62,2,0,0,112,97,
114,97,109,115,95,80,
71,0,112,97,114,97,
109,115,95,80,66,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,88,4,
0,0,80,0,0,0,
22,1,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,2,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
90,0,0,3,0,96,
16,0,3,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
3,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
5,0,0,0,54,0,
0,6,146,0,16,0,
0,0,0,0,166,142,
32,0,1,0,0,0,
0,0,0,0,54,0,
0,8,98,0,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,7,242,0,
16,0,1,0,0,0,
70,14,16,0,0,0,
0,0,70,20,16,0,
0,0,0,0,0,0,
0,8,242,0,16,0,
0,0,0,0,70,14,
16,128,65,0,0,0,
0,0,0,0,70,20,
16,0,0,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,0,16,0,
1,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
1,0,0,0,230,10,
16,0,1,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,3,0,0,0,
70,0,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,0,0,
0,0,230,10,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
4,0,0,0,70,16,
16,0,0,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,50,0,
0,12,114,0,16,0,
3,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,0,0,
32,64,0,0,32,64,
0,0,32,64,0,0,
0,0,70,2,16,0,
3,0,0,0,0,0,
0,7,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,3,0,
0,0,0,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
0,0,0,7,114,0,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,1,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
3,0,0,0,0,96,
16,0,3,0,0,0,
50,0,0,13,114,0,
16,0,1,0,0,0,
70,2,16,128,65,0,
0,0,0,0,0,0,
2,64,0,0,217,137,
29,62,217,137,29,62,
217,137,29,62,0,0,
0,0,70,2,16,0,
1,0,0,0,56,0,
0,10,114,0,16,0,
2,0,0,0,70,2,
16,0,0,0,0,0,
2,64,0,0,217,137,
29,62,217,137,29,62,
217,137,29,62,0,0,
0,0,0,0,0,11,
114,0,16,0,3,0,
0,0,2,64,0,0,
72,225,250,62,72,225,
250,62,72,225,250,62,
0,0,0,0,70,130,
32,0,1,0,0,0,
1,0,0,0,50,0,
0,9,114,0,16,0,
1,0,0,0,70,2,
16,0,3,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
2,0,0,0,0,0,
0,10,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
2,64,0,0,161,160,
160,187,161,160,160,187,
161,160,160,187,0,0,
0,0,52,0,0,10,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
50,0,0,13,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,2,64,0,0,
217,137,29,62,217,137,
29,62,217,137,29,62,
0,0,0,0,70,2,
16,128,65,0,0,0,
1,0,0,0,0,0,
0,7,130,0,16,0,
0,0,0,0,26,0,
16,0,4,0,0,0,
10,0,16,0,4,0,
0,0,0,0,0,7,
130,0,16,0,0,0,
0,0,42,0,16,0,
4,0,0,0,58,0,
16,0,0,0,0,0,
49,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
161,160,160,60,55,0,
0,9,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,9,114,32,16,0,
0,0,0,0,246,15,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,54,0,
0,5,130,32,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
28,0,0,0,5,0,
0,0,0,0,0,0,
2,0,0,0,17,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,6,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class BezelMega_BezelShadersGuestHsmAfterglow0ShaderDef : public ShaderDef
{
public:
	BezelMega_BezelShadersGuestHsmAfterglow0ShaderDef() : ShaderDef{}
	{
		Name = "hsm-afterglow0";
		VertexByteCode = RetroArchBezelMega_BezelShadersGuestHsmAfterglow0ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchBezelMega_BezelShadersGuestHsmAfterglow0ShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchBezelMega_BezelShadersGuestHsmAfterglow0ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchBezelMega_BezelShadersGuestHsmAfterglow0ShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("DerezedPassSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("PR", -1, 16, 4, 0.000000f, 0.500000f, 0.320000f, 0.010000f, "Persistence Red -- PR"));
		Params.push_back(ShaderParam("PG", -1, 20, 4, 0.000000f, 0.500000f, 0.320000f, 0.010000f, "Persistence Green -- PG"));
		Params.push_back(ShaderParam("PB", -1, 24, 4, 0.000000f, 0.500000f, 0.320000f, 0.010000f, "Persistence Blue -- PB"));
		Samplers.push_back(ShaderSampler("PreCRTPass", 2));
		Samplers.push_back(ShaderSampler("AfterglowPassFeedback", 3));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
