/*
ShaderGlass shader bezel/Mega_Bezel/shaders/base / linearize-crt imported from MegaBezel:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/bezel/Mega_Bezel
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// HSM_REFLECT_SHOW_TUBE_FX_AMOUNT
// Graphics Brightness
// Night Lighting
//    Zoom & Pan
//    FLIP & ROTATE
//    ASPECT RATIO
//    SCALING
//    Extended Scale
//    Position
//    CROPPING
//    SCANLINES
//    CORE RES SAMPLING
//    INTERLACING
//    FAKE SCANLINES
//    DUAL SCREEN
//    CURVATURE
//    SIGNAL NOISE
//    ANTI-FLICKER
//    CRT vs ORIGINAL A/B TESTING
// Show Pass
//    Monochrome
//    Reflection Transform
// float HSM_SCREEN_REFLECTION_FOLLOW_DIFFUSE_THICKNESS;
// float HSM_PHOSPHOR_PERSISTENCE_BLEND;
// float HSM_PHOSPHOR_PERSISTENCE_RED;
// float HSM_PHOSPHOR_PERSISTENCE_GREEN;
// float HSM_PHOSPHOR_PERSISTENCE_BLUE;
//    TUBE IMAGES
//    TUBE STATIC REFLECTION
// CRT Screen
// These names are inconsistent with the general naming on purpose
// They match the namse in Guest's shader
//    Screen Vignette
//    SCREEN BLACK EDGE
//    Bezel Independent Scale
//    Bezel General
//	Bezel Params not in Screen Scale
// Generated Bezel
// Generated Frame
// Corner
// Reflection
// Blur Stuff
// Layer Order
// Cutout
// Background
// Background Vignette
// LED
// Device
// DEVICELED
// Generated Bezel & Frame
// Decal
// Cab Glass
// Top Image
// Guest-Dr-Venom Params
// float intres;
// Grade Params
// Grade Afterglow Params
// Megatron Parameters
/////////////// DEFINES ///////////////
// Maximum Negative cropping fron each edge
// This means that the pass with the negative crop area
// added needs to have twice this much added in each direction
// In square coordinate space
// Screen Scale Required Parameters
//---------------------------------------------------------------------------------------------------
//    CRT BRIGHTNESS & GAMMA
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    Global Graphics Brightness
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    AMBIENT LIGHTING AKA NIGHTLIGHTING
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    Sinden Lightgun Border
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    Zoom & Pan
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    FLIP & ROTATE
//---------------------------------------------------------------------------------------------------
// float HSM_FLIP_CORE_VERTICAL = global.HSM_FLIP_CORE_VERTICAL;
// float HSM_FLIP_CORE_HORIZONTAL = global.HSM_FLIP_CORE_HORIZONTAL;
//---------------------------------------------------------------------------------------------------
//    ASPECT RATIO
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    CRT SCREEN SCALING GENERAL
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    Integer Scale
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    NON-INTEGER SCALE
//---------------------------------------------------------------------------------------------------
// Non integer scale is set to 82.97 so that cores which output 224px will have integer scale by default
// This is 8x integer scale at 3840x2160 and 6x integer scale at 1920x1080
//---------------------------------------------------------------------------------------------------
//    PHYSICAL SIZE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    AUTOMATIC SCALE & POSITION
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    NON-INTEGER SCALE OFFSET
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    SNAP TO INTEGER SCALE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    POSITION OFFSET
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    CROPPING
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    DREZ Filter
//---------------------------------------------------------------------------------------------------
// Default was 1.2, now set to 2.3 to match smoothing in Hyllian b-spline
//---------------------------------------------------------------------------------------------------
//    CORE RES SAMPLING
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_CORE_RES_SAMPLING_SHIFT_OPPOSITE_DIR 			"          Shift Sampling Relative to Scanlines" 0 -100 100 5
// float HSM_CORE_RES_SAMPLING_SHIFT_OPPOSITE_DIR = global.HSM_CORE_RES_SAMPLING_SHIFT_OPPOSITE_DIR / 100;
//---------------------------------------------------------------------------------------------------
//    FAST SHARPEN - GUEST.R
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    INTERLACING from Guest.r's Guest Advanced Shader
//---------------------------------------------------------------------------------------------------
// Uses naming from Guest Advanced
//---------------------------------------------------------------------------------------------------
//    FAKE SCANLINES
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_FAKE_SCANLINE_BRIGHTNESS_CUTOFF 	"[ SCREEN FX ]  Fake 240p Scanline Brightness Cutoff - Def 3" 3 0 10 0.05
//---------------------------------------------------------------------------------------------------
//    CURVATURE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    CURVATURE
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_USE_GEOM 									"          Use Geom Curvature" 0 -1 3 1
// float HSM_USE_GEOM = global.HSM_USE_GEOM;
//---------------------------------------------------------------------------------------------------
//    SIGNAL NOISE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    ANTI-FLICKER
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    Global Graphics Caching
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    A/B SPLITSCREEN COMPARE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    SHOW PASS
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    SCREEN VIGNETTE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    MONOCHROME
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    TUBE EMPTY
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    TUBE DIFFUSE IMAGE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    TUBE SHADOW IMAGE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    TUBE GLASS STATIC REFLECTION IMAGE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    CRT Blend Over Diffuse
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    TUBE COLORED GEL
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    TUBE COLORED GEL
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_SHOW_CRT_ON_TOP_OF_COLORED_GEL				"          Show CRT on Top of Colored Gel Normal" 0 0 1 1
// float HSM_SHOW_CRT_ON_TOP_OF_COLORED_GEL = global.HSM_SHOW_CRT_ON_TOP_OF_COLORED_GEL;
//---------------------------------------------------------------------------------------------------
//    SCREEN BLACK EDGE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    DUAL SCREEN
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_2ND_SCREEN_SIDES_CROP				"          Crop % from Edges of 2nd Screen" 0 0 100 0.1
// float HSM_2ND_SCREEN_SIDES_CROP = global.HSM_2ND_SCREEN_SIDES_CROP / 100;
//---------------------------------------------------------------------------------------------------
//    Reflection Transform
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_SCREEN_REFLECTION_FOLLOW_DIFFUSE_THICKNESS    "          Follow Tube Diffuse Extra Thickness" 0 1 200 1
// float HSM_SCREEN_REFLECTION_FOLLOW_DIFFUSE_THICKNESS = global.HSM_SCREEN_REFLECTION_FOLLOW_DIFFUSE_THICKNESS / 100;
// Commented out because I don't think anyone is using this
// #pragma parameter HSM_AMBIENT1_DITHERING_SAMPLES   "          Dithering Noise Samples (Reduces Banding)" 0 0 10 1
// float HSM_AMBIENT1_DITHERING_SAMPLES = global.HSM_AMBIENT1_DITHERING_SAMPLES;
//---------------------------------------------------------------------------------------------------
//    Ambient Lighting Image 2
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    BEZEL INDEPENDENT SCALE
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    BEZEL GENERAL
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    BEZEL
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    GENERATED BEZEL & FRAME
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_BZL_TITLE "-----[ GENERATED BEZEL & FRAME ]-------------------------------" 0 0 0 1
//---------------------------------------------------------------------------------------------------
// Bezel Brightness
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
// Bezel Color
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
// Frame Color
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    FRAME
//---------------------------------------------------------------------------------------------------
// #pragma parameter HSM_FRM_BLEND_MODE                    "          Blend Mode - Off | Normal | Add | Mult"  1 0 3 1
// float HSM_FRM_BLEND_MODE = global.HSM_FRM_BLEND_MODE;
// TODO how this is being used is strange
//---------------------------------------------------------------------------------------------------
//    REFLECTION
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
// Reflection Fading
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
// Reflection Blur
//---------------------------------------------------------------------------------------------------
// Reflection Noise
// #pragma parameter HSM_REFLECT_BRIGHTNESS_NOISE_BLACK_LEVEL                      "          Mask Black Level" 0 -100 100 0.5
// float HSM_REFLECT_BRIGHTNESS_NOISE_BLACK_LEVEL = (global.HSM_REFLECT_BRIGHTNESS_NOISE_BLACK_LEVEL / 1000 + 1);
// #pragma parameter HSM_REFLECT_BRIGHTNESS_NOISE_BRIGHTNESS                      "          Mask Brightness" 100 0 200 1
// float HSM_REFLECT_BRIGHTNESS_NOISE_BRIGHTNESS = global.HSM_REFLECT_BRIGHTNESS_NOISE_BRIGHTNESS / 100;
//---------------------------------------------------------------------------------------------------
//    REFLECTION MASK
//---------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------
//    REFLECTION MASK
//---------------------------------------------------------------------------------------------------
// Glass Preset Stuff
/////////////// CONSTANT TUNING SETTINGS ///////////////
// #ifndef HSM_REFLECT_CORNER_SPREAD_FALLOFF
//     #define HSM_REFLECT_CORNER_SPREAD_FALLOFF 100
// #endif
// 'Removes' encoded gamma from color to put the color in linear space
// Adds gamma onto color in linear space to get a color with encoded gamma
// If the color was not already premultiplied (matted with black) premultiply it now
// Assumes Opacity is already encoded in alpha
// final sum and weight normalization
// Quadratic Bezier allows us to have a controlled falloff between 0 and 1
// One use is to avoid the perception of discontinuity at the outer edge experienced with a linear gradients
// Originally adapted by @kyndinfo from BEZMATH.PS (1993) by Don Lancaster
// http://www.tinaja.com/text/bezmath.html
// solve t from x (an inverse operation)
// Returns 1 if in_value < compare_value
// Useful when ifs are bad for performance
// Returns 1 if in_value > compare_value
// Useful when ifs are bad for performance
// Returns 1 if in_value == compare_value within the epsilon value provided
// Useful when ifs are bad for performance
// Sample the bilinear footprint.
// Bilinear filter.
// compatibility macros for transparently converting HLSLisms into GLSLisms
/////////////////////////////////  MIT LICENSE  ////////////////////////////////
//  Copyright (C) 2014 TroggleMonkey
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to
//  deal in the Software without restriction, including without limitation the
//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
//  sell copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
//  IN THE SOFTWARE.
/////////////////////////////////  DESCRIPTION  ////////////////////////////////
//  This file provides reusable one-pass and separable (two-pass) blurs.
//  Requires:   All blurs share these requirements (dxdy requirement is split):
//              1.) All requirements of gamma-management.h must be satisfied!
//              2.) filter_linearN must == "true" in your .cgp preset unless
//                  you're using tex2DblurNresize at 1x scale.
//              3.) mipmap_inputN must == "true" in your .cgp preset if
//                  IN.output_size < IN.video_size.
//              4.) IN.output_size == IN.video_size / pow(2, M), where M is some
//                  positive integer.  tex2Dblur*resize can resize arbitrarily
//                  (and the blur will be done after resizing), but arbitrary
//                  resizes "fail" with other blurs due to the way they mix
//                  static weights with bilinear sample exploitation.
//              5.) In general, dxdy should contain the uv pixel spacing:
//                      dxdy = (IN.video_size/IN.output_size)/IN.texture_size
//              6.) For separable blurs (tex2DblurNresize and tex2DblurNfast),
//                  zero out the dxdy component in the unblurred dimension:
//                      dxdy = float2(dxdy.x, 0.0) or float2(0.0, dxdy.y)
//              Many blurs share these requirements:
//              1.) One-pass blurs require scale_xN == scale_yN or scales > 1.0,
//                  or they will blur more in the lower-scaled dimension.
//              2.) One-pass shared sample blurs require ddx(), ddy(), and
//                  tex2Dlod() to be supported by the current Cg profile, and
//                  the drivers must support high-quality derivatives.
//              3.) One-pass shared sample blurs require:
//                      tex_uv.w == log2(IN.video_size/IN.output_size).y;
//              Non-wrapper blurs share this requirement:
//              1.) sigma is the intended standard deviation of the blur
//              Wrapper blurs share this requirement, which is automatically
//              met (unless OVERRIDE_BLUR_STD_DEVS is #defined; see below):
//              1.) blurN_std_dev must be global static const float values
//                  specifying standard deviations for Nx blurs in units
//                  of destination pixels
//  Optional:   1.) The including file (or an earlier included file) may
//                  optionally #define USE_BINOMIAL_BLUR_STD_DEVS to replace
//                  default standard deviations with those matching a binomial
//                  distribution.  (See below for details/properties.)
//              2.) The including file (or an earlier included file) may
//                  optionally #define OVERRIDE_BLUR_STD_DEVS and override:
//                      static const float blur3_std_dev
//                      static const float blur4_std_dev
//                      static const float blur5_std_dev
//                      static const float blur6_std_dev
//                      static const float blur7_std_dev
//                      static const float blur8_std_dev
//                      static const float blur9_std_dev
//                      static const float blur10_std_dev
//                      static const float blur11_std_dev
//                      static const float blur12_std_dev
//                      static const float blur17_std_dev
//                      static const float blur25_std_dev
//                      static const float blur31_std_dev
//                      static const float blur43_std_dev
//              3.) The including file (or an earlier included file) may
//                  optionally #define OVERRIDE_ERROR_BLURRING and override:
//                      static const float error_blurring
//                  This tuning value helps mitigate weighting errors from one-
//                  pass shared-sample blurs sharing bilinear samples between
//                  fragments.  Values closer to 0.0 have "correct" blurriness
//                  but allow more artifacts, and values closer to 1.0 blur away
//                  artifacts by sampling closer to halfway between texels.
//              UPDATE 6/21/14: The above static constants may now be overridden
//              by non-static uniform constants.  This permits exposing blur
//              standard deviations as runtime GUI shader parameters.  However,
//              using them keeps weights from being statically computed, and the
//              speed hit depends on the blur: On my machine, uniforms kill over
//              53% of the framerate with tex2Dblur12x12shared, but they only
//              drop the framerate by about 18% with tex2Dblur11fast.
//  Quality and Performance Comparisons:
//  For the purposes of the following discussion, "no sRGB" means
//  GAMMA_ENCODE_EVERY_FBO is #defined, and "sRGB" means it isn't.
//  1.) tex2DblurNfast is always faster than tex2DblurNresize.
//  2.) tex2DblurNresize functions are the only ones that can arbitrarily resize
//      well, because they're the only ones that don't exploit bilinear samples.
//      This also means they're the only functions which can be truly gamma-
//      correct without linear (or sRGB FBO) input, but only at 1x scale.
//  3.) One-pass shared sample blurs only have a speed advantage without sRGB.
//      They also have some inaccuracies due to their shared-[bilinear-]sample
//      design, which grow increasingly bothersome for smaller blurs and higher-
//      frequency source images (relative to their resolution).  I had high
//      hopes for them, but their most realistic use case is limited to quickly
//      reblurring an already blurred input at full resolution.  Otherwise:
//      a.) If you're blurring a low-resolution source, you want a better blur.
//      b.) If you're blurring a lower mipmap, you want a better blur.
//      c.) If you're blurring a high-resolution, high-frequency source, you
//          want a better blur.
//  4.) The one-pass blurs without shared samples grow slower for larger blurs,
//      but they're competitive with separable blurs at 5x5 and smaller, and
//      even tex2Dblur7x7 isn't bad if you're wanting to conserve passes.
//  Here are some framerates from a GeForce 8800GTS.  The first pass resizes to
//  viewport size (4x in this test) and linearizes for sRGB codepaths, and the
//  remaining passes perform 6 full blurs.  Mipmapped tests are performed at the
//  same scale, so they just measure the cost of mipmapping each FBO (only every
//  other FBO is mipmapped for separable blurs, to mimic realistic usage).
//  Mipmap      Neither     sRGB+Mipmap sRGB        Function
//  76.0        92.3        131.3       193.7       tex2Dblur3fast
//  63.2        74.4        122.4       175.5       tex2Dblur3resize
//  93.7        121.2       159.3       263.2       tex2Dblur3x3
//  59.7        68.7        115.4       162.1       tex2Dblur3x3resize
//  63.2        74.4        122.4       175.5       tex2Dblur5fast
//  49.3        54.8        100.0       132.7       tex2Dblur5resize
//  59.7        68.7        115.4       162.1       tex2Dblur5x5
//  64.9        77.2        99.1        137.2       tex2Dblur6x6shared
//  55.8        63.7        110.4       151.8       tex2Dblur7fast
//  39.8        43.9        83.9        105.8       tex2Dblur7resize
//  40.0        44.2        83.2        104.9       tex2Dblur7x7
//  56.4        65.5        71.9        87.9        tex2Dblur8x8shared
//  49.3        55.1        99.9        132.5       tex2Dblur9fast
//  33.3        36.2        72.4        88.0        tex2Dblur9resize
//  27.8        29.7        61.3        72.2        tex2Dblur9x9
//  37.2        41.1        52.6        60.2        tex2Dblur10x10shared
//  44.4        49.5        91.3        117.8       tex2Dblur11fast
//  28.8        30.8        63.6        75.4        tex2Dblur11resize
//  33.6        36.5        40.9        45.5        tex2Dblur12x12shared
//  TODO: Fill in benchmarks for new untested blurs.
//                                                  tex2Dblur17fast
//                                                  tex2Dblur25fast
//                                                  tex2Dblur31fast
//                                                  tex2Dblur43fast
//                                                  tex2Dblur3x3resize
/////////////////////////////  SETTINGS MANAGEMENT  ////////////////////////////
//  Set static standard deviations, but allow users to override them with their
//  own constants (even non-static uniforms if they're okay with the speed hit):
//  blurN_std_dev values are specified in terms of dxdy strides.
//  By request, we can define standard deviations corresponding to a
//  binomial distribution with p = 0.5 (related to Pascal's triangle).
//  This distribution works such that blurring multiple times should
//  have the same result as a single larger blur.  These values are
//  larger than default for blurs up to 6x and smaller thereafter.
//  The defaults are the largest values that keep the largest unused
//  blur term on each side <= 1.0/256.0.  (We could get away with more
//  or be more conservative, but this compromise is pretty reasonable.)
//  error_blurring should be in [0.0, 1.0].  Higher values reduce ringing
//  in shared-sample blurs but increase blurring and feature shifting.
//////////////////////////////////  INCLUDES  //////////////////////////////////
//  gamma-management.h relies on pass-specific settings to guide its behavior:
//  FIRST_PASS, LAST_PASS, GAMMA_ENCODE_EVERY_FBO, etc.  See it for details.
/////////////////////////////////  MIT LICENSE  ////////////////////////////////
//  Copyright (C) 2014 TroggleMonkey
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to
//  deal in the Software without restriction, including without limitation the
//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
//  sell copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
//  IN THE SOFTWARE.
/////////////////////////////////  DESCRIPTION  ////////////////////////////////
//  This file provides gamma-aware tex*D*() and encode_output() functions.
//  Requires:   Before #include-ing this file, the including file must #define
//              the following macros when applicable and follow their rules:
//              1.) #define FIRST_PASS if this is the first pass.
//              2.) #define LAST_PASS if this is the last pass.
//              3.) If sRGB is available, set srgb_framebufferN = "true" for
//                  every pass except the last in your .cgp preset.
//              4.) If sRGB isn't available but you want gamma-correctness with
//                  no banding, #define GAMMA_ENCODE_EVERY_FBO each pass.
//              5.) #define SIMULATE_CRT_ON_LCD if desired (precedence over 5-7)
//              6.) #define SIMULATE_GBA_ON_LCD if desired (precedence over 6-7)
//              7.) #define SIMULATE_LCD_ON_CRT if desired (precedence over 7)
//              8.) #define SIMULATE_GBA_ON_CRT if desired (precedence over -)
//              If an option in [5, 8] is #defined in the first or last pass, it
//              should be #defined for both.  It shouldn't make a difference
//              whether it's #defined for intermediate passes or not.
//  Optional:   The including file (or an earlier included file) may optionally
//              #define a number of macros indicating it will override certain
//              macros and associated constants are as follows:
//              static constants with either static or uniform constants.  The
//              1.) OVERRIDE_STANDARD_GAMMA: The user must first define:
//                  static const float ntsc_gamma
//                  static const float pal_gamma
//                  static const float crt_reference_gamma_high
//                  static const float crt_reference_gamma_low
//                  static const float lcd_reference_gamma
//                  static const float crt_office_gamma
//                  static const float lcd_office_gamma
//              2.) OVERRIDE_DEVICE_GAMMA: The user must first define:
//                  static const float crt_gamma
//                  static const float gba_gamma
//                  static const float lcd_gamma
//              3.) OVERRIDE_FINAL_GAMMA: The user must first define:
//                  static const float input_gamma
//                  static const float intermediate_gamma
//                  static const float output_gamma
//                  (intermediate_gamma is for GAMMA_ENCODE_EVERY_FBO.)
//              4.) OVERRIDE_ALPHA_ASSUMPTIONS: The user must first define:
//                  static const bool assume_opaque_alpha
//              The gamma constant overrides must be used in every pass or none,
//              and OVERRIDE_FINAL_GAMMA bypasses all of the SIMULATE* macros.
//              OVERRIDE_ALPHA_ASSUMPTIONS may be set on a per-pass basis.
//  Usage:      After setting macros appropriately, ignore gamma correction and
//              replace all tex*D*() calls with equivalent gamma-aware
//              tex*D*_linearize calls, except:
//              1.) When you read an LUT, use regular tex*D or a gamma-specified
//                  function, depending on its gamma encoding:
//                      tex*D*_linearize_gamma (takes a runtime gamma parameter)
//              2.) If you must read pass0's original input in a later pass, use
//                  tex2D_linearize_ntsc_gamma.  If you want to read pass0's
//                  input with gamma-corrected bilinear filtering, consider
//                  creating a first linearizing pass and reading from the input
//                  of pass1 later.
//              Then, return encode_output(color) from every fragment shader.
//              Finally, use the global gamma_aware_bilinear boolean if you want
//              to statically branch based on whether bilinear filtering is
//              gamma-correct or not (e.g. for placing Gaussian blur samples).
//
//  Detailed Policy:
//  tex*D*_linearize() functions enforce a consistent gamma-management policy
//  based on the FIRST_PASS and GAMMA_ENCODE_EVERY_FBO settings.  They assume
//  their input texture has the same encoding characteristics as the input for
//  the current pass (which doesn't apply to the exceptions listed above).
//  Similarly, encode_output() enforces a policy based on the LAST_PASS and
//  GAMMA_ENCODE_EVERY_FBO settings.  Together, they result in one of the
//  following two pipelines.
//  Typical pipeline with intermediate sRGB framebuffers:
//      linear_color = pow(pass0_encoded_color, input_gamma);
//      intermediate_output = linear_color;     //  Automatic sRGB encoding
//      linear_color = intermediate_output;     //  Automatic sRGB decoding
//      final_output = pow(intermediate_output, 1.0/output_gamma);
//  Typical pipeline without intermediate sRGB framebuffers:
//      linear_color = pow(pass0_encoded_color, input_gamma);
//      intermediate_output = pow(linear_color, 1.0/intermediate_gamma);
//      linear_color = pow(intermediate_output, intermediate_gamma);
//      final_output = pow(intermediate_output, 1.0/output_gamma);
//  Using GAMMA_ENCODE_EVERY_FBO is much slower, but it's provided as a way to
//  easily get gamma-correctness without banding on devices where sRGB isn't
//  supported.
//
//  Use This Header to Maximize Code Reuse:
//  The purpose of this header is to provide a consistent interface for texture
//  reads and output gamma-encoding that localizes and abstracts away all the
//  annoying details.  This greatly reduces the amount of code in each shader
//  pass that depends on the pass number in the .cgp preset or whether sRGB
//  FBO's are being used: You can trivially change the gamma behavior of your
//  whole pass by commenting or uncommenting 1-3 #defines.  To reuse the same
//  code in your first, Nth, and last passes, you can even put it all in another
//  header file and #include it from skeleton .cg files that #define the
//  appropriate pass-specific settings.
//
//  Rationale for Using Three Macros:
//  This file uses GAMMA_ENCODE_EVERY_FBO instead of an opposite macro like
//  SRGB_PIPELINE to ensure sRGB is assumed by default, which hopefully imposes
//  a lower maintenance burden on each pass.  At first glance it seems we could
//  accomplish everything with two macros: GAMMA_CORRECT_IN / GAMMA_CORRECT_OUT.
//  This works for simple use cases where input_gamma == output_gamma, but it
//  breaks down for more complex scenarios like CRT simulation, where the pass
//  number determines the gamma encoding of the input and output.
///////////////////////////////  BASE CONSTANTS  ///////////////////////////////
//  Set standard gamma constants, but allow users to override them:
//  Standard encoding gammas:
//  Typical device decoding gammas (only use for emulating devices):
//  CRT/LCD reference gammas are higher than NTSC and Rec.709 video standard
//  gammas: The standards purposely undercorrected for an analog CRT's
//  assumed 2.5 reference display gamma to maintain contrast in assumed
//  [dark] viewing conditions: http://www.poynton.com/PDFs/GammaFAQ.pdf
//  These unstated assumptions about display gamma and perceptual rendering
//  intent caused a lot of confusion, and more modern CRT's seemed to target
//  NTSC 2.2 gamma with circuitry.  LCD displays seem to have followed suit
//  (they struggle near black with 2.5 gamma anyway), especially PC/laptop
//  displays designed to view sRGB in bright environments.  (Standards are
//  also in flux again with BT.1886, but it's underspecified for displays.)
//  Assuming alpha == 1.0 might make it easier for users to avoid some bugs,
//  but only if they're aware of it.
///////////////////////  DERIVED CONSTANTS AS FUNCTIONS  ///////////////////////
//  gamma-management.h should be compatible with overriding gamma values with
//  runtime user parameters, but we can only define other global constants in
//  terms of static constants, not uniform user parameters.  To get around this
//  limitation, we need to define derived constants using functions.
//  Set device gamma constants, but allow users to override them:
//  The user promises to globally define the appropriate constants:
//  Set decoding/encoding gammas for the first/lass passes, but allow overrides:
//  The user promises to globally define the appropriate constants:
//  If we gamma-correct every pass, always use ntsc_gamma between passes to
//  ensure middle passes don't need to care if anything is being simulated:
//  Set decoding/encoding gammas for the current pass.  Use static constants for
//  linearize_input and gamma_encode_output, because they aren't derived, and
//  they let the compiler do dead-code elimination.
//  Users might want to know if bilinear filtering will be gamma-correct:
//////////////////////  COLOR ENCODING/DECODING FUNCTIONS  /////////////////////
//TODO/FIXME: I have no idea why replacing the lookup wrappers with this macro fixes the blurs being offset ¯\_(ツ)_/¯
//#define tex2D_linearize(C, D) decode_input(vec4(texture(C, D)))
// EDIT: it's the 'const' in front of the coords that's doing it
///////////////////////////  TEXTURE LOOKUP WRAPPERS  //////////////////////////
//  "SMART" LINEARIZING TEXTURE LOOKUP FUNCTIONS:
//  Provide a wide array of linearizing texture lookup wrapper functions.  The
//  Cg shader spec Retroarch uses only allows for 2D textures, but 1D and 3D
//  lookups are provided for completeness in case that changes someday.  Nobody
//  is likely to use the *fetch and *proj functions, but they're included just
//  in case.  The only tex*D texture sampling functions omitted are:
//      - tex*Dcmpbias
//      - tex*Dcmplod
//      - tex*DARRAY*
//      - tex*DMS*
//      - Variants returning integers
//  Standard line length restrictions are ignored below for vertical brevity.
//  tex1D:
//  tex1Dbias:
//  tex1Dfetch:
//  tex1Dlod:
//  tex1Dproj:
//  tex2D:
//inline float4 tex2D_linearize(const sampler2D tex, const float2 tex_coords, const float2 dx, const float2 dy)
//{   return decode_input(texture(tex, tex_coords, dx, dy));   }
//inline float4 tex2D_linearize(const sampler2D tex, const float3 tex_coords, const float2 dx, const float2 dy)
//{   return decode_input(texture(tex, tex_coords, dx, dy));   }
//inline float4 tex2D_linearize(const sampler2D tex, const float2 tex_coords, const float2 dx, const float2 dy, const int texel_off)
//{   return decode_input(texture(tex, tex_coords, dx, dy, texel_off));    }
//inline float4 tex2D_linearize(const sampler2D tex, const float3 tex_coords, const float2 dx, const float2 dy, const int texel_off)
//{   return decode_input(texture(tex, tex_coords, dx, dy, texel_off));    }
//  tex2Dbias:
//inline float4 tex2Dbias_linearize(const sampler2D tex, const float4 tex_coords)
//{   return decode_input(tex2Dbias(tex, tex_coords));   }
//inline float4 tex2Dbias_linearize(const sampler2D tex, const float4 tex_coords, const int texel_off)
//{   return decode_input(tex2Dbias(tex, tex_coords, texel_off));    }
//  tex2Dfetch:
//inline float4 tex2Dfetch_linearize(const sampler2D tex, const int4 tex_coords)
//{   return decode_input(tex2Dfetch(tex, tex_coords));  }
//inline float4 tex2Dfetch_linearize(const sampler2D tex, const int4 tex_coords, const int texel_off)
//{   return decode_input(tex2Dfetch(tex, tex_coords, texel_off));   }
//  tex2Dlod:
//  tex2Dproj:
//  tex3D:
//  tex3Dbias:
//  tex3Dfetch:
//  tex3Dlod:
//  tex3Dproj:
/////////*
//  NONSTANDARD "SMART" LINEARIZING TEXTURE LOOKUP FUNCTIONS:
//  This narrow selection of nonstandard tex2D* functions can be useful:
//  tex2Dlod0: Automatically fill in the tex2D LOD parameter for mip level 0.
//inline float4 tex2Dlod0_linearize(const sampler2D tex, const float2 tex_coords)
//{   return decode_input(tex2Dlod(tex, float4(tex_coords, 0.0, 0.0)));   }
//inline float4 tex2Dlod0_linearize(const sampler2D tex, const float2 tex_coords, const int texel_off)
//{   return decode_input(tex2Dlod(tex, float4(tex_coords, 0.0, 0.0), texel_off));    }
//  MANUALLY LINEARIZING TEXTURE LOOKUP FUNCTIONS:
//  Provide a narrower selection of tex2D* wrapper functions that decode an
//  input sample with a specified gamma value.  These are useful for reading
//  LUT's and for reading the input of pass0 in a later pass.
//  tex2D:
//inline float4 tex2D_linearize_gamma(const sampler2D tex, const float2 tex_coords, const int texel_off, const float3 gamma)
//{   return decode_gamma_input(texture(tex, tex_coords, texel_off), gamma);    }
//inline float4 tex2D_linearize_gamma(const sampler2D tex, const float3 tex_coords, const int texel_off, const float3 gamma)
//{   return decode_gamma_input(texture(tex, tex_coords, texel_off), gamma);    }
//inline float4 tex2D_linearize_gamma(const sampler2D tex, const float2 tex_coords, const float2 dx, const float2 dy, const float3 gamma)
//{   return decode_gamma_input(texture(tex, tex_coords, dx, dy), gamma);   }
//inline float4 tex2D_linearize_gamma(const sampler2D tex, const float3 tex_coords, const float2 dx, const float2 dy, const float3 gamma)
//{   return decode_gamma_input(texture(tex, tex_coords, dx, dy), gamma);   }
//inline float4 tex2D_linearize_gamma(const sampler2D tex, const float2 tex_coords, const float2 dx, const float2 dy, const int texel_off, const float3 gamma)
//{   return decode_gamma_input(texture(tex, tex_coords, dx, dy, texel_off), gamma);    }
//inline float4 tex2D_linearize_gamma(const sampler2D tex, const float3 tex_coords, const float2 dx, const float2 dy, const int texel_off, const float3 gamma)
//{   return decode_gamma_input(texture(tex, tex_coords, dx, dy, texel_off), gamma);    }
//  tex2Dbias:
//  tex2Dfetch:
//  tex2Dlod:
/////////////////////////////////  MIT LICENSE  ////////////////////////////////
//  Copyright (C) 2014 TroggleMonkey*
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to
//  deal in the Software without restriction, including without limitation the
//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
//  sell copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
//  IN THE SOFTWARE.
/////////////////////////////////  DISCLAIMER  /////////////////////////////////
//  *This code was inspired by "Shader Amortization using Pixel Quad Message
//  Passing" by Eric Penner, published in GPU Pro 2, Chapter VI.2.  My intent
//  is not to plagiarize his fundamentally similar code and assert my own
//  copyright, but the algorithmic helper functions require so little code that
//  implementations can't vary by much except bugfixes and conventions.  I just
//  wanted to license my own particular code here to avoid ambiguity and make it
//  clear that as far as I'm concerned, people can do as they please with it.
/////////////////////////////////  DESCRIPTION  ////////////////////////////////
//  Given screen pixel numbers, derive a "quad vector" describing a fragment's
//  position in its 2x2 pixel quad.  Given that vector, obtain the values of any
//  variable at neighboring fragments.
//  Requires:   Using this file in general requires:
//              1.) ddx() and ddy() are present in the current Cg profile.
//              2.) The GPU driver is using fine/high-quality derivatives.
//                  Functions will give incorrect results if this is not true,
//                  so a test function is included.
/////////////////////  QUAD-PIXEL COMMUNICATION PRIMITIVES  ////////////////////
//  Requires:   Two measures of the current fragment's output pixel number
//              in the range ([0, IN.output_size.x), [0, IN.output_size.y)):
//              1.) output_pixel_num_wrt_uvxy.xy increase with uv coords.
//              2.) output_pixel_num_wrt_uvxy.zw increase with screen xy.
//  Returns:    Two measures of the fragment's position in its 2x2 quad:
//              1.) The .xy components are its 2x2 placement with respect to
//                  uv direction (the origin (0, 0) is at the top-left):
//                  top-left     = (-1.0, -1.0) top-right    = ( 1.0, -1.0)
//                  bottom-left  = (-1.0,  1.0) bottom-right = ( 1.0,  1.0)
//                  You need this to arrange/weight shared texture samples.
//              2.) The .zw components are its 2x2 placement with respect to
//                  screen xy direction (IN.position); the origin varies.
//                  quad_gather needs this measure to work correctly.
//              Note: quad_vector.zw = quad_vector.xy * float2(
//                      ddx(output_pixel_num_wrt_uvxy.x),
//                      ddy(output_pixel_num_wrt_uvxy.y));
//  Caveats:    This function assumes the GPU driver always starts 2x2 pixel
//              quads at even pixel numbers.  This assumption can be wrong
//              for odd output resolutions (nondeterministically so).
//  Requires:   Same as get_quad_vector_naive() (see that first).
//  Returns:    Same as get_quad_vector_naive() (see that first), but it's
//              correct even if the 2x2 pixel quad starts at an odd pixel,
//              which can occur at odd resolutions.
//  If quad_vector_guess.zw doesn't increase with screen xy, we know
//  the 2x2 pixel quad starts at an odd pixel:
//  Requires:   1.) ddx() and ddy() are present in the current Cg profile.
//              2.) output_pixel_num_wrt_uv must increase with uv coords and
//                  measure the current fragment's output pixel number in:
//                      ([0, IN.output_size.x), [0, IN.output_size.y))
//  Returns:    Same as get_quad_vector_naive() (see that first), but it's
//              correct even if the 2x2 pixel quad starts at an odd pixel,
//              which can occur at odd resolutions.
//  Caveats:    This function requires less information than the version
//              taking a float4, but it's potentially slower.
//  Do screen coords increase with or against uv?  Get the direction
//  with respect to (uv.x, uv.y) for (screen.x, screen.y) in {-1, 1}.
//  If quad_vector_screen_guess doesn't increase with screen xy, we know
//  the 2x2 pixel quad starts at an odd pixel:
//  Requires:   1.) ddx() and ddy() are present in the current Cg profile.
//              2.) The GPU driver is using fine/high-quality derivatives.
//              3.) quad_vector describes the current fragment's location in
//                  its 2x2 pixel quad using get_quad_vector()'s conventions.
//              4.) curr is any vector you wish to get neighboring values of.
//  Returns:    Values of an input vector (curr) at neighboring fragments
//              adjacent x, adjacent y, and diagonal (via out parameters).
//  Float3 version
//  Float2 version
//  Float version:
//  Returns:    return.x == current
//              return.y == adjacent x
//              return.z == adjacent y
//              return.w == diagonal
//  Requires:   Same as quad_gather()
//  Returns:    Sum of an input vector (curr) at all fragments in a quad.
//  Float3 version:
//  Float2 version:
//  Float version:
//  Requires:   1.) ddx() and ddy() are present in the current Cg profile.
//              2.) quad_vector describes the current fragment's location in
//                  its 2x2 pixel quad using get_quad_vector()'s conventions.
//              3.) curr must be a test vector with non-constant derivatives
//                  (its value should change nonlinearly across fragments).
//  Returns:    true if fine/hybrid/high-quality derivatives are used, or
//              false if coarse derivatives are used or inconclusive
//  Usage:      Test whether quad-pixel communication is working!
//  Method:     We can confirm fine derivatives are used if the following
//              holds (ever, for any value at any fragment):
//                  (ddy(curr) != ddy(adjx)) or (ddx(curr) != ddx(adjy))
//              The more values we test (e.g. test a float4 two ways), the
//              easier it is to demonstrate fine derivatives are working.
//  TODO: Check for floating point exact comparison issues!
//  Requires:   Same as fine_derivatives_working()
//  Returns:    Same as fine_derivatives_working()
//  Usage:      This is faster than fine_derivatives_working() but more
//              likely to return false negatives, so it's less useful for
//              offline testing/debugging.  It's also useless as the basis
//              for dynamic runtime branching as of May 2014: Derivatives
//              (and quad-pixel communication) are currently disallowed in
//              branches.  However, future GPU's may allow you to use them
//              in dynamic branches if you promise the branch condition
//              evaluates the same for every fragment in the quad (and/or if
//              the driver enforces that promise by making a single fragment
//              control branch decisions).  If that ever happens, this
//              version may become a more economical choice.
/////////////////////////////////  MIT LICENSE  ////////////////////////////////
//  Copyright (C) 2014 TroggleMonkey
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to
//  deal in the Software without restriction, including without limitation the
//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
//  sell copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
//  IN THE SOFTWARE.
/////////////////////////////////  DESCRIPTION  ////////////////////////////////
//  This file implements the following mathematical special functions:
//  1.) erf() = 2/sqrt(pi) * indefinite_integral(e**(-x**2))
//  2.) gamma(s), a real-numbered extension of the integer factorial function
//  It also implements normalized_ligamma(s, z), a normalized lower incomplete
//  gamma function for s < 0.5 only.  Both gamma() and normalized_ligamma() can
//  be called with an _impl suffix to use an implementation version with a few
//  extra precomputed parameters (which may be useful for the caller to reuse).
//  See below for details.
//
//  Design Rationale:
//  Pretty much every line of code in this file is duplicated four times for
//  different input types (float4/float3/float2/float).  This is unfortunate,
//  but Cg doesn't allow function templates.  Macros would be far less verbose,
//  but they would make the code harder to document and read.  I don't expect
//  these functions will require a whole lot of maintenance changes unless
//  someone ever has need for more robust incomplete gamma functions, so code
//  duplication seems to be the lesser evil in this case.
///////////////////////////  GAUSSIAN ERROR FUNCTION  //////////////////////////
//  Requires:   x is the standard parameter to erf().
//  Returns:    Return an Abramowitz/Stegun approximation of erf(), where:
//                  erf(x) = 2/sqrt(pi) * integral(e**(-x**2))
//              This approximation has a max absolute error of 2.5*10**-5
//              with solid numerical robustness and efficiency.  See:
//                  https://en.wikipedia.org/wiki/Error_function#Approximation_with_elementary_functions
//  Float3 version:
//  Float2 version:
//  Float version:
//  Requires:   x is the standard parameter to erf().
//  Returns:    Approximate erf() with the hyperbolic tangent.  The error is
//              visually noticeable, but it's blazing fast and perceptually
//              close...at least on ATI hardware.  See:
//                  http://www.maplesoft.com/applications/view.aspx?SID=5525&view=html
//  Warning:    Only use this if your hardware drivers correctly implement
//              tanh(): My nVidia 8800GTS returns garbage output.
//  Float3 version:
//  Float2 version:
//  Float version:
//  Requires:   x is the standard parameter to erf().
//  Returns:    Some approximation of erf(x), depending on user settings.
//  Float3 version:
//  Float2 version:
//  Float version:
///////////////////////////  COMPLETE GAMMA FUNCTION  //////////////////////////
//  Requires:   1.) s is the standard parameter to the gamma function, and
//                  it should lie in the [0, 36] range.
//              2.) s_inv = 1.0/s.  This implementation function requires
//                  the caller to precompute this value, giving users the
//                  opportunity to reuse it.
//  Returns:    Return approximate gamma function (real-numbered factorial)
//              output using the Lanczos approximation with two coefficients
//              calculated using Paul Godfrey's method here:
//                  http://my.fit.edu/~gabdo/gamma.txt
//              An optimal g value for s in [0, 36] is ~1.12906830989, with
//              a maximum relative error of 0.000463 for 2**16 equally
//              evals.  We could use three coeffs (0.0000346 error) without
//              hurting latency, but this allows more parallelism with
//              outside instructions.
//  gamma(s + 1) = base**sph * lanczos_sum; divide by s for gamma(s).
//  This has less error for small s's than (s -= 1.0) at the beginning.
//  Float3 version:
//  Float2 version:
//  Float version:
//  Requires:   s is the standard parameter to the gamma function, and it
//              should lie in the [0, 36] range.
//  Returns:    Return approximate gamma function output with a maximum
//              relative error of 0.000463.  See gamma_impl for details.
//  Float3 version:
//  Float2 version:
//  Float version:
////////////////  INCOMPLETE GAMMA FUNCTIONS (RESTRICTED INPUT)  ///////////////
//  Lower incomplete gamma function for small s and z (implementation):
//  Requires:   1.) s < ~0.5
//              2.) z <= ~0.775075
//              3.) s_inv = 1.0/s (precomputed for outside reuse)
//  Returns:    A series representation for the lower incomplete gamma
//              function for small s and small z (4 terms).
//  The actual "rolled up" summation looks like:
//      last_sign = 1.0; last_pow = 1.0; last_factorial = 1.0;
//      sum = last_sign * last_pow / ((s + k) * last_factorial)
//      for(int i = 0; i < 4; ++i)
//      {
//          last_sign *= -1.0; last_pow *= z; last_factorial *= i;
//          sum += last_sign * last_pow / ((s + k) * last_factorial);
//      }
//  Unrolled, constant-unfolded and arranged for madds and parallelism:
//  Summation iterations 1, 2, and 3:
//float4 denom4 = 24.0*s + float4(96.0);
//sum += z_sq * z_sq / denom4;
//  Scale and return:
//  Float3 version:
//  Float2 version:
//  Float version:
//  Upper incomplete gamma function for small s and large z (implementation):
//  Requires:   1.) s < ~0.5
//              2.) z > ~0.775075
//  Returns:    Gauss's continued fraction representation for the upper
//              incomplete gamma function (4 terms).
//  The "rolled up" continued fraction looks like this.  The denominator
//  is truncated, and it's calculated "from the bottom up:
//      denom = float4('inf');
//      float4 one = float4(1.0);
//      for(int i = 4; i > 0; --i)
//      {
//          denom = ((i * 2.0) - one) + z - s + (i * (s - i))/denom;
//      }
//  Unrolled and constant-unfolded for madds and parallelism:
//  Float3 version:
//  Float2 version:
//  Float version:
//  Normalized lower incomplete gamma function for small s (implementation):
//  Requires:   1.) s < ~0.5
//              2.) s_inv = 1/s (precomputed for outside reuse)
//              3.) gamma_s_inv = 1/gamma(s) (precomputed for outside reuse)
//  Returns:    Approximate the normalized lower incomplete gamma function
//              for s < 0.5.  Since we only care about s < 0.5, we only need
//              to evaluate two branches (not four) based on z.  Each branch
//              uses four terms, with a max relative error of ~0.00182.  The
//              branch threshold and specifics were adapted for fewer terms
//              from Gil/Segura/Temme's paper here:
//                  http://oai.cwi.nl/oai/asset/20433/20433B.pdf
//  Evaluate both branches: Real branches test slower even when available.
//  Combine the results from both branches:
//  Float3 version:
//  Float2 version:
//  Float version:
//  Normalized lower incomplete gamma function for small s:
//  Requires:   s < ~0.5
//  Returns:    Approximate the normalized lower incomplete gamma function
//              for s < 0.5.  See normalized_ligamma_impl() for details.
//  Float3 version:
//  Float2 version:
//  Float version:
///////////////////////////////////  HELPERS  //////////////////////////////////
//  Make a float2 uv offset safe for adding to float4 tex2Dlod coords:
//  Make a length squared helper macro (for usage with static constants):
//  We can use the Gaussian integral to calculate the asymptotic weight for
//  the center pixel.  Since the unnormalized center pixel weight is 1.0,
//  the normalized weight is the same as the weight sum inverse.  Given a
//  large enough blur (9+), the asymptotic weight sum is close and faster:
//      center_weight = 0.5 *
//          (erf(0.5/(sigma*sqrt(2.0))) - erf(-0.5/(sigma*sqrt(2.0))))
//      erf(-x) == -erf(x), so we get 0.5 * (2.0 * erf(blah blah)):
//  However, we can get even faster results with curve-fitting.  These are
//  also closer than the asymptotic results, because they were constructed
//  from 64 blurs sizes from [3, 131) and 255 equally-spaced sigmas from
//  (0, blurN_std_dev), so the results for smaller sigmas are biased toward
//  smaller blurs.  The max error is 0.0031793913.
//  Relative FPS: 134.3 with erf, 135.8 with curve-fitting.
//static const float temp = 0.5/sqrt(2.0);
//return erf(temp/sigma);
////////////////////  ARBITRARILY RESIZABLE SEPARABLE BLURS  ///////////////////
//  Requires:   Global requirements must be met (see file description).
//  Returns:    A 1D 11x Gaussian blurred texture lookup using a 11-tap blur.
//              It may be mipmapped depending on settings and dxdy.
//  Calculate Gaussian blur kernel weights and a normalization factor for
//  distances of 0-4, ignoring constant factors (since we're normalizing).
//  Statically normalize weights, sum weighted samples, and return.  Blurs are
//  currently optimized for dynamic weights.
//  Requires:   Global requirements must be met (see file description).
//  Returns:    A 1D 9x Gaussian blurred texture lookup using a 9-tap blur.
//              It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Global requirements must be met (see file description).
//  Returns:    A 1D 7x Gaussian blurred texture lookup using a 7-tap blur.
//              It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Global requirements must be met (see file description).
//  Returns:    A 1D 5x Gaussian blurred texture lookup using a 5-tap blur.
//              It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Global requirements must be met (see file description).
//  Returns:    A 1D 3x Gaussian blurred texture lookup using a 3-tap blur.
//              It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Statically normalize weights, sum weighted samples, and return:
///////////////////////////  FAST SEPARABLE BLURS  ///////////////////////////
//  Requires:   1.) Global requirements must be met (see file description).
//              2.) filter_linearN must = "true" in your .cgp file.
//              3.) For gamma-correct bilinear filtering, global
//                  gamma_aware_bilinear == true (from gamma-management.h)
//  Returns:    A 1D 11x Gaussian blurred texture lookup using 6 linear
//              taps.  It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Calculate combined weights and linear sample ratios between texel pairs.
//  The center texel (with weight w0) is used twice, so halve its weight.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 9x Gaussian blurred texture lookup using 1 nearest
//              neighbor and 4 linear taps.  It may be mipmapped depending
//              on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Calculate combined weights and linear sample ratios between texel pairs.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 7x Gaussian blurred texture lookup using 4 linear
//              taps.  It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Calculate combined weights and linear sample ratios between texel pairs.
//  The center texel (with weight w0) is used twice, so halve its weight.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 5x Gaussian blurred texture lookup using 1 nearest
//              neighbor and 2 linear taps.  It may be mipmapped depending
//              on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Calculate combined weights and linear sample ratios between texel pairs.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 3x Gaussian blurred texture lookup using 2 linear
//              taps.  It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//  Calculate combined weights and linear sample ratios between texel pairs.
//  The center texel (with weight w0) is used twice, so halve its weight.
//  Weights for all samples are the same, so just average them:
////////////////////////////  HUGE SEPARABLE BLURS  ////////////////////////////
//  Huge separable blurs come only in "fast" versions.
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 43x Gaussian blurred texture lookup using 22 linear
//              taps.  It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//const float weight_sum_inv = 1.0 /
//    (w0 + 2.0 * (w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 +
//        w12 + w13 + w14 + w15 + w16 + w17 + w18 + w19 + w20 + w21));
//  Calculate combined weights and linear sample ratios between texel pairs.
//  The center texel (with weight w0) is used twice, so halve its weight.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 31x Gaussian blurred texture lookup using 16 linear
//              taps.  It may be mipmapped depending on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//const float weight_sum_inv = 1.0 /
//    (w0 + 2.0 * (w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 +
//        w9 + w10 + w11 + w12 + w13 + w14 + w15));
//  Calculate combined weights and linear sample ratios between texel pairs.
//  The center texel (with weight w0) is used twice, so halve its weight.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 25x Gaussian blurred texture lookup using 1 nearest
//              neighbor and 12 linear taps.  It may be mipmapped depending
//              on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//const float weight_sum_inv = 1.0 / (w0 + 2.0 * (
//    w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10 + w11 + w12));
//  Calculate combined weights and linear sample ratios between texel pairs.
//  Statically normalize weights, sum weighted samples, and return:
//  Requires:   Same as tex2Dblur11()
//  Returns:    A 1D 17x Gaussian blurred texture lookup using 1 nearest
//              neighbor and 8 linear taps.  It may be mipmapped depending
//              on settings and dxdy.
//  First get the texel weights and normalization factor as above.
//const float weight_sum_inv = 1.0 / (w0 + 2.0 * (
//    w1 + w2 + w3 + w4 + w5 + w6 + w7 + w8));
//  Calculate combined weights and linear sample ratios between texel pairs.
//  Statically normalize weights, sum weighted samples, and return:
////////////////////  ARBITRARILY RESIZABLE ONE-PASS BLURS  ////////////////////
//  Requires:   Global requirements must be met (see file description).
//  Returns:    A 3x3 Gaussian blurred mipmapped texture lookup of the
//              resized input.
//  Description:
//  This is the only arbitrarily resizable one-pass blur; tex2Dblur5x5resize
//  would perform like tex2Dblur9x9, MUCH slower than tex2Dblur5resize.
//  Load each sample.  We need all 3x3 samples.  Quad-pixel communication
//  won't help either: This should perform like tex2Dblur5x5, but sharing a
//  4x4 sample field would perform more like tex2Dblur8x8shared (worse).
//  Statically compute Gaussian sample weights:
//  Weight and sum the samples:
////////////////////////////  FASTER ONE-PASS BLURS  ///////////////////////////
//  Perform a 1-pass 9x9 blur with 5x5 bilinear samples.
//  Requires:   Same as tex2Dblur9()
//  Returns:    A 9x9 Gaussian blurred mipmapped texture lookup composed of
//              5x5 carefully selected bilinear samples.
//  Description:
//  Perform a 1-pass 9x9 blur with 5x5 bilinear samples.  Adjust the
//  bilinear sample location to reflect the true Gaussian weights for each
//  underlying texel.  The following diagram illustrates the relative
//  locations of bilinear samples.  Each sample with the same number has the
//  same weight (notice the symmetry).  The letters a, b, c, d distinguish
//  quadrants, and the letters U, D, L, R, C (up, down, left, right, center)
//  distinguish 1D directions along the line containing the pixel center:
//      6a 5a 2U 5b 6b
//      4a 3a 1U 3b 4b
//      2L 1L 0C 1R 2R
//      4c 3c 1D 3d 4d
//      6c 5c 2D 5d 6d
//  The following diagram illustrates the underlying equally spaced texels,
//  named after the sample that accesses them and subnamed by their location
//  within their 2x2, 2x1, 1x2, or 1x1 texel block:
//      6a4 6a3 5a4 5a3 2U2 5b3 5b4 6b3 6b4
//      6a2 6a1 5a2 5a1 2U1 5b1 5b2 6b1 6b2
//      4a4 4a3 3a4 3a3 1U2 3b3 3b4 4b3 4b4
//      4a2 4a1 3a2 3a1 1U1 3b1 3b2 4b1 4b2
//      2L2 2L1 1L2 1L1 0C1 1R1 1R2 2R1 2R2
//      4c2 4c1 3c2 3c1 1D1 3d1 3d2 4d1 4d2
//      4c4 4c3 3c4 3c3 1D2 3d3 3d4 4d3 4d4
//      6c2 6c1 5c2 5c1 2D1 5d1 5d2 6d1 6d2
//      6c4 6c3 5c4 5c3 2D2 5d3 5d4 6d3 6d4
//  Note there is only one C texel and only two texels for each U, D, L, or
//  R sample.  The center sample is effectively a nearest neighbor sample,
//  and the U/D/L/R samples use 1D linear filtering.  All other texels are
//  read with bilinear samples somewhere within their 2x2 texel blocks.
//  COMPUTE TEXTURE COORDS:
//  Statically compute sampling offsets within each 2x2 texel block, based
//  on 1D sampling ratios between texels [1, 2] and [3, 4] texels away from
//  the center, and reuse them independently for both dimensions.  Compute
//  these offsets based on the relative 1D Gaussian weights of the texels
//  in question.  (w1off means "Gaussian weight for the texel 1.0 texels
//  away from the pixel center," etc.).
//  Statically compute texel offsets from the fragment center to each
//  bilinear sample in the bottom-right quadrant, including x-axis-aligned:
//  CALCULATE KERNEL WEIGHTS FOR ALL SAMPLES:
//  Statically compute Gaussian texel weights for the bottom-right quadrant.
//  Read underscores as "and.
//  Statically add texel weights in each sample to get sample weights:
//  Get the weight sum inverse (normalization factor):
//  LOAD TEXTURE SAMPLES:
//  Load all 25 samples (1 nearest, 8 linear, 16 bilinear) using symmetry:
//  Sampling order doesn't seem to affect performance, so just be clear:
//  SUM WEIGHTED SAMPLES:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Perform a 1-pass 7x7 blur with 5x5 bilinear samples.
//  Requires:   Same as tex2Dblur9()
//  Returns:    A 7x7 Gaussian blurred mipmapped texture lookup composed of
//              4x4 carefully selected bilinear samples.
//  Description:
//  First see the descriptions for tex2Dblur9x9() and tex2Dblur7().  This
//  blur mixes concepts from both.  The sample layout is as follows:
//      4a 3a 3b 4b
//      2a 1a 1b 2b
//      2c 1c 1d 2d
//      4c 3c 3d 4d
//  The texel layout is as follows.  Note that samples 3a/3b, 1a/1b, 1c/1d,
//  and 3c/3d share a vertical column of texels, and samples 2a/2c, 1a/1c,
//  1b/1d, and 2b/2d share a horizontal row of texels (all sample1's share
//  the center texel):
//      4a4  4a3  3a4  3ab3 3b4  4b3  4b4
//      4a2  4a1  3a2  3ab1 3b2  4b1  4b2
//      2a4  2a3  1a4  1ab3 1b4  2b3  2b4
//      2ac2 2ac1 1ac2 1*   1bd2 2bd1 2bd2
//      2c4  2c3  1c4  1cd3 1d4  2d3  2d4
//      4c2  4c1  3c2  3cd1 3d2  4d1  4d2
//      4c4  4c3  3c4  3cd3 3d4  4d3  4d4
//  COMPUTE TEXTURE COORDS:
//  Statically compute bilinear sampling offsets (details in tex2Dblur9x9).
//  Statically compute texel offsets from the fragment center to each
//  bilinear sample in the bottom-right quadrant, including axis-aligned:
//  CALCULATE KERNEL WEIGHTS FOR ALL SAMPLES:
//  Statically compute Gaussian texel weights for the bottom-right quadrant.
//  Read underscores as "and.
//  Statically add texel weights in each sample to get sample weights.
//  Split weights for shared texels between samples sharing them:
//  Get the weight sum inverse (normalization factor):
//  LOAD TEXTURE SAMPLES:
//  Load all 16 samples using symmetry:
//  SUM WEIGHTED SAMPLES:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Perform a 1-pass 5x5 blur with 3x3 bilinear samples.
//  Requires:   Same as tex2Dblur9()
//  Returns:    A 5x5 Gaussian blurred mipmapped texture lookup composed of
//              3x3 carefully selected bilinear samples.
//  Description:
//  First see the description for tex2Dblur9x9().  This blur uses the same
//  concept and sample/texel locations except on a smaller scale.  Samples:
//      2a 1U 2b
//      1L 0C 1R
//      2c 1D 2d
//  Texels:
//      2a4 2a3 1U2 2b3 2b4
//      2a2 2a1 1U1 2b1 2b2
//      1L2 1L1 0C1 1R1 1R2
//      2c2 2c1 1D1 2d1 2d2
//      2c4 2c3 1D2 2d3 2d4
//  COMPUTE TEXTURE COORDS:
//  Statically compute bilinear sampling offsets (details in tex2Dblur9x9).
//  Statically compute texel offsets from the fragment center to each
//  bilinear sample in the bottom-right quadrant, including x-axis-aligned:
//  CALCULATE KERNEL WEIGHTS FOR ALL SAMPLES:
//  Statically compute Gaussian texel weights for the bottom-right quadrant.
//  Read underscores as "and.
//  Statically add texel weights in each sample to get sample weights:
//  Get the weight sum inverse (normalization factor):
//  LOAD TEXTURE SAMPLES:
//  Load all 9 samples (1 nearest, 4 linear, 4 bilinear) using symmetry:
//  SUM WEIGHTED SAMPLES:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Perform a 1-pass 3x3 blur with 5x5 bilinear samples.
//  Requires:   Same as tex2Dblur9()
//  Returns:    A 3x3 Gaussian blurred mipmapped texture lookup composed of
//              2x2 carefully selected bilinear samples.
//  Description:
//  First see the descriptions for tex2Dblur9x9() and tex2Dblur7().  This
//  blur mixes concepts from both.  The sample layout is as follows:
//      0a 0b
//      0c 0d
//  The texel layout is as follows.  Note that samples 0a/0b and 0c/0d share
//  a vertical column of texels, and samples 0a/0c and 0b/0d share a
//  horizontal row of texels (all samples share the center texel):
//      0a3  0ab2 0b3
//      0ac1 0*0  0bd1
//      0c3  0cd2 0d3
//  COMPUTE TEXTURE COORDS:
//  Statically compute bilinear sampling offsets (details in tex2Dblur9x9).
//  Statically compute texel offsets from the fragment center to each
//  bilinear sample in the bottom-right quadrant, including axis-aligned:
//  LOAD TEXTURE SAMPLES:
//  Load all 4 samples using symmetry:
//  SUM WEIGHTED SAMPLES:
//  Weights for all samples are the same, so just average them:
//////////////////  LINEAR ONE-PASS BLURS WITH SHARED SAMPLES  /////////////////
//  Perform a 1-pass mipmapped blur with shared samples across a pixel quad.
//  Requires:   1.) Same as tex2Dblur9()
//              2.) ddx() and ddy() are present in the current Cg profile.
//              3.) The GPU driver is using fine/high-quality derivatives.
//              4.) quad_vector *correctly* describes the current fragment's
//                  location in its pixel quad, by the conventions noted in
//                  get_quad_vector[_naive].
//              5.) tex_uv.w = log2(IN.video_size/IN.output_size).y
//              6.) tex2Dlod() is present in the current Cg profile.
//  Optional:   Tune artifacts vs. excessive blurriness with the global
//              float error_blurring.
//  Returns:    A blurred texture lookup using a "virtual" 12x12 Gaussian
//              blur (a 6x6 blur of carefully selected bilinear samples)
//              of the given mip level.  There will be subtle inaccuracies,
//              especially for small or high-frequency detailed sources.
//  Description:
//  Perform a 1-pass blur with shared texture lookups across a pixel quad.
//  We'll get neighboring samples with high-quality ddx/ddy derivatives, as
//  in GPU Pro 2, Chapter VI.2, "Shader Amortization using Pixel Quad
//  Message Passing" by Eric Penner.
//
//  Our "virtual" 12x12 blur will be comprised of ((6 - 1)^2)/4 + 3 = 12
//  bilinear samples, where bilinear sampling positions are computed from
//  the relative Gaussian weights of the 4 surrounding texels.  The catch is
//  that the appropriate texel weights and sample coords differ for each
//  fragment, but we're reusing most of the same samples across a quad of
//  destination fragments.  (We do use unique coords for the four nearest
//  samples at each fragment.)  Mixing bilinear filtering and sample-sharing
//  therefore introduces some error into the weights, and this can get nasty
//  when the source image is small or high-frequency.  Computing bilinear
//  ratios based on weights at the sample field center results in sharpening
//  and ringing artifacts, but we can move samples closer to halfway between
//  texels to try blurring away the error (which can move features around by
//  a texel or so).  Tune this with the global float "error_blurring".
//
//  The pixel quad's sample field covers 12x12 texels, accessed through 6x6
//  bilinear (2x2 texel) taps.  Each fragment depends on a window of 10x10
//  texels (5x5 bilinear taps), and each fragment is responsible for loading
//  a 6x6 texel quadrant as a 3x3 block of bilinear taps, plus 3 more taps
//  to use unique bilinear coords for sample0* for each fragment.  This
//  diagram illustrates the relative locations of bilinear samples 1-9 for
//  each quadrant a, b, c, d (note samples will not be equally spaced):
//      8a 7a 6a 6b 7b 8b
//      5a 4a 3a 3b 4b 5b
//      2a 1a 0a 0b 1b 2b
//      2c 1c 0c 0d 1d 2d
//      5c 4c 3c 3d 4d 5d
//      8c 7c 6c 6d 7d 8d
//  The following diagram illustrates the underlying equally spaced texels,
//  named after the sample that accesses them and subnamed by their location
//  within their 2x2 texel block:
//      8a3 8a2 7a3 7a2 6a3 6a2 6b2 6b3 7b2 7b3 8b2 8b3
//      8a1 8a0 7a1 7a0 6a1 6a0 6b0 6b1 7b0 7b1 8b0 8b1
//      5a3 5a2 4a3 4a2 3a3 3a2 3b2 3b3 4b2 4b3 5b2 5b3
//      5a1 5a0 4a1 4a0 3a1 3a0 3b0 3b1 4b0 4b1 5b0 5b1
//      2a3 2a2 1a3 1a2 0a3 0a2 0b2 0b3 1b2 1b3 2b2 2b3
//      2a1 2a0 1a1 1a0 0a1 0a0 0b0 0b1 1b0 1b1 2b0 2b1
//      2c1 2c0 1c1 1c0 0c1 0c0 0d0 0d1 1d0 1d1 2d0 2d1
//      2c3 2c2 1c3 1c2 0c3 0c2 0d2 0d3 1d2 1d3 2d2 2d3
//      5c1 5c0 4c1 4c0 3c1 3c0 3d0 3d1 4d0 4d1 5d0 5d1
//      5c3 5c2 4c3 4c2 3c3 3c2 3d2 3d3 4d2 4d3 5d2 5d3
//      8c1 8c0 7c1 7c0 6c1 6c0 6d0 6d1 7d0 7d1 8d0 8d1
//      8c3 8c2 7c3 7c2 6c3 6c2 6d2 6d3 7d2 7d3 8d2 8d3
//  With this symmetric arrangement, we don't have to know which absolute
//  quadrant a sample lies in to assign kernel weights; it's enough to know
//  the sample number and the relative quadrant of the sample (relative to
//  the current quadrant):
//      {current, adjacent x, adjacent y, diagonal}
//  COMPUTE COORDS FOR TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Statically compute sampling offsets within each 2x2 texel block, based
//  on appropriate 1D Gaussian sampling ratio between texels [0, 1], [2, 3],
//  and [4, 5] away from the fragment, and reuse them independently for both
//  dimensions.  Use the sample field center as the estimated destination,
//  but nudge the result closer to halfway between texels to blur error.
//  We don't share sample0*, so use the nearest destination fragment:
//  Statically compute texel offsets from the bottom-right fragment to each
//  bilinear sample in the bottom-right quadrant:
//  CALCULATE KERNEL WEIGHTS:
//  Statically compute bilinear sample weights at each destination fragment
//  based on the sum of their 4 underlying texel weights.  Assume a same-
//  resolution blur, so each symmetrically named sample weight will compute
//  the same at every fragment in the pixel quad: We can therefore compute
//  texel weights based only on the bottom-right quadrant (fragment at 0d0).
//  Too avoid too much boilerplate code, use a macro to get all 4 texel
//  weights for a bilinear sample based on the offset of its top-left texel:
//  Statically pack weights for runtime:
//  Get the weight sum inverse (normalization factor):
//  LOAD TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Get a uv vector from texel 0q0 of this quadrant to texel 0q3:
//  Load bilinear samples for the current quadrant (for this fragment):
//  GATHER NEIGHBORING SAMPLES AND SUM WEIGHTED SAMPLES:
//  Fetch the samples from other fragments in the 2x2 quad:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Fill each row of a matrix with an rgb sample and pre-multiply by the
//  weights to obtain a weighted result:
//  Perform a 1-pass mipmapped blur with shared samples across a pixel quad.
//  Requires:   Same as tex2Dblur12x12shared()
//  Returns:    A blurred texture lookup using a "virtual" 10x10 Gaussian
//              blur (a 5x5 blur of carefully selected bilinear samples)
//              of the given mip level.  There will be subtle inaccuracies,
//              especially for small or high-frequency detailed sources.
//  Description:
//  First see the description for tex2Dblur12x12shared().  This
//  function shares the same concept and sample placement, but each fragment
//  only uses 25 of the 36 samples taken across the pixel quad (to cover a
//  5x5 sample area, or 10x10 texel area), and it uses a lower standard
//  deviation to compensate.  Thanks to symmetry, the 11 omitted samples
//  are always the "same:
//      8adjx, 2adjx, 5adjx,
//      6adjy, 7adjy, 8adjy,
//      2diag, 5diag, 6diag, 7diag, 8diag
//  COMPUTE COORDS FOR TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Statically compute bilinear sampling offsets (details in tex2Dblur12x12shared).
//  We don't share sample0*, so use the nearest destination fragment:
//  Statically compute texel offsets from the bottom-right fragment to each
//  bilinear sample in the bottom-right quadrant:
//  CALCULATE KERNEL WEIGHTS:
//  Statically compute bilinear sample weights at each destination fragment
//  from the sum of their 4 texel weights (details in tex2Dblur12x12shared).
//  We only need 25 of the 36 sample weights.  Skip the following weights:
//      8adjx, 2adjx, 5adjx,
//      6adjy, 7adjy, 8adjy,
//      2diag, 5diag, 6diag, 7diag, 8diag
//  Get the weight sum inverse (normalization factor):
//  Statically pack most weights for runtime.  Note the mixed packing:
//  LOAD TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Get a uv vector from texel 0q0 of this quadrant to texel 0q3:
//  Load bilinear samples for the current quadrant (for this fragment):
//  GATHER NEIGHBORING SAMPLES AND SUM WEIGHTED SAMPLES:
//  Fetch the samples from other fragments in the 2x2 quad in order of need:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Fill each row of a matrix with an rgb sample and pre-multiply by the
//  weights to obtain a weighted result.  First do the simple ones:
//  Now do the mixed-sample ones:
//  Normalize the sum (so the weights add to 1.0) and return:
//  Perform a 1-pass mipmapped blur with shared samples across a pixel quad.
//  Requires:   Same as tex2Dblur12x12shared()
//  Returns:    A blurred texture lookup using a "virtual" 8x8 Gaussian
//              blur (a 4x4 blur of carefully selected bilinear samples)
//              of the given mip level.  There will be subtle inaccuracies,
//              especially for small or high-frequency detailed sources.
//  Description:
//  First see the description for tex2Dblur12x12shared().  This function
//  shares the same concept and a similar sample placement, except each
//  quadrant contains 4x4 texels and 2x2 samples instead of 6x6 and 3x3
//  respectively.  There could be a total of 16 samples, 4 of which each
//  fragment is responsible for, but each fragment loads 0a/0b/0c/0d with
//  its own offset to reduce shared sample artifacts, bringing the sample
//  count for each fragment to 7.  Sample placement:
//      3a 2a 2b 3b
//      1a 0a 0b 1b
//      1c 0c 0d 1d
//      3c 2c 2d 3d
//  Texel placement:
//      3a3 3a2 2a3 2a2 2b2 2b3 3b2 3b3
//      3a1 3a0 2a1 2a0 2b0 2b1 3b0 3b1
//      1a3 1a2 0a3 0a2 0b2 0b3 1b2 1b3
//      1a1 1a0 0a1 0a0 0b0 0b1 1b0 1b1
//      1c1 1c0 0c1 0c0 0d0 0d1 1d0 1d1
//      1c3 1c2 0c3 0c2 0d2 0d3 1d2 1d3
//      3c1 3c0 2c1 2c0 2d0 2d1 3d0 4d1
//      3c3 3c2 2c3 2c2 2d2 2d3 3d2 4d3
//  COMPUTE COORDS FOR TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Statically compute bilinear sampling offsets (details in tex2Dblur12x12shared).
//  We don't share sample0*, so use the nearest destination fragment:
//  Statically compute texel offsets from the bottom-right fragment to each
//  bilinear sample in the bottom-right quadrant:
//  CALCULATE KERNEL WEIGHTS:
//  Statically compute bilinear sample weights at each destination fragment
//  from the sum of their 4 texel weights (details in tex2Dblur12x12shared).
//  Statically pack weights for runtime:
//  Get the weight sum inverse (normalization factor):
//  LOAD TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Get a uv vector from texel 0q0 of this quadrant to texel 0q3:
//  Load bilinear samples for the current quadrant (for this fragment):
//  GATHER NEIGHBORING SAMPLES AND SUM WEIGHTED SAMPLES:
//  Fetch the samples from other fragments in the 2x2 quad:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Fill each row of a matrix with an rgb sample and pre-multiply by the
//  weights to obtain a weighted result:
//  Perform a 1-pass mipmapped blur with shared samples across a pixel quad.
//  Requires:   Same as tex2Dblur12x12shared()
//  Returns:    A blurred texture lookup using a "virtual" 6x6 Gaussian
//              blur (a 3x3 blur of carefully selected bilinear samples)
//              of the given mip level.  There will be some inaccuracies,subtle inaccuracies,
//              especially for small or high-frequency detailed sources.
//  Description:
//  First see the description for tex2Dblur8x8shared().  This
//  function shares the same concept and sample placement, but each fragment
//  only uses 9 of the 16 samples taken across the pixel quad (to cover a
//  3x3 sample area, or 6x6 texel area), and it uses a lower standard
//  deviation to compensate.  Thanks to symmetry, the 7 omitted samples
//  are always the "same:
//      1adjx, 3adjx
//      2adjy, 3adjy
//      1diag, 2diag, 3diag
//  COMPUTE COORDS FOR TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Statically compute bilinear sampling offsets (details in tex2Dblur12x12shared).
//  We don't share sample0*, so use the nearest destination fragment:
//  Statically compute texel offsets from the bottom-right fragment to each
//  bilinear sample in the bottom-right quadrant:
//  CALCULATE KERNEL WEIGHTS:
//  Statically compute bilinear sample weights at each destination fragment
//  from the sum of their 4 texel weights (details in tex2Dblur12x12shared).
//  We only need 9 of the 16 sample weights.  Skip the following weights:
//      1adjx, 3adjx
//      2adjy, 3adjy
//      1diag, 2diag, 3diag
//  Get the weight sum inverse (normalization factor):
//  Statically pack some weights for runtime:
//  LOAD TEXTURE SAMPLES THIS FRAGMENT IS RESPONSIBLE FOR:
//  Get a uv vector from texel 0q0 of this quadrant to texel 0q3:
//  Load bilinear samples for the current quadrant (for this fragment):
//  GATHER NEIGHBORING SAMPLES AND SUM WEIGHTED SAMPLES:
//  Fetch the samples from other fragments in the 2x2 quad:
//  Statically normalize weights (so total = 1.0), and sum weighted samples.
//  Fill each row of a matrix with an rgb sample and pre-multiply by the
//  weights to obtain a weighted result for sample1*, and handle the rest
//  of the weights more directly/verbosely:
///////////////////////  MAX OPTIMAL SIGMA BLUR WRAPPERS  //////////////////////
//  The following blurs are static wrappers around the dynamic blurs above.
//  HOPEFULLY, the compiler will be smart enough to do constant-folding.
//  Resizable separable blurs:
//  Fast separable blurs:
//  Huge, "fast" separable blurs:
//  Resizable one-pass blurs:
//  "Fast" one-pass blurs:
//  "Fast" shared-sample one-pass blurs:
// FragColor = vec4(tex2Dblur9x9(PostCRTPass, vTexCoord, blur_dxdy), 1);
// In the HDR preset sampling from the PostCRTPass results in sort of colorful garbabe
// Grabbing from the CRTPass instead

*/

#pragma once

namespace RetroArchBezelMega_BezelShadersBaseLinearizeCrtShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,39,122,
176,116,223,197,202,240,
180,247,53,34,193,60,
174,228,1,0,0,0,
196,192,0,0,5,0,
0,0,52,0,0,0,
12,190,0,0,88,190,
0,0,200,190,0,0,
40,192,0,0,82,68,
69,70,208,189,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
165,189,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,169,2,
0,0,120,0,0,0,
48,11,0,0,0,0,
0,0,0,0,0,0,
224,106,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,244,106,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,24,107,
0,0,64,0,0,0,
16,0,0,0,2,0,
0,0,52,107,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,88,107,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
52,107,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
108,107,0,0,96,0,
0,0,16,0,0,0,
0,0,0,0,52,107,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,107,
0,0,112,0,0,0,
16,0,0,0,2,0,
0,0,52,107,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,154,107,0,0,
128,0,0,0,16,0,
0,0,0,0,0,0,
52,107,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
179,107,0,0,144,0,
0,0,16,0,0,0,
0,0,0,0,52,107,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,202,107,
0,0,160,0,0,0,
4,0,0,0,0,0,
0,0,228,107,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,8,108,0,0,
164,0,0,0,4,0,
0,0,0,0,0,0,
32,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,108,0,0,168,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,144,108,
0,0,172,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,172,108,0,0,
176,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
205,108,0,0,180,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,241,108,
0,0,184,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,109,0,0,
188,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
55,109,0,0,192,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,104,109,
0,0,196,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,133,109,0,0,
200,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,109,0,0,204,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,210,109,
0,0,208,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,241,109,0,0,
212,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
21,110,0,0,216,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,49,110,
0,0,220,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,77,110,0,0,
224,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
121,110,0,0,228,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,145,110,
0,0,232,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,176,110,0,0,
236,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
202,110,0,0,240,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,231,110,
0,0,244,0,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,13,111,0,0,
248,0,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
52,111,0,0,252,0,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,78,111,
0,0,0,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,106,111,0,0,
4,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
133,111,0,0,8,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,165,111,
0,0,12,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,202,111,0,0,
16,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
233,111,0,0,20,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,8,112,
0,0,24,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,46,112,0,0,
28,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
70,112,0,0,32,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,101,112,
0,0,36,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,127,112,0,0,
40,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
156,112,0,0,44,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,194,112,
0,0,48,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,233,112,0,0,
52,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
3,113,0,0,56,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,31,113,
0,0,60,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,58,113,0,0,
64,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
90,113,0,0,68,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,127,113,
0,0,72,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,158,113,0,0,
76,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
189,113,0,0,80,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,214,113,
0,0,84,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,245,113,0,0,
88,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
20,114,0,0,92,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,50,114,
0,0,96,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,84,114,0,0,
100,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
120,114,0,0,104,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,150,114,
0,0,108,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,182,114,0,0,
112,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
211,114,0,0,116,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,247,114,
0,0,120,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,115,0,0,
124,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
53,115,0,0,128,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,79,115,
0,0,132,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,116,115,0,0,
136,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
158,115,0,0,140,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,190,115,
0,0,144,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,217,115,0,0,
148,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
246,115,0,0,152,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,35,116,
0,0,156,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,76,116,0,0,
160,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
118,116,0,0,164,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,161,116,
0,0,168,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,196,116,0,0,
172,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
238,116,0,0,176,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,14,117,
0,0,180,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,50,117,0,0,
184,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
91,117,0,0,188,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,138,117,
0,0,192,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,167,117,0,0,
196,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
196,117,0,0,200,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,117,
0,0,204,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,246,117,0,0,
208,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
18,118,0,0,212,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,49,118,
0,0,216,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,118,0,0,
220,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
108,118,0,0,224,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,140,118,
0,0,228,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,170,118,0,0,
232,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
217,118,0,0,236,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,1,119,
0,0,240,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,48,119,0,0,
244,1,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
88,119,0,0,248,1,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,119,
0,0,252,1,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,169,119,0,0,
0,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
195,119,0,0,4,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,241,119,
0,0,8,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,22,120,0,0,
12,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
36,120,0,0,16,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,52,120,
0,0,20,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,66,120,0,0,
24,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
96,120,0,0,28,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,129,120,
0,0,32,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,163,120,0,0,
36,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
192,120,0,0,40,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,227,120,
0,0,44,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,1,121,0,0,
48,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
36,121,0,0,52,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,79,121,
0,0,56,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,106,121,0,0,
60,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
150,121,0,0,64,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,196,121,
0,0,68,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,242,121,0,0,
72,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
32,122,0,0,76,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,122,
0,0,80,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,134,122,0,0,
84,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
174,122,0,0,88,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,214,122,
0,0,92,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,249,122,0,0,
96,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
21,123,0,0,100,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,49,123,
0,0,104,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,89,123,0,0,
108,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
128,123,0,0,112,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,170,123,
0,0,116,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,210,123,0,0,
120,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
251,123,0,0,124,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,21,124,
0,0,128,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,61,124,0,0,
132,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
102,124,0,0,136,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,133,124,
0,0,140,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,167,124,0,0,
144,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
204,124,0,0,148,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,241,124,
0,0,152,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,16,125,0,0,
156,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
43,125,0,0,160,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,74,125,
0,0,164,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,110,125,0,0,
168,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
144,125,0,0,172,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,178,125,
0,0,176,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,207,125,0,0,
180,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
234,125,0,0,184,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,12,126,
0,0,188,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,126,0,0,
192,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
71,126,0,0,196,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,109,126,
0,0,200,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,147,126,0,0,
204,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
180,126,0,0,208,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,126,
0,0,212,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,244,126,0,0,
216,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
15,127,0,0,220,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,55,127,
0,0,224,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,85,127,0,0,
228,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
132,127,0,0,232,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,168,127,
0,0,236,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,201,127,0,0,
240,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
242,127,0,0,244,2,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,13,128,
0,0,248,2,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,46,128,0,0,
252,2,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
74,128,0,0,0,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,107,128,
0,0,4,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,140,128,0,0,
8,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
182,128,0,0,12,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,128,
0,0,16,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,252,128,0,0,
20,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
31,129,0,0,24,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,60,129,
0,0,28,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,110,129,0,0,
32,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
134,129,0,0,36,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,171,129,
0,0,40,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,205,129,0,0,
44,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
247,129,0,0,48,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,32,130,
0,0,52,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,73,130,0,0,
56,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
109,130,0,0,60,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,156,130,
0,0,64,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,130,0,0,
68,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
240,130,0,0,72,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,22,131,
0,0,76,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,61,131,0,0,
80,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
93,131,0,0,84,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,133,131,
0,0,88,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,170,131,0,0,
92,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
202,131,0,0,96,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,240,131,
0,0,100,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,21,132,0,0,
104,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
75,132,0,0,108,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,125,132,
0,0,112,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,173,132,0,0,
116,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
225,132,0,0,120,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,19,133,
0,0,124,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,76,133,0,0,
128,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
126,133,0,0,132,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,168,133,
0,0,136,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,200,133,0,0,
140,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,133,0,0,144,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,18,134,
0,0,148,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,55,134,0,0,
152,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
90,134,0,0,156,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,125,134,
0,0,160,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,164,134,0,0,
164,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
215,134,0,0,168,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,11,135,
0,0,172,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,66,135,0,0,
176,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
106,135,0,0,180,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,156,135,
0,0,184,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,135,0,0,
188,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
247,135,0,0,192,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,51,136,
0,0,196,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,99,136,0,0,
200,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
147,136,0,0,204,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,182,136,
0,0,208,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,222,136,0,0,
212,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
7,137,0,0,216,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,36,137,
0,0,220,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,67,137,0,0,
224,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
96,137,0,0,228,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,125,137,
0,0,232,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,163,137,0,0,
236,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
201,137,0,0,240,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,240,137,
0,0,244,3,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,21,138,0,0,
248,3,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
47,138,0,0,252,3,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,75,138,
0,0,0,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,108,138,0,0,
4,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
140,138,0,0,8,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,187,138,
0,0,12,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,224,138,0,0,
16,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
11,139,0,0,20,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,48,139,
0,0,24,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,93,139,0,0,
28,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
130,139,0,0,32,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,163,139,
0,0,36,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,139,0,0,
40,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
1,140,0,0,44,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,55,140,
0,0,48,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,140,0,0,
52,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
104,140,0,0,56,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,125,140,
0,0,60,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,147,140,0,0,
64,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
175,140,0,0,68,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,212,140,
0,0,72,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,253,140,0,0,
76,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
34,141,0,0,80,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,70,141,
0,0,84,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,106,141,0,0,
88,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
147,141,0,0,92,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,180,141,
0,0,96,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,205,141,0,0,
100,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,141,0,0,104,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,8,142,
0,0,108,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,29,142,0,0,
112,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
55,142,0,0,116,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,90,142,
0,0,120,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,128,142,0,0,
124,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
165,142,0,0,128,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,206,142,
0,0,132,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,248,142,0,0,
136,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
17,143,0,0,140,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,53,143,
0,0,144,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,96,143,0,0,
148,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
140,143,0,0,152,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,177,143,
0,0,156,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,202,143,0,0,
160,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
234,143,0,0,164,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,5,144,
0,0,168,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,26,144,0,0,
172,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
63,144,0,0,176,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,88,144,
0,0,180,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,121,144,0,0,
184,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
148,144,0,0,188,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,184,144,
0,0,192,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,220,144,0,0,
196,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
0,145,0,0,200,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,34,145,
0,0,204,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,69,145,0,0,
208,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
101,145,0,0,212,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,131,145,
0,0,216,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,159,145,0,0,
220,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
190,145,0,0,224,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,229,145,
0,0,228,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,146,0,0,
232,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
58,146,0,0,236,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,107,146,
0,0,240,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,148,146,0,0,
244,4,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
188,146,0,0,248,4,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,221,146,
0,0,252,4,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,147,0,0,
0,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
47,147,0,0,4,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,99,147,
0,0,8,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,142,147,0,0,
12,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
188,147,0,0,16,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,227,147,
0,0,20,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,148,0,0,
24,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
39,148,0,0,28,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,74,148,
0,0,32,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,115,148,0,0,
36,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
146,148,0,0,40,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,183,148,
0,0,44,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,221,148,0,0,
48,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
12,149,0,0,52,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,59,149,
0,0,56,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,91,149,0,0,
60,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
124,149,0,0,64,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,165,149,
0,0,68,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,201,149,0,0,
72,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
242,149,0,0,76,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,14,150,
0,0,80,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,42,150,0,0,
84,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
79,150,0,0,88,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,116,150,
0,0,92,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,152,150,0,0,
96,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
187,150,0,0,100,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,223,150,
0,0,104,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,13,151,0,0,
108,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
40,151,0,0,112,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,75,151,
0,0,116,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,108,151,0,0,
120,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
146,151,0,0,124,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,185,151,
0,0,128,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,223,151,0,0,
132,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
10,152,0,0,136,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,51,152,
0,0,140,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,77,152,0,0,
144,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
118,152,0,0,148,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,145,152,
0,0,152,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,175,152,0,0,
156,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
208,152,0,0,160,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,241,152,
0,0,164,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,14,153,0,0,
168,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
41,153,0,0,172,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,68,153,
0,0,176,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,98,153,0,0,
180,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
132,153,0,0,184,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,163,153,
0,0,188,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,203,153,0,0,
192,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
227,153,0,0,196,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,253,153,
0,0,200,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,29,154,0,0,
204,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
53,154,0,0,208,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,77,154,
0,0,212,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,99,154,0,0,
216,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
117,154,0,0,220,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,143,154,
0,0,224,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,168,154,0,0,
228,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
193,154,0,0,232,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,213,154,
0,0,236,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,255,154,0,0,
240,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
42,155,0,0,244,5,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,82,155,
0,0,248,5,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,107,155,0,0,
252,5,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
139,155,0,0,0,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,163,155,
0,0,4,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,189,155,0,0,
8,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
223,155,0,0,12,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,250,155,
0,0,16,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,156,0,0,
20,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
56,156,0,0,24,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,156,
0,0,28,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,116,156,0,0,
32,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
149,156,0,0,36,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,169,156,
0,0,40,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,191,156,0,0,
44,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
211,156,0,0,48,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,231,156,
0,0,52,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,255,156,0,0,
56,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
35,157,0,0,60,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,72,157,
0,0,64,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,111,157,0,0,
68,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
152,157,0,0,72,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,194,157,
0,0,76,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,229,157,0,0,
80,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
10,158,0,0,84,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,45,158,
0,0,88,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,80,158,0,0,
92,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,158,0,0,96,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,122,158,
0,0,100,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,149,158,0,0,
104,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
175,158,0,0,108,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,201,158,
0,0,112,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,222,158,0,0,
116,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
9,159,0,0,120,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,53,159,
0,0,124,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,94,159,0,0,
128,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
120,159,0,0,132,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,153,159,
0,0,136,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,178,159,0,0,
140,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
205,159,0,0,144,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,240,159,
0,0,148,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,160,0,0,
152,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
39,160,0,0,156,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,76,160,
0,0,160,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,101,160,0,0,
164,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
138,160,0,0,168,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,172,160,
0,0,172,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,193,160,0,0,
176,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
216,160,0,0,180,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,237,160,
0,0,184,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,2,161,0,0,
188,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
39,161,0,0,192,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,65,161,
0,0,196,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,87,161,0,0,
200,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
117,161,0,0,204,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,146,161,
0,0,208,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,175,161,0,0,
212,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
199,161,0,0,216,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,245,161,
0,0,220,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,36,162,0,0,
224,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
80,162,0,0,228,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,109,162,
0,0,232,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,145,162,0,0,
236,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,162,0,0,240,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,203,162,
0,0,244,6,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,241,162,0,0,
248,6,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
16,163,0,0,252,6,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,46,163,
0,0,0,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,86,163,0,0,
4,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
114,163,0,0,8,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,154,163,
0,0,12,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,191,163,0,0,
16,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
215,163,0,0,20,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,241,163,
0,0,24,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,9,164,0,0,
28,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
33,164,0,0,32,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,73,164,
0,0,36,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,102,164,0,0,
40,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
127,164,0,0,44,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,160,164,
0,0,48,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,192,164,0,0,
52,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
224,164,0,0,56,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,251,164,
0,0,60,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,165,0,0,
64,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
94,165,0,0,68,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,141,165,
0,0,72,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,173,165,0,0,
76,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
212,165,0,0,80,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,243,165,
0,0,84,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,166,0,0,
88,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
61,166,0,0,92,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,95,166,
0,0,96,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,128,166,0,0,
100,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
171,166,0,0,104,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,202,166,
0,0,108,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,245,166,0,0,
112,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
29,167,0,0,116,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,56,167,
0,0,120,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,85,167,0,0,
124,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,167,0,0,128,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,139,167,
0,0,132,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,182,167,0,0,
136,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
205,167,0,0,140,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,231,167,
0,0,144,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,6,168,0,0,
148,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
40,168,0,0,152,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,65,168,
0,0,156,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,86,168,0,0,
160,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
115,168,0,0,164,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,143,168,
0,0,168,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,171,168,0,0,
172,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
194,168,0,0,176,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,239,168,
0,0,180,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,29,169,0,0,
184,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
72,169,0,0,188,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,100,169,
0,0,192,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,135,169,0,0,
196,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
162,169,0,0,200,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,191,169,
0,0,204,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,228,169,0,0,
208,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
2,170,0,0,212,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,31,170,
0,0,216,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,70,170,0,0,
220,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
97,170,0,0,224,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,170,
0,0,228,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,172,170,0,0,
232,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
195,170,0,0,236,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,220,170,
0,0,240,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,243,170,0,0,
244,7,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
10,171,0,0,248,7,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,49,171,
0,0,252,7,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,171,0,0,
0,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,171,0,0,4,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,171,
0,0,8,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,168,171,0,0,
12,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
200,171,0,0,16,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,227,171,
0,0,20,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,172,0,0,
24,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
70,172,0,0,28,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,117,172,
0,0,32,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,149,172,0,0,
36,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
188,172,0,0,40,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,219,172,
0,0,44,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,252,172,0,0,
48,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
37,173,0,0,52,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,71,173,
0,0,56,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,104,173,0,0,
60,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
147,173,0,0,64,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,178,173,
0,0,68,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,221,173,0,0,
72,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
5,174,0,0,76,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,32,174,
0,0,80,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,61,174,0,0,
84,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
88,174,0,0,88,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,115,174,
0,0,92,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,158,174,0,0,
96,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
181,174,0,0,100,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,200,174,
0,0,104,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,227,174,0,0,
108,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
253,174,0,0,112,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,23,175,
0,0,116,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,175,0,0,
120,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
87,175,0,0,124,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,131,175,
0,0,128,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,172,175,0,0,
132,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
198,175,0,0,136,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,231,175,
0,0,140,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,0,176,0,0,
144,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
27,176,0,0,148,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,62,176,
0,0,152,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,90,176,0,0,
156,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
117,176,0,0,160,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,154,176,
0,0,164,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,179,176,0,0,
168,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
216,176,0,0,172,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,250,176,
0,0,176,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,15,177,0,0,
180,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
38,177,0,0,184,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,59,177,
0,0,188,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,80,177,0,0,
192,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
107,177,0,0,196,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,144,177,
0,0,200,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,174,177,0,0,
204,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
209,177,0,0,208,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,245,177,
0,0,212,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,22,178,0,0,
216,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
58,178,0,0,220,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,92,178,
0,0,224,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,120,178,0,0,
228,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
152,178,0,0,232,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,186,178,
0,0,236,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,224,178,0,0,
240,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
8,179,0,0,244,8,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,47,179,
0,0,248,8,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,79,179,0,0,
252,8,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
108,179,0,0,0,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,179,
0,0,4,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,164,179,0,0,
8,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
194,179,0,0,12,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,179,
0,0,16,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,244,179,0,0,
20,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
18,180,0,0,24,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,45,180,
0,0,28,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,76,180,0,0,
32,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
109,180,0,0,36,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,142,180,
0,0,40,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,177,180,0,0,
44,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
211,180,0,0,48,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,249,180,
0,0,52,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,181,0,0,
56,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
29,181,0,0,60,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,44,181,
0,0,64,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,181,0,0,
68,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
92,181,0,0,72,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,110,181,
0,0,76,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,129,181,0,0,
80,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
148,181,0,0,84,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,167,181,
0,0,88,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,184,181,0,0,
92,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
197,181,0,0,96,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,211,181,
0,0,100,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,225,181,0,0,
104,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,181,0,0,108,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,250,181,
0,0,112,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,182,0,0,
116,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
30,182,0,0,120,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,46,182,
0,0,124,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,58,182,0,0,
128,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
69,182,0,0,132,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,105,182,
0,0,136,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,143,182,0,0,
140,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
183,182,0,0,144,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,230,182,
0,0,148,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,28,183,0,0,
152,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
55,183,0,0,156,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,77,183,
0,0,160,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,99,183,0,0,
164,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
116,183,0,0,168,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,131,183,
0,0,172,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,146,183,0,0,
176,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
159,183,0,0,180,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,173,183,
0,0,184,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,186,183,0,0,
188,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
199,183,0,0,192,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,214,183,
0,0,196,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,233,183,0,0,
200,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
253,183,0,0,204,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,10,184,
0,0,208,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,27,184,0,0,
212,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
38,184,0,0,216,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,55,184,
0,0,220,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,72,184,0,0,
224,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
88,184,0,0,228,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,104,184,
0,0,232,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,115,184,0,0,
236,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
132,184,0,0,240,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,148,184,
0,0,244,9,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,161,184,0,0,
248,9,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
181,184,0,0,252,9,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,194,184,
0,0,0,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,208,184,0,0,
4,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
220,184,0,0,8,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,240,184,
0,0,12,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,1,185,0,0,
16,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
21,185,0,0,20,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,36,185,
0,0,24,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,51,185,0,0,
28,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
67,185,0,0,32,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,83,185,
0,0,36,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,94,185,0,0,
40,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
110,185,0,0,44,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,130,185,
0,0,48,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,144,185,0,0,
52,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
162,185,0,0,56,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,177,185,
0,0,60,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,189,185,0,0,
64,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
206,185,0,0,68,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,222,185,
0,0,72,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,239,185,0,0,
76,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,185,0,0,80,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,28,186,
0,0,84,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,186,0,0,
88,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
61,186,0,0,92,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,79,186,
0,0,96,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,95,186,0,0,
100,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,186,0,0,104,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,129,186,
0,0,108,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,148,186,0,0,
112,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
162,186,0,0,116,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,180,186,
0,0,120,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,194,186,0,0,
124,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
213,186,0,0,128,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,241,186,
0,0,132,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,255,186,0,0,
136,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
14,187,0,0,140,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,29,187,
0,0,144,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,187,0,0,
148,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
60,187,0,0,152,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,76,187,
0,0,156,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,92,187,0,0,
160,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
111,187,0,0,164,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,126,187,
0,0,168,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,141,187,0,0,
172,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
160,187,0,0,176,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,180,187,
0,0,180,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,197,187,0,0,
184,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
214,187,0,0,188,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,231,187,
0,0,192,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,254,187,0,0,
196,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
16,188,0,0,200,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,37,188,
0,0,204,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,56,188,0,0,
208,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
78,188,0,0,212,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,94,188,
0,0,216,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,111,188,0,0,
220,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
127,188,0,0,224,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,143,188,
0,0,228,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,159,188,0,0,
232,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
175,188,0,0,236,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,191,188,
0,0,240,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,207,188,0,0,
244,10,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
223,188,0,0,248,10,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,239,188,
0,0,252,10,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,253,188,0,0,
0,11,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
11,189,0,0,4,11,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,25,189,
0,0,8,11,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,35,189,0,0,
12,11,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
47,189,0,0,16,11,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,66,189,
0,0,20,11,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,85,189,0,0,
24,11,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
104,189,0,0,28,11,
0,0,4,0,0,0,
0,0,0,0,108,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,123,189,
0,0,32,11,0,0,
4,0,0,0,0,0,
0,0,108,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,145,189,0,0,
36,11,0,0,4,0,
0,0,0,0,0,0,
108,108,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,108,111,98,97,108,
95,77,86,80,0,102,
108,111,97,116,52,120,
52,0,2,0,3,0,
4,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,235,106,
0,0,103,108,111,98,
97,108,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,42,107,0,0,
103,108,111,98,97,108,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,70,
101,101,100,98,97,99,
107,83,105,122,101,0,
103,108,111,98,97,108,
95,79,117,116,112,117,
116,83,105,122,101,0,
103,108,111,98,97,108,
95,70,105,110,97,108,
86,105,101,119,112,111,
114,116,83,105,122,101,
0,103,108,111,98,97,
108,95,68,101,114,101,
122,101,100,80,97,115,
115,83,105,122,101,0,
103,108,111,98,97,108,
95,70,114,97,109,101,
68,105,114,101,99,116,
105,111,110,0,105,110,
116,0,0,0,2,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,224,107,
0,0,103,108,111,98,
97,108,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,0,0,19,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,26,108,
0,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,83,79,76,
85,84,73,79,78,95,
68,69,66,85,71,95,
79,78,0,102,108,111,
97,116,0,171,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,99,108,0,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,78,68,69,78,95,
66,79,82,68,69,82,
95,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,83,73,78,
68,69,78,95,66,79,
82,68,69,82,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,73,78,68,69,78,
95,66,79,82,68,69,
82,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,73,78,68,69,78,
95,65,77,66,73,69,
78,84,95,76,73,71,
72,84,73,78,71,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,78,68,69,78,95,
66,79,82,68,69,82,
95,84,72,73,67,75,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,83,73,
78,68,69,78,95,66,
79,82,68,69,82,95,
69,77,80,84,89,95,
84,85,66,69,95,67,
79,77,80,69,78,83,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,67,72,69,95,71,
82,65,80,72,73,67,
83,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,67,65,
67,72,69,95,85,80,
68,65,84,69,95,73,
78,68,73,67,65,84,
79,82,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,71,76,79,66,65,
76,95,71,82,65,80,
72,73,67,83,95,66,
82,73,71,72,84,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,83,84,65,
84,73,67,95,76,65,
89,69,82,83,95,71,
65,77,77,65,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,95,
76,73,71,72,84,73,
78,71,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,49,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,50,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,95,76,73,71,72,
84,73,78,71,95,83,
87,65,80,95,73,77,
65,71,69,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,49,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,49,95,83,
65,84,85,82,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,49,95,
86,65,76,85,69,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,67,79,78,84,
82,65,83,84,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,49,
95,83,67,65,76,69,
95,75,69,69,80,95,
65,83,80,69,67,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,49,95,83,67,65,
76,69,95,73,78,72,
69,82,73,84,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,49,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,83,67,65,76,
69,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,49,95,
82,79,84,65,84,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,49,95,77,73,82,
82,79,82,95,72,79,
82,90,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,49,95,80,
79,83,95,73,78,72,
69,82,73,84,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,49,95,
80,79,83,73,84,73,
79,78,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,49,
95,80,79,83,73,84,
73,79,78,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,68,73,84,72,
69,82,73,78,71,95,
83,65,77,80,76,69,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,50,95,72,85,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,50,95,83,65,
84,85,82,65,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,50,95,86,
65,76,85,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,67,79,78,84,82,
65,83,84,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,50,95,
83,67,65,76,69,95,
75,69,69,80,95,65,
83,80,69,67,84,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
50,95,83,67,65,76,
69,95,73,78,72,69,
82,73,84,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,50,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,83,67,65,76,69,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,50,95,82,
79,84,65,84,69,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
50,95,77,73,82,82,
79,82,95,72,79,82,
90,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,50,95,80,79,
83,95,73,78,72,69,
82,73,84,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,50,95,80,
79,83,73,84,73,79,
78,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,50,95,
80,79,83,73,84,73,
79,78,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,86,73,
69,87,80,79,82,84,
95,90,79,79,77,0,
103,108,111,98,97,108,
95,72,83,77,95,86,
73,69,87,80,79,82,
84,95,80,79,83,73,
84,73,79,78,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
86,73,69,87,80,79,
82,84,95,80,79,83,
73,84,73,79,78,95,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,86,73,69,87,80,
79,82,84,95,90,79,
79,77,95,77,65,83,
75,0,103,108,111,98,
97,108,95,72,83,77,
95,70,76,73,80,95,
86,73,69,87,80,79,
82,84,95,86,69,82,
84,73,67,65,76,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
76,73,80,95,86,73,
69,87,80,79,82,84,
95,72,79,82,73,90,
79,78,84,65,76,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
76,73,80,95,67,79,
82,69,95,86,69,82,
84,73,67,65,76,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
76,73,80,95,67,79,
82,69,95,72,79,82,
73,90,79,78,84,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,82,79,84,65,84,
69,95,67,79,82,69,
95,73,77,65,71,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,83,80,69,67,84,
95,82,65,84,73,79,
95,79,82,73,69,78,
84,65,84,73,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,83,80,69,67,84,
95,82,65,84,73,79,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
83,80,69,67,84,95,
82,65,84,73,79,95,
69,88,80,76,73,67,
73,84,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,95,
83,67,65,76,69,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,95,83,67,65,76,
69,95,77,85,76,84,
73,80,76,69,95,79,
70,70,83,69,84,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,95,83,67,65,
76,69,95,77,85,76,
84,73,80,76,69,95,
79,70,70,83,69,84,
95,76,79,78,71,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,95,83,67,65,
76,69,95,77,65,88,
95,72,69,73,71,72,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,86,69,82,84,73,
67,65,76,95,80,82,
69,83,69,84,0,103,
108,111,98,97,108,95,
72,83,77,95,78,79,
78,95,73,78,84,69,
71,69,82,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,85,83,69,
95,80,72,89,83,73,
67,65,76,95,83,73,
90,69,95,70,79,82,
95,78,79,78,95,73,
78,84,69,71,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
80,72,89,83,73,67,
65,76,95,77,79,78,
73,84,79,82,95,65,
83,80,69,67,84,95,
82,65,84,73,79,0,
103,108,111,98,97,108,
95,72,83,77,95,80,
72,89,83,73,67,65,
76,95,77,79,78,73,
84,79,82,95,68,73,
65,71,79,78,65,76,
95,83,73,90,69,0,
103,108,111,98,97,108,
95,72,83,77,95,80,
72,89,83,73,67,65,
76,95,83,73,77,95,
84,85,66,69,95,68,
73,65,71,79,78,65,
76,95,83,73,90,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
85,83,69,95,73,77,
65,71,69,95,70,79,
82,95,80,76,65,67,
69,77,69,78,84,0,
103,108,111,98,97,108,
95,72,83,77,95,80,
76,65,67,69,77,69,
78,84,95,73,77,65,
71,69,95,85,83,69,
95,72,79,82,73,90,
79,78,84,65,76,0,
103,108,111,98,97,108,
95,72,83,77,95,80,
76,65,67,69,77,69,
78,84,95,73,77,65,
71,69,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,78,79,78,95,73,
78,84,69,71,69,82,
95,83,67,65,76,69,
95,79,70,70,83,69,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,85,83,69,95,83,
78,65,80,95,84,79,
95,67,76,79,83,69,
83,84,95,73,78,84,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,78,65,80,95,84,
79,95,67,76,79,83,
69,83,84,95,73,78,
84,95,83,67,65,76,
69,95,84,79,76,69,
82,65,78,67,69,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
67,82,69,69,78,95,
80,79,83,73,84,73,
79,78,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,83,67,
82,69,69,78,95,80,
79,83,73,84,73,79,
78,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,67,82,79,
80,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,82,79,80,95,80,
69,82,67,69,78,84,
95,90,79,79,77,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
82,79,80,95,80,69,
82,67,69,78,84,95,
84,79,80,0,103,108,
111,98,97,108,95,72,
83,77,95,67,82,79,
80,95,80,69,82,67,
69,78,84,95,66,79,
84,84,79,77,0,103,
108,111,98,97,108,95,
72,83,77,95,67,82,
79,80,95,80,69,82,
67,69,78,84,95,76,
69,70,84,0,103,108,
111,98,97,108,95,72,
83,77,95,67,82,79,
80,95,80,69,82,67,
69,78,84,95,82,73,
71,72,84,0,103,108,
111,98,97,108,95,72,
83,77,95,67,82,79,
80,95,66,76,65,67,
75,95,84,72,82,69,
83,72,79,76,68,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
67,65,78,76,73,78,
69,95,68,73,82,69,
67,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
79,82,69,95,82,69,
83,95,83,65,77,80,
76,73,78,71,95,77,
85,76,84,95,83,67,
65,78,76,73,78,69,
95,68,73,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,79,
87,78,83,65,77,80,
76,69,95,66,76,85,
82,95,83,67,65,78,
76,73,78,69,95,68,
73,82,0,103,108,111,
98,97,108,95,72,83,
77,95,67,79,82,69,
95,82,69,83,95,83,
65,77,80,76,73,78,
71,95,77,85,76,84,
95,79,80,80,79,83,
73,84,69,95,68,73,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,68,79,87,78,83,
65,77,80,76,69,95,
66,76,85,82,95,79,
80,80,79,83,73,84,
69,95,68,73,82,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
79,82,69,95,82,69,
83,95,83,65,77,80,
76,73,78,71,95,83,
72,73,70,84,95,79,
80,80,79,83,73,84,
69,95,68,73,82,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,69,82,76,65,
67,69,95,84,82,73,
71,71,69,82,95,82,
69,83,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,69,
82,76,65,67,69,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,69,82,76,65,67,
69,95,69,70,70,69,
67,84,95,83,77,79,
79,84,72,78,69,83,
83,95,73,78,84,69,
82,83,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,69,
82,76,65,67,69,95,
83,67,65,78,76,73,
78,69,95,69,70,70,
69,67,84,0,103,108,
111,98,97,108,95,105,
115,99,97,110,115,0,
103,108,111,98,97,108,
95,118,103,97,95,109,
111,100,101,0,103,108,
111,98,97,108,95,104,
105,115,99,97,110,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
65,75,69,95,83,67,
65,78,76,73,78,69,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
65,75,69,95,83,67,
65,78,76,73,78,69,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,70,65,75,69,
95,83,67,65,78,76,
73,78,69,95,82,69,
83,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,65,75,69,95,83,
67,65,78,76,73,78,
69,95,82,69,83,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
65,75,69,95,83,67,
65,78,76,73,78,69,
95,73,78,84,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,70,65,
75,69,95,83,67,65,
78,76,73,78,69,95,
82,79,76,76,0,103,
108,111,98,97,108,95,
72,83,77,95,70,65,
75,69,95,83,67,65,
78,76,73,78,69,95,
67,85,82,86,65,84,
85,82,69,0,103,108,
111,98,97,108,95,72,
83,77,95,70,65,75,
69,95,83,67,65,78,
76,73,78,69,95,66,
82,73,71,72,84,78,
69,83,83,95,67,85,
84,79,70,70,0,103,
108,111,98,97,108,95,
72,83,77,95,68,85,
65,76,83,67,82,69,
69,78,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,85,65,76,83,
67,82,69,69,78,95,
67,79,82,69,95,73,
77,65,71,69,95,83,
80,76,73,84,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,85,65,
76,83,67,82,69,69,
78,95,67,79,82,69,
95,73,77,65,71,69,
95,83,87,65,80,95,
83,67,82,69,69,78,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,68,85,65,76,83,
67,82,69,69,78,95,
67,79,82,69,95,73,
77,65,71,69,95,83,
80,76,73,84,95,79,
70,70,83,69,84,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
85,65,76,83,67,82,
69,69,78,95,86,73,
69,87,80,79,82,84,
95,83,80,76,73,84,
95,76,79,67,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,68,85,65,
76,83,67,82,69,69,
78,95,83,72,73,70,
84,95,80,79,83,73,
84,73,79,78,95,87,
73,84,72,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,85,65,
76,83,67,82,69,69,
78,95,80,79,83,73,
84,73,79,78,95,79,
70,70,83,69,84,95,
66,69,84,87,69,69,
78,95,83,67,82,69,
69,78,83,0,103,108,
111,98,97,108,95,72,
83,77,95,50,78,68,
95,83,67,82,69,69,
78,95,65,83,80,69,
67,84,95,82,65,84,
73,79,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,50,78,68,95,83,
67,82,69,69,78,95,
73,78,68,69,80,69,
78,68,69,78,84,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,50,
78,68,95,83,67,82,
69,69,78,95,83,67,
65,76,69,95,79,70,
70,83,69,84,0,103,
108,111,98,97,108,95,
72,83,77,95,50,78,
68,95,83,67,82,69,
69,78,95,80,79,83,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,50,78,68,95,
83,67,82,69,69,78,
95,80,79,83,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
50,78,68,95,83,67,
82,69,69,78,95,67,
82,79,80,95,80,69,
82,67,69,78,84,95,
90,79,79,77,0,103,
108,111,98,97,108,95,
72,83,77,95,50,78,
68,95,83,67,82,69,
69,78,95,67,82,79,
80,95,80,69,82,67,
69,78,84,95,84,79,
80,0,103,108,111,98,
97,108,95,72,83,77,
95,50,78,68,95,83,
67,82,69,69,78,95,
67,82,79,80,95,80,
69,82,67,69,78,84,
95,66,79,84,84,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,50,78,68,95,83,
67,82,69,69,78,95,
67,82,79,80,95,80,
69,82,67,69,78,84,
95,76,69,70,84,0,
103,108,111,98,97,108,
95,72,83,77,95,50,
78,68,95,83,67,82,
69,69,78,95,67,82,
79,80,95,80,69,82,
67,69,78,84,95,82,
73,71,72,84,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
82,86,65,84,85,82,
69,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,82,86,65,84,
85,82,69,95,50,68,
95,83,67,65,76,69,
95,76,79,78,71,95,
65,88,73,83,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
82,86,65,84,85,82,
69,95,50,68,95,83,
67,65,76,69,95,83,
72,79,82,84,95,65,
88,73,83,0,103,108,
111,98,97,108,95,72,
83,77,95,67,85,82,
86,65,84,85,82,69,
95,51,68,95,82,65,
68,73,85,83,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
82,86,65,84,85,82,
69,95,51,68,95,86,
73,69,87,95,68,73,
83,84,0,103,108,111,
98,97,108,95,72,83,
77,95,67,85,82,86,
65,84,85,82,69,95,
51,68,95,84,73,76,
84,95,65,78,71,76,
69,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,67,85,82,
86,65,84,85,82,69,
95,51,68,95,84,73,
76,84,95,65,78,71,
76,69,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,67,82,
84,95,67,85,82,86,
65,84,85,82,69,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,71,78,65,76,95,
78,79,73,83,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,83,73,71,78,
65,76,95,78,79,73,
83,69,95,65,77,79,
85,78,84,0,103,108,
111,98,97,108,95,72,
83,77,95,83,73,71,
78,65,76,95,78,79,
73,83,69,95,66,76,
65,67,75,95,76,69,
86,69,76,0,103,108,
111,98,97,108,95,72,
83,77,95,83,73,71,
78,65,76,95,78,79,
73,83,69,95,83,73,
90,69,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,83,73,71,78,65,
76,95,78,79,73,83,
69,95,83,73,90,69,
95,77,85,76,84,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,71,78,65,76,95,
78,79,73,83,69,95,
84,89,80,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,78,
84,73,95,70,76,73,
67,75,69,82,95,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,65,78,84,73,95,
70,76,73,67,75,69,
82,95,84,72,82,69,
83,72,79,76,68,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
66,95,67,79,77,80,
65,82,69,95,83,72,
79,87,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,65,66,95,67,79,
77,80,65,82,69,95,
65,82,69,65,0,103,
108,111,98,97,108,95,
72,83,77,95,65,66,
95,67,79,77,80,65,
82,69,95,70,82,69,
69,90,69,95,67,82,
84,95,84,85,66,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,66,95,67,79,77,
80,65,82,69,95,70,
82,69,69,90,69,95,
71,82,65,80,72,73,
67,83,0,103,108,111,
98,97,108,95,72,83,
77,95,65,66,95,67,
79,77,80,65,82,69,
95,83,80,76,73,84,
95,65,82,69,65,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
66,95,67,79,77,80,
65,82,69,95,83,80,
76,73,84,95,80,79,
83,73,84,73,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,72,79,87,95,80,
65,83,83,95,73,78,
68,69,88,0,103,108,
111,98,97,108,95,72,
83,77,95,83,72,79,
87,95,80,65,83,83,
95,65,76,80,72,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,72,79,87,95,80,
65,83,83,95,65,80,
80,76,89,95,83,67,
82,69,69,78,95,67,
79,79,82,68,0,103,
108,111,98,97,108,95,
72,83,77,95,83,67,
82,69,69,78,95,86,
73,71,78,69,84,84,
69,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,83,67,
82,69,69,78,95,86,
73,71,78,69,84,84,
69,95,68,85,65,76,
83,67,82,69,69,78,
95,86,73,83,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,83,67,82,
69,69,78,95,86,73,
71,78,69,84,84,69,
95,83,84,82,69,78,
71,84,72,0,103,108,
111,98,97,108,95,72,
83,77,95,83,67,82,
69,69,78,95,86,73,
71,78,69,84,84,69,
95,80,79,87,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,67,82,69,69,78,
95,86,73,71,78,69,
84,84,69,95,73,78,
95,82,69,70,76,69,
67,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,77,
79,78,79,67,72,82,
79,77,69,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,77,79,78,79,
67,72,82,79,77,69,
95,66,82,73,71,72,
84,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,77,
79,78,79,67,72,82,
79,77,69,95,71,65,
77,77,65,0,103,108,
111,98,97,108,95,72,
83,77,95,77,79,78,
79,67,72,82,79,77,
69,95,72,85,69,95,
79,70,70,83,69,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
77,79,78,79,67,72,
82,79,77,69,95,83,
65,84,85,82,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,77,79,78,
79,67,72,82,79,77,
69,95,68,85,65,76,
83,67,82,69,69,78,
95,86,73,83,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,83,67,82,
69,69,78,95,82,69,
70,76,69,67,84,73,
79,78,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,83,67,82,69,
69,78,95,82,69,70,
76,69,67,84,73,79,
78,95,80,79,83,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,83,67,82,69,69,
78,95,82,69,70,76,
69,67,84,73,79,78,
95,80,79,83,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,68,
73,70,70,85,83,69,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,68,73,
70,70,85,83,69,95,
73,77,65,71,69,95,
68,85,65,76,83,67,
82,69,69,78,95,86,
73,83,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
79,80,65,67,73,84,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
68,73,70,70,85,83,
69,95,73,77,65,71,
69,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,68,73,70,70,85,
83,69,95,73,77,65,
71,69,95,72,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,68,
73,70,70,85,83,69,
95,73,77,65,71,69,
95,67,79,76,79,82,
73,90,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,68,
73,70,70,85,83,69,
95,73,77,65,71,69,
95,83,65,84,85,82,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,68,73,
70,70,85,83,69,95,
73,77,65,71,69,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,68,73,70,
70,85,83,69,95,73,
77,65,71,69,95,71,
65,77,77,65,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,68,73,70,
70,85,83,69,95,73,
77,65,71,69,95,65,
77,66,73,69,78,84,
95,76,73,71,72,84,
73,78,71,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,68,73,70,70,
85,83,69,95,73,77,
65,71,69,95,65,77,
66,73,69,78,84,50,
95,76,73,71,72,84,
73,78,71,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,68,73,70,70,
85,83,69,95,73,77,
65,71,69,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,68,73,70,70,
85,83,69,95,73,77,
65,71,69,95,83,67,
65,76,69,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,68,73,
70,70,85,83,69,95,
73,77,65,71,69,95,
82,79,84,65,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,69,77,80,84,89,
95,84,72,73,67,75,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,69,77,80,
84,89,95,84,72,73,
67,75,78,69,83,83,
95,88,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,68,73,70,70,85,
83,69,95,70,79,82,
67,69,95,65,83,80,
69,67,84,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,69,88,80,76,
73,67,73,84,95,65,
83,80,69,67,84,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
67,82,69,69,78,95,
67,79,82,78,69,82,
95,82,65,68,73,85,
83,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
67,79,76,79,82,69,
68,95,71,69,76,95,
73,77,65,71,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,67,79,76,79,82,
69,68,95,71,69,76,
95,73,77,65,71,69,
95,68,85,65,76,83,
67,82,69,69,78,95,
86,73,83,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,67,79,76,79,82,
69,68,95,71,69,76,
95,73,77,65,71,69,
95,77,85,76,84,73,
80,76,89,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,78,79,82,
77,65,76,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,78,79,82,
77,65,76,95,66,82,
73,71,72,84,78,69,
83,83,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,67,79,76,79,82,
69,68,95,71,69,76,
95,73,77,65,71,69,
95,78,79,82,77,65,
76,95,86,73,71,78,
69,84,84,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,84,82,65,
78,83,80,65,82,69,
78,67,89,95,84,72,
82,69,83,72,79,76,
68,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
67,79,76,79,82,69,
68,95,71,69,76,95,
73,77,65,71,69,95,
65,68,68,73,84,73,
86,69,95,65,77,79,
85,78,84,0,103,108,
111,98,97,108,95,72,
83,77,95,83,72,79,
87,95,67,82,84,95,
79,78,95,84,79,80,
95,79,70,95,67,79,
76,79,82,69,68,95,
71,69,76,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,72,65,68,
79,87,95,73,77,65,
71,69,95,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,83,72,
65,68,79,87,95,73,
77,65,71,69,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
72,65,68,79,87,95,
73,77,65,71,69,95,
83,67,65,76,69,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,72,65,68,79,87,
95,73,77,65,71,69,
95,83,67,65,76,69,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,72,65,68,79,
87,95,73,77,65,71,
69,95,80,79,83,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,72,65,68,79,87,
95,73,77,65,71,69,
95,80,79,83,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
72,65,68,79,87,95,
67,85,82,86,65,84,
85,82,69,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,67,79,76,79,
82,69,68,95,71,69,
76,95,73,77,65,71,
69,95,65,77,66,73,
69,78,84,95,76,73,
71,72,84,73,78,71,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,67,
79,76,79,82,69,68,
95,71,69,76,95,73,
77,65,71,69,95,65,
77,66,73,69,78,84,
50,95,76,73,71,72,
84,73,78,71,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,70,65,75,
69,95,83,67,65,78,
76,73,78,69,95,65,
77,79,85,78,84,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,67,79,
76,79,82,69,68,95,
71,69,76,95,73,77,
65,71,69,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,67,79,76,79,
82,69,68,95,71,69,
76,95,73,77,65,71,
69,95,70,76,73,80,
95,72,79,82,73,90,
79,78,84,65,76,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,67,79,
76,79,82,69,68,95,
71,69,76,95,73,77,
65,71,69,95,70,76,
73,80,95,86,69,82,
84,73,67,65,76,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,83,84,
65,84,73,67,95,82,
69,70,76,69,67,84,
73,79,78,95,73,77,
65,71,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
84,65,84,73,67,95,
82,69,70,76,69,67,
84,73,79,78,95,73,
77,65,71,69,95,68,
85,65,76,83,67,82,
69,69,78,95,86,73,
83,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
84,65,84,73,67,95,
82,69,70,76,69,67,
84,73,79,78,95,73,
77,65,71,69,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
84,65,84,73,67,95,
79,80,65,67,73,84,
89,95,68,73,70,70,
85,83,69,95,77,85,
76,84,73,80,76,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
84,65,84,73,67,95,
66,76,65,67,75,95,
76,69,86,69,76,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,83,84,
65,84,73,67,95,65,
77,66,73,69,78,84,
95,76,73,71,72,84,
73,78,71,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,84,65,84,
73,67,95,65,77,66,
73,69,78,84,50,95,
76,73,71,72,84,73,
78,71,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,84,65,84,73,67,
95,83,67,65,76,69,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,80,79,83,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,84,65,84,73,67,
95,80,79,83,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
84,65,84,73,67,95,
83,72,65,68,79,87,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,68,73,84,72,
69,82,95,83,65,77,
80,76,69,83,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,83,84,65,
84,73,67,95,68,73,
84,72,69,82,95,68,
73,83,84,65,78,67,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,84,65,84,73,67,
95,68,73,84,72,69,
82,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,67,82,84,95,
66,76,69,78,68,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,67,82,
84,95,66,76,69,78,
68,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,67,82,84,95,
83,67,82,69,69,78,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,71,
76,79,66,65,76,95,
67,79,82,78,69,82,
95,82,65,68,73,85,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
66,76,65,67,75,95,
69,68,71,69,95,67,
79,82,78,69,82,95,
82,65,68,73,85,83,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,66,
76,65,67,75,95,69,
68,71,69,95,83,72,
65,82,80,78,69,83,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
66,76,65,67,75,95,
69,68,71,69,95,67,
85,82,86,65,84,85,
82,69,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,66,76,65,67,75,
95,69,68,71,69,95,
84,72,73,67,75,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,66,76,65,67,
75,95,69,68,71,69,
95,84,72,73,67,75,
78,69,83,83,95,88,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,85,83,
69,95,73,78,68,69,
80,69,78,68,69,78,
84,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,73,
78,68,69,80,69,78,
68,69,78,84,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,85,83,69,95,
73,78,68,69,80,69,
78,68,69,78,84,95,
67,85,82,86,65,84,
85,82,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,73,78,68,69,80,
69,78,68,69,78,84,
95,67,85,82,86,65,
84,85,82,69,95,83,
67,65,76,69,95,76,
79,78,71,95,65,88,
73,83,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
73,78,68,69,80,69,
78,68,69,78,84,95,
67,85,82,86,65,84,
85,82,69,95,83,67,
65,76,69,95,83,72,
79,82,84,95,65,88,
73,83,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
79,80,65,67,73,84,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,66,
76,69,78,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,87,73,68,84,72,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,72,69,
73,71,72,84,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,83,67,65,76,
69,95,79,70,70,83,
69,84,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
73,78,78,69,82,95,
67,85,82,86,65,84,
85,82,69,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,73,78,78,69,82,
95,67,79,82,78,69,
82,95,82,65,68,73,
85,83,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
79,85,84,69,82,95,
67,85,82,86,65,84,
85,82,69,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,73,78,78,69,82,
95,69,68,71,69,95,
84,72,73,67,75,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,73,78,78,69,82,
95,69,68,71,69,95,
83,72,65,82,80,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,79,85,84,69,82,
95,67,79,82,78,69,
82,95,82,65,68,73,
85,83,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
73,78,78,69,82,95,
69,68,71,69,95,83,
72,65,68,79,87,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,67,79,76,
79,82,95,72,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,67,79,
76,79,82,95,83,65,
84,85,82,65,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
67,79,76,79,82,95,
86,65,76,85,69,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,78,79,73,
83,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,66,82,73,71,
72,84,78,69,83,83,
95,77,85,76,84,95,
84,79,80,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,66,82,73,71,72,
84,78,69,83,83,95,
77,85,76,84,95,66,
79,84,84,79,77,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,66,82,73,
71,72,84,78,69,83,
83,95,77,85,76,84,
95,83,73,68,69,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,66,82,
73,71,72,84,78,69,
83,83,95,77,85,76,
84,95,83,73,68,69,
95,76,69,70,84,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,66,82,73,
71,72,84,78,69,83,
83,95,77,85,76,84,
95,83,73,68,69,95,
82,73,71,72,84,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,72,73,71,
72,76,73,71,72,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,73,78,
78,69,82,95,69,68,
71,69,95,72,73,71,
72,76,73,71,72,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,65,77,
66,73,69,78,84,95,
76,73,71,72,84,73,
78,71,95,77,85,76,
84,73,80,76,73,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,65,
77,66,73,69,78,84,
50,95,76,73,71,72,
84,73,78,71,95,77,
85,76,84,73,80,76,
73,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,85,83,69,95,73,
78,68,69,80,69,78,
68,69,78,84,95,67,
79,76,79,82,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,67,79,76,79,
82,95,72,85,69,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,67,79,76,
79,82,95,83,65,84,
85,82,65,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,70,82,77,95,67,
79,76,79,82,95,86,
65,76,85,69,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,78,79,73,83,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,70,82,77,95,79,
85,84,69,82,95,67,
85,82,86,65,84,85,
82,69,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,70,82,77,95,
84,72,73,67,75,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,84,72,73,67,75,
78,69,83,83,95,83,
67,65,76,69,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,82,77,95,79,85,
84,69,82,95,80,79,
83,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,73,78,78,69,82,
95,69,68,71,69,95,
84,72,73,67,75,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,73,78,78,69,82,
95,69,68,71,69,95,
72,73,71,72,76,73,
71,72,84,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,79,85,84,69,82,
95,69,68,71,69,95,
84,72,73,67,75,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,79,85,84,69,82,
95,69,68,71,69,95,
83,72,65,68,73,78,
71,0,103,108,111,98,
97,108,95,72,83,77,
95,70,82,77,95,79,
85,84,69,82,95,67,
79,82,78,69,82,95,
82,65,68,73,85,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,79,85,
84,69,82,95,80,79,
83,73,84,73,79,78,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,70,82,77,95,
83,72,65,68,79,87,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,70,82,77,95,
83,72,65,68,79,87,
95,87,73,68,84,72,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,67,79,82,78,
69,82,95,70,65,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,67,79,82,
78,69,82,95,73,78,
78,69,82,95,83,80,
82,69,65,68,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
67,79,82,78,69,82,
95,79,85,84,69,82,
95,83,80,82,69,65,
68,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,67,79,82,
78,69,82,95,82,79,
84,65,84,73,79,78,
95,79,70,70,83,69,
84,95,84,79,80,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,67,79,82,78,69,
82,95,82,79,84,65,
84,73,79,78,95,79,
70,70,83,69,84,95,
66,79,84,84,79,77,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,67,79,82,78,
69,82,95,83,80,82,
69,65,68,95,70,65,
76,76,79,70,70,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,67,79,82,78,69,
82,95,70,65,68,69,
95,68,73,83,84,65,
78,67,69,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,71,
76,79,66,65,76,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,71,76,79,66,
65,76,95,71,65,77,
77,65,95,65,68,74,
85,83,84,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,66,
69,90,69,76,95,73,
78,78,69,82,95,69,
68,71,69,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
66,69,90,69,76,95,
73,78,78,69,82,95,
69,68,71,69,95,70,
85,76,76,83,67,82,
69,69,78,95,71,76,
79,87,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,70,82,
65,77,69,95,73,78,
78,69,82,95,69,68,
71,69,95,65,77,79,
85,78,84,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,70,
82,65,77,69,95,73,
78,78,69,82,95,69,
68,71,69,95,83,72,
65,82,80,78,69,83,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,83,72,79,
87,95,84,85,66,69,
95,70,88,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
68,73,82,69,67,84,
95,65,77,79,85,78,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,68,73,70,
70,85,83,69,68,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,70,85,76,76,
83,67,82,69,69,78,
95,71,76,79,87,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,70,85,76,76,83,
67,82,69,69,78,95,
71,76,79,87,95,71,
65,77,77,65,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
70,65,68,69,95,65,
77,79,85,78,84,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,82,65,68,73,65,
76,95,70,65,68,69,
95,87,73,68,84,72,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,82,65,68,73,
65,76,95,70,65,68,
69,95,72,69,73,71,
72,84,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,76,65,
84,69,82,65,76,95,
79,85,84,69,82,95,
70,65,68,69,95,80,
79,83,73,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,76,65,84,
69,82,65,76,95,79,
85,84,69,82,95,70,
65,68,69,95,68,73,
83,84,65,78,67,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,78,79,73,83,
69,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,78,79,
73,83,69,95,83,65,
77,80,76,69,83,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,78,79,73,83,69,
95,83,65,77,80,76,
69,95,68,73,83,84,
65,78,67,69,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
66,76,85,82,95,78,
85,77,95,83,65,77,
80,76,69,83,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
66,76,85,82,95,70,
65,76,76,79,70,70,
95,68,73,83,84,65,
78,67,69,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,66,
76,85,82,95,77,73,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,66,76,85,
82,95,77,65,88,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,77,65,83,75,95,
73,77,65,71,69,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,77,65,83,75,
95,70,79,76,76,79,
87,95,76,65,89,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,77,65,83,
75,95,70,79,76,76,
79,87,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,77,65,83,
75,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,77,65,83,75,
95,66,76,65,67,75,
95,76,69,86,69,76,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,77,65,83,75,
95,77,73,80,77,65,
80,80,73,78,71,95,
66,76,69,78,68,95,
66,73,65,83,0,103,
108,111,98,97,108,95,
72,83,77,95,71,76,
65,83,83,95,66,79,
82,68,69,82,95,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,86,73,71,
78,69,84,84,69,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,86,73,71,78,
69,84,84,69,95,83,
73,90,69,0,103,108,
111,98,97,108,95,72,
83,77,95,80,79,84,
65,84,79,95,83,72,
79,87,95,66,71,95,
79,86,69,82,95,83,
67,82,69,69,78,0,
103,108,111,98,97,108,
95,72,83,77,95,80,
79,84,65,84,79,95,
67,79,76,79,82,73,
90,69,95,67,82,84,
95,87,73,84,72,95,
66,71,0,103,108,111,
98,97,108,95,72,83,
77,95,80,79,84,65,
84,79,95,67,79,76,
79,82,73,90,69,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,83,84,
65,78,68,65,82,68,
95,68,69,67,65,76,
95,83,67,65,76,69,
95,87,73,84,72,95,
70,82,65,77,69,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
84,65,78,68,65,82,
68,95,84,79,80,95,
83,67,65,76,69,95,
87,73,84,72,95,70,
82,65,77,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,76,65,89,69,82,
95,79,82,68,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
86,73,69,87,80,79,
82,84,95,86,73,71,
78,69,84,84,69,95,
76,65,89,69,82,95,
79,82,68,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
82,84,95,76,65,89,
69,82,95,79,82,68,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,76,65,89,
69,82,95,79,82,68,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
76,65,89,69,82,95,
79,82,68,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,76,65,89,
69,82,95,79,82,68,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,76,65,89,69,
82,95,79,82,68,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,76,69,68,95,76,
65,89,69,82,95,79,
82,68,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,76,65,89,69,
82,95,79,82,68,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,67,85,84,79,85,
84,95,65,83,80,69,
67,84,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,67,85,84,79,85,
84,95,69,88,80,76,
73,67,73,84,95,65,
83,80,69,67,84,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
85,84,79,85,84,95,
70,79,76,76,79,87,
95,76,65,89,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,84,79,85,84,
95,70,79,76,76,79,
87,95,70,85,76,76,
95,85,83,69,83,95,
90,79,79,77,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
84,79,85,84,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
84,79,85,84,95,83,
67,65,76,69,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,84,79,85,84,
95,67,79,82,78,69,
82,95,82,65,68,73,
85,83,0,103,108,111,
98,97,108,95,72,83,
77,95,67,85,84,79,
85,84,95,80,79,83,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,67,85,84,79,
85,84,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,72,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,67,79,76,
79,82,73,90,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,83,
65,84,85,82,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,66,71,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,71,65,77,77,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,65,77,66,
73,69,78,84,95,76,
73,71,72,84,73,78,
71,95,77,85,76,84,
73,80,76,73,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,65,77,66,
73,69,78,84,50,95,
76,73,71,72,84,73,
78,71,95,77,85,76,
84,73,80,76,73,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,65,80,
80,76,89,95,65,77,
66,73,69,78,84,95,
73,78,95,65,68,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
71,95,66,76,69,78,
68,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,83,79,85,
82,67,69,95,77,65,
84,84,69,95,84,89,
80,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,77,
65,83,75,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,67,
85,84,79,85,84,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,68,85,65,76,83,
67,82,69,69,78,95,
86,73,83,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,70,
79,76,76,79,87,95,
76,65,89,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
71,95,70,79,76,76,
79,87,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,70,79,
76,76,79,87,95,70,
85,76,76,95,85,83,
69,83,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,70,73,
76,76,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,83,80,
76,73,84,95,80,82,
69,83,69,82,86,69,
95,67,69,78,84,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,83,80,
76,73,84,95,82,69,
80,69,65,84,95,87,
73,68,84,72,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,83,67,65,
76,69,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,80,79,83,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,87,
82,65,80,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,77,
73,80,77,65,80,80,
73,78,71,95,66,76,
69,78,68,95,66,73,
65,83,0,103,108,111,
98,97,108,95,72,83,
77,95,86,73,69,87,
80,79,82,84,95,86,
73,71,78,69,84,84,
69,95,79,80,65,67,
73,84,89,0,103,108,
111,98,97,108,95,72,
83,77,95,86,73,69,
87,80,79,82,84,95,
86,73,71,78,69,84,
84,69,95,77,65,83,
75,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
86,73,69,87,80,79,
82,84,95,86,73,71,
78,69,84,84,69,95,
67,85,84,79,85,84,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,86,
73,69,87,80,79,82,
84,95,86,73,71,78,
69,84,84,69,95,70,
79,76,76,79,87,95,
76,65,89,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,86,
73,69,87,80,79,82,
84,95,86,73,71,78,
69,84,84,69,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,86,73,
69,87,80,79,82,84,
95,86,73,71,78,69,
84,84,69,95,83,67,
65,76,69,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,86,
73,69,87,80,79,82,
84,95,86,73,71,78,
69,84,84,69,95,80,
79,83,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,86,73,
69,87,80,79,82,84,
95,86,73,71,78,69,
84,84,69,95,80,79,
83,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
72,85,69,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,67,79,76,79,82,
73,90,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,83,65,
84,85,82,65,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,71,65,77,77,
65,0,103,108,111,98,
97,108,95,72,83,77,
95,76,69,68,95,65,
77,66,73,69,78,84,
95,76,73,71,72,84,
73,78,71,95,77,85,
76,84,73,80,76,73,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
65,77,66,73,69,78,
84,50,95,76,73,71,
72,84,73,78,71,95,
77,85,76,84,73,80,
76,73,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,65,80,80,76,
89,95,65,77,66,73,
69,78,84,95,73,78,
95,65,68,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,83,79,85,
82,67,69,95,77,65,
84,84,69,95,84,89,
80,69,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
77,65,83,75,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,67,85,84,79,85,
84,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,68,85,
65,76,83,67,82,69,
69,78,95,86,73,83,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,70,79,76,
76,79,87,95,76,65,
89,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,70,79,76,76,79,
87,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,70,79,
76,76,79,87,95,70,
85,76,76,95,85,83,
69,83,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,76,69,68,95,70,
73,76,76,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
83,80,76,73,84,95,
80,82,69,83,69,82,
86,69,95,67,69,78,
84,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,83,80,76,73,84,
95,82,69,80,69,65,
84,95,87,73,68,84,
72,0,103,108,111,98,
97,108,95,72,83,77,
95,76,69,68,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,83,67,65,76,
69,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,80,79,83,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,80,79,
83,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,77,73,80,77,65,
80,80,73,78,71,95,
66,76,69,78,68,95,
66,73,65,83,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,72,85,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,67,
79,76,79,82,73,90,
69,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,83,
65,84,85,82,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,95,66,82,
73,71,72,84,78,69,
83,83,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,71,65,77,
77,65,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,65,77,66,
73,69,78,84,95,76,
73,71,72,84,73,78,
71,95,77,85,76,84,
73,80,76,73,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,65,77,66,73,69,
78,84,50,95,76,73,
71,72,84,73,78,71,
95,77,85,76,84,73,
80,76,73,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,95,
65,80,80,76,89,95,
65,77,66,73,69,78,
84,95,73,78,95,65,
68,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,95,66,76,69,78,
68,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,83,79,85,82,67,
69,95,77,65,84,84,
69,95,84,89,80,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,77,65,83,75,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,67,
85,84,79,85,84,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,68,
85,65,76,83,67,82,
69,69,78,95,86,73,
83,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,70,79,76,76,79,
87,95,76,65,89,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,95,70,79,76,76,
79,87,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,95,70,79,76,76,
79,87,95,70,85,76,
76,95,85,83,69,83,
95,90,79,79,77,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,95,
70,73,76,76,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,95,83,80,
76,73,84,95,80,82,
69,83,69,82,86,69,
95,67,69,78,84,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,95,83,80,76,73,
84,95,82,69,80,69,
65,84,95,87,73,68,
84,72,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,83,67,65,
76,69,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,80,
79,83,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,80,
79,83,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,77,
73,80,77,65,80,80,
73,78,71,95,66,76,
69,78,68,95,66,73,
65,83,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
79,80,65,67,73,84,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
67,79,76,79,82,73,
90,69,95,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,83,65,84,
85,82,65,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,66,
82,73,71,72,84,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,71,65,77,77,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
76,69,68,95,65,77,
66,73,69,78,84,95,
76,73,71,72,84,73,
78,71,95,77,85,76,
84,73,80,76,73,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,65,
77,66,73,69,78,84,
50,95,76,73,71,72,
84,73,78,71,95,77,
85,76,84,73,80,76,
73,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,65,80,80,76,89,
95,65,77,66,73,69,
78,84,95,73,78,95,
65,68,68,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
66,76,69,78,68,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,83,79,85,82,
67,69,95,77,65,84,
84,69,95,84,89,80,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,77,
65,83,75,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
67,85,84,79,85,84,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,68,85,65,
76,83,67,82,69,69,
78,95,86,73,83,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,70,79,76,76,
79,87,95,76,65,89,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
70,79,76,76,79,87,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,70,79,76,
76,79,87,95,70,85,
76,76,95,85,83,69,
83,95,90,79,79,77,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
76,69,68,95,70,73,
76,76,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,83,
80,76,73,84,95,80,
82,69,83,69,82,86,
69,95,67,69,78,84,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
83,80,76,73,84,95,
82,69,80,69,65,84,
95,87,73,68,84,72,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
76,69,68,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,83,67,65,76,69,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
80,79,83,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
77,73,80,77,65,80,
80,73,78,71,95,66,
76,69,78,68,95,66,
73,65,83,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,70,82,77,95,
66,76,69,78,68,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,84,69,88,84,
85,82,69,95,79,80,
65,67,73,84,89,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,84,69,88,
84,85,82,69,95,66,
76,69,78,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,72,85,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,67,79,76,79,82,
73,90,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
83,65,84,85,82,65,
84,73,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,66,82,
73,71,72,84,78,69,
83,83,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,71,65,77,77,
65,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,65,77,66,73,69,
78,84,95,76,73,71,
72,84,73,78,71,95,
77,85,76,84,73,80,
76,73,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,65,77,
66,73,69,78,84,50,
95,76,73,71,72,84,
73,78,71,95,77,85,
76,84,73,80,76,73,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,65,80,80,76,
89,95,65,77,66,73,
69,78,84,95,73,78,
95,65,68,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,66,76,69,
78,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,83,79,85,82,67,
69,95,77,65,84,84,
69,95,84,89,80,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
77,65,83,75,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,67,85,84,
79,85,84,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,68,85,65,76,
83,67,82,69,69,78,
95,86,73,83,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,70,79,76,
76,79,87,95,76,65,
89,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,70,79,76,
76,79,87,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,70,79,76,76,
79,87,95,70,85,76,
76,95,85,83,69,83,
95,90,79,79,77,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,70,
73,76,76,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,83,80,76,73,
84,95,80,82,69,83,
69,82,86,69,95,67,
69,78,84,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,83,
80,76,73,84,95,82,
69,80,69,65,84,95,
87,73,68,84,72,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,83,67,
65,76,69,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,80,
79,83,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,80,79,
83,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,77,73,80,
77,65,80,80,73,78,
71,95,66,76,69,78,
68,95,66,73,65,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,79,80,
65,67,73,84,89,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,72,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,67,79,
76,79,82,73,90,69,
95,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,83,65,84,85,82,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,66,82,73,
71,72,84,78,69,83,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,71,
65,77,77,65,0,103,
108,111,98,97,108,95,
72,83,77,95,67,65,
66,95,71,76,65,83,
83,95,65,77,66,73,
69,78,84,95,76,73,
71,72,84,73,78,71,
95,77,85,76,84,73,
80,76,73,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,65,77,66,
73,69,78,84,50,95,
76,73,71,72,84,73,
78,71,95,77,85,76,
84,73,80,76,73,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,65,
80,80,76,89,95,65,
77,66,73,69,78,84,
95,73,78,95,65,68,
68,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,66,76,
69,78,68,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
83,79,85,82,67,69,
95,77,65,84,84,69,
95,84,89,80,69,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,77,65,83,
75,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,67,85,
84,79,85,84,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,68,85,65,76,83,
67,82,69,69,78,95,
86,73,83,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
70,79,76,76,79,87,
95,76,65,89,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,70,79,
76,76,79,87,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,70,79,76,76,79,
87,95,70,85,76,76,
95,85,83,69,83,95,
90,79,79,77,0,103,
108,111,98,97,108,95,
72,83,77,95,67,65,
66,95,71,76,65,83,
83,95,70,73,76,76,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,83,80,76,
73,84,95,80,82,69,
83,69,82,86,69,95,
67,69,78,84,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,83,80,
76,73,84,95,82,69,
80,69,65,84,95,87,
73,68,84,72,0,103,
108,111,98,97,108,95,
72,83,77,95,67,65,
66,95,71,76,65,83,
83,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,83,
67,65,76,69,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,80,79,
83,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,80,79,83,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,77,73,
80,77,65,80,80,73,
78,71,95,66,76,69,
78,68,95,66,73,65,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,72,85,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,67,
79,76,79,82,73,90,
69,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,83,65,84,85,
82,65,84,73,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,66,82,
73,71,72,84,78,69,
83,83,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
71,65,77,77,65,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
79,80,95,65,77,66,
73,69,78,84,95,76,
73,71,72,84,73,78,
71,95,77,85,76,84,
73,80,76,73,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,65,77,
66,73,69,78,84,50,
95,76,73,71,72,84,
73,78,71,95,77,85,
76,84,73,80,76,73,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
65,80,80,76,89,95,
65,77,66,73,69,78,
84,95,73,78,95,65,
68,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,66,
76,69,78,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,83,79,85,82,67,
69,95,77,65,84,84,
69,95,84,89,80,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,77,65,
83,75,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,67,
85,84,79,85,84,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,68,85,65,76,
83,67,82,69,69,78,
95,86,73,83,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,70,79,76,76,79,
87,95,76,65,89,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,70,
79,76,76,79,87,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,70,79,76,76,
79,87,95,70,85,76,
76,95,85,83,69,83,
95,90,79,79,77,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
79,80,95,70,73,76,
76,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,83,80,
76,73,84,95,80,82,
69,83,69,82,86,69,
95,67,69,78,84,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,83,
80,76,73,84,95,82,
69,80,69,65,84,95,
87,73,68,84,72,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
79,80,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
83,67,65,76,69,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,80,
79,83,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,80,79,83,95,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,77,
73,82,82,79,82,95,
87,82,65,80,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,77,73,80,77,
65,80,80,73,78,71,
95,66,76,69,78,68,
95,66,73,65,83,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,78,68,69,82,95,
83,73,77,80,76,69,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,78,68,69,82,95,
83,73,77,80,76,69,
95,77,65,83,75,95,
84,89,80,69,0,103,
108,111,98,97,108,95,
72,83,77,95,76,65,
89,69,82,73,78,71,
95,68,69,66,85,71,
95,77,65,83,75,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,82,79,95,76,79,
71,79,95,66,76,69,
78,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,76,79,71,79,95,
70,76,73,80,95,86,
69,82,84,73,67,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,78,79,73,83,69,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,78,
79,73,83,69,95,72,
79,76,68,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,78,79,73,
83,69,95,70,65,68,
69,95,79,85,84,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,83,
79,76,73,68,95,66,
76,65,67,75,95,72,
79,76,68,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,83,79,76,
73,68,95,66,76,65,
67,75,95,70,65,68,
69,95,79,85,84,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,83,
79,76,73,68,95,67,
79,76,79,82,95,66,
76,69,78,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,76,79,71,
79,95,79,86,69,82,
95,83,79,76,73,68,
95,67,79,76,79,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
73,78,84,82,79,95,
76,79,71,79,95,80,
76,65,67,69,77,69,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,76,79,71,79,
95,72,69,73,71,72,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,76,79,71,79,95,
80,79,83,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,76,
79,71,79,95,80,79,
83,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,87,72,69,
78,95,84,79,95,83,
72,79,87,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,83,80,69,
69,68,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,76,79,71,79,
95,87,65,73,84,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,76,
79,71,79,95,70,65,
68,69,95,73,78,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,76,
79,71,79,95,72,79,
76,68,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,76,79,71,79,
95,70,65,68,69,95,
79,85,84,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,83,79,76,
73,68,95,67,79,76,
79,82,95,72,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
73,78,84,82,79,95,
83,79,76,73,68,95,
67,79,76,79,82,95,
83,65,84,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,83,79,76,
73,68,95,67,79,76,
79,82,95,86,65,76,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,83,79,76,73,
68,95,67,79,76,79,
82,95,72,79,76,68,
0,103,108,111,98,97,
108,95,72,83,77,95,
73,78,84,82,79,95,
83,79,76,73,68,95,
67,79,76,79,82,95,
70,65,68,69,95,79,
85,84,0,103,108,111,
98,97,108,95,71,65,
77,77,65,95,73,78,
80,85,84,0,103,108,
111,98,97,108,95,103,
97,109,109,97,95,111,
117,116,0,103,108,111,
98,97,108,95,112,111,
115,116,95,98,114,0,
103,108,111,98,97,108,
95,112,111,115,116,95,
98,114,95,97,102,102,
101,99,116,95,98,108,
97,99,107,95,108,101,
118,101,108,0,103,108,
111,98,97,108,95,109,
95,103,108,111,119,0,
103,108,111,98,97,108,
95,109,95,103,108,111,
119,95,108,111,119,0,
103,108,111,98,97,108,
95,109,95,103,108,111,
119,95,104,105,103,104,
0,103,108,111,98,97,
108,95,109,95,103,108,
111,119,95,100,105,115,
116,0,103,108,111,98,
97,108,95,109,95,103,
108,111,119,95,109,97,
115,107,0,103,108,111,
98,97,108,95,115,109,
97,115,107,95,109,105,
116,0,103,108,111,98,
97,108,95,98,109,97,
115,107,0,103,108,111,
98,97,108,95,98,109,
97,115,107,49,0,103,
108,111,98,97,108,95,
104,109,97,115,107,49,
0,103,108,111,98,97,
108,95,103,108,111,119,
0,103,108,111,98,97,
108,95,98,108,111,111,
109,0,103,108,111,98,
97,108,95,109,97,115,
107,95,98,108,111,111,
109,0,103,108,111,98,
97,108,95,98,108,111,
111,109,95,100,105,115,
116,0,103,108,111,98,
97,108,95,104,97,108,
97,116,105,111,110,0,
103,108,111,98,97,108,
95,84,65,84,69,0,
103,108,111,98,97,108,
95,73,79,83,0,103,
108,111,98,97,108,95,
72,83,77,95,79,86,
69,82,83,67,65,78,
95,82,65,83,84,69,
82,95,66,76,79,79,
77,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,79,86,
69,82,83,67,65,78,
95,82,65,83,84,69,
82,95,66,76,79,79,
77,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
79,86,69,82,83,67,
65,78,95,82,65,83,
84,69,82,95,66,76,
79,79,77,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,79,86,
69,82,83,67,65,78,
95,82,65,83,84,69,
82,95,66,76,79,79,
77,95,78,69,85,84,
82,65,76,95,82,65,
78,71,69,0,103,108,
111,98,97,108,95,72,
83,77,95,79,86,69,
82,83,67,65,78,95,
82,65,83,84,69,82,
95,66,76,79,79,77,
95,78,69,85,84,82,
65,76,95,82,65,78,
71,69,95,67,69,78,
84,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,79,86,69,
82,83,67,65,78,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
79,86,69,82,83,67,
65,78,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,79,86,
69,82,83,67,65,78,
95,89,0,103,108,111,
98,97,108,95,112,114,
101,115,99,97,108,101,
120,0,103,108,111,98,
97,108,95,99,95,115,
104,97,112,101,0,103,
108,111,98,97,108,95,
115,98,111,114,100,101,
114,0,103,108,111,98,
97,108,95,99,115,105,
122,101,0,103,108,111,
98,97,108,95,98,115,
105,122,101,49,0,103,
108,111,98,97,108,95,
119,97,114,112,88,0,
103,108,111,98,97,108,
95,119,97,114,112,89,
0,103,108,111,98,97,
108,95,103,97,109,109,
97,95,99,0,103,108,
111,98,97,108,95,98,
114,105,103,104,116,98,
111,111,115,116,0,103,
108,111,98,97,108,95,
98,114,105,103,104,116,
98,111,111,115,116,49,
0,103,108,111,98,97,
108,95,99,108,105,112,
115,0,103,108,111,98,
97,108,95,98,108,101,
110,100,77,111,100,101,
0,103,108,111,98,97,
108,95,103,115,108,0,
103,108,111,98,97,108,
95,115,99,97,110,108,
105,110,101,49,0,103,
108,111,98,97,108,95,
115,99,97,110,108,105,
110,101,50,0,103,108,
111,98,97,108,95,98,
101,97,109,95,109,105,
110,0,103,108,111,98,
97,108,95,98,101,97,
109,95,109,97,120,0,
103,108,111,98,97,108,
95,116,100,115,0,103,
108,111,98,97,108,95,
98,101,97,109,95,115,
105,122,101,0,103,108,
111,98,97,108,95,118,
101,114,116,109,97,115,
107,0,103,108,111,98,
97,108,95,115,99,97,
110,115,0,103,108,111,
98,97,108,95,115,99,
97,110,95,102,97,108,
108,111,102,102,0,103,
108,111,98,97,108,95,
115,112,105,107,101,0,
103,108,111,98,97,108,
95,115,115,104,97,114,
112,0,103,108,111,98,
97,108,95,114,105,110,
103,0,103,108,111,98,
97,108,95,110,111,95,
115,99,97,110,108,105,
110,101,115,0,103,108,
111,98,97,108,95,115,
99,97,110,103,97,109,
109,97,0,103,108,111,
98,97,108,95,114,111,
108,108,105,110,103,95,
115,99,97,110,0,103,
108,111,98,97,108,95,
104,95,115,104,97,114,
112,0,103,108,111,98,
97,108,95,115,95,115,
104,97,114,112,0,103,
108,111,98,97,108,95,
115,109,97,114,116,95,
101,105,0,103,108,111,
98,97,108,95,101,105,
95,108,105,109,105,116,
0,103,108,111,98,97,
108,95,115,116,104,0,
103,108,111,98,97,108,
95,98,97,114,115,112,
101,101,100,0,103,108,
111,98,97,108,95,98,
97,114,105,110,116,101,
110,115,105,116,121,0,
103,108,111,98,97,108,
95,98,97,114,100,105,
114,0,103,108,111,98,
97,108,95,115,104,97,
100,111,119,77,97,115,
107,0,103,108,111,98,
97,108,95,109,97,115,
107,115,116,114,0,103,
108,111,98,97,108,95,
109,99,117,116,0,103,
108,111,98,97,108,95,
109,97,115,107,98,111,
111,115,116,0,103,108,
111,98,97,108,95,109,
97,115,107,115,105,122,
101,0,103,108,111,98,
97,108,95,109,97,115,
107,95,122,111,111,109,
0,103,108,111,98,97,
108,95,109,122,111,111,
109,95,115,104,0,103,
108,111,98,97,108,95,
109,97,115,107,115,105,
122,101,97,117,116,111,
116,104,114,101,115,104,
111,108,100,0,103,108,
111,98,97,108,95,109,
97,115,107,68,97,114,
107,0,103,108,111,98,
97,108,95,109,97,115,
107,76,105,103,104,116,
0,103,108,111,98,97,
108,95,109,97,115,107,
95,103,97,109,109,97,
0,103,108,111,98,97,
108,95,115,108,111,116,
109,97,115,107,0,103,
108,111,98,97,108,95,
115,108,111,116,109,97,
115,107,49,0,103,108,
111,98,97,108,95,115,
108,111,116,119,105,100,
116,104,0,103,108,111,
98,97,108,95,100,111,
117,98,108,101,95,115,
108,111,116,0,103,108,
111,98,97,108,95,115,
108,111,116,109,115,0,
103,108,111,98,97,108,
95,115,109,111,111,116,
104,109,97,115,107,0,
103,108,111,98,97,108,
95,109,115,104,105,102,
116,0,103,108,111,98,
97,108,95,109,97,115,
107,95,108,97,121,111,
117,116,0,103,108,111,
98,97,108,95,71,68,
86,95,68,69,67,79,
78,86,69,82,71,69,
78,67,69,95,79,78,
0,103,108,111,98,97,
108,95,100,101,99,111,
110,115,0,103,108,111,
98,97,108,95,100,101,
99,111,110,114,114,0,
103,108,111,98,97,108,
95,100,101,99,111,110,
114,103,0,103,108,111,
98,97,108,95,100,101,
99,111,110,114,98,0,
103,108,111,98,97,108,
95,100,101,99,111,110,
114,114,121,0,103,108,
111,98,97,108,95,100,
101,99,111,110,114,103,
121,0,103,108,111,98,
97,108,95,100,101,99,
111,110,114,98,121,0,
103,108,111,98,97,108,
95,100,101,99,111,110,
115,109,111,111,116,104,
0,103,108,111,98,97,
108,95,100,99,116,121,
112,101,120,0,103,108,
111,98,97,108,95,100,
99,116,121,112,101,121,
0,103,108,111,98,97,
108,95,100,99,115,99,
97,108,101,109,111,100,
101,0,103,108,111,98,
97,108,95,71,68,86,
95,78,79,73,83,69,
95,79,78,0,103,108,
111,98,97,108,95,97,
100,100,110,111,105,115,
101,100,0,103,108,111,
98,97,108,95,110,111,
105,115,101,116,121,112,
101,0,103,108,111,98,
97,108,95,110,111,105,
115,101,114,101,115,100,
0,103,108,111,98,97,
108,95,110,111,105,115,
101,114,101,115,100,52,
107,109,117,108,116,0,
103,108,111,98,97,108,
95,103,95,103,114,97,
100,101,95,111,110,0,
103,108,111,98,97,108,
95,103,95,68,97,114,
107,95,116,111,95,68,
105,109,0,103,108,111,
98,97,108,95,103,95,
71,67,111,109,112,114,
101,115,115,0,103,108,
111,98,97,108,95,119,
112,95,116,101,109,112,
101,114,97,116,117,114,
101,0,103,108,111,98,
97,108,95,103,95,97,
110,97,108,111,103,0,
103,108,111,98,97,108,
95,103,95,100,105,103,
105,116,97,108,0,103,
108,111,98,97,108,95,
103,95,115,102,105,120,
101,115,0,103,108,111,
98,97,108,95,103,95,
77,68,95,80,97,108,
0,103,108,111,98,97,
108,95,103,95,83,77,
83,95,98,108,0,103,
108,111,98,97,108,95,
103,95,67,82,84,95,
98,114,0,103,108,111,
98,97,108,95,103,95,
67,82,84,95,98,103,
0,103,108,111,98,97,
108,95,103,95,67,82,
84,95,98,98,0,103,
108,111,98,97,108,95,
103,95,67,82,84,95,
114,102,0,103,108,111,
98,97,108,95,103,95,
67,82,84,95,115,108,
0,103,108,111,98,97,
108,95,103,95,115,97,
116,114,0,103,108,111,
98,97,108,95,103,95,
115,97,116,103,0,103,
108,111,98,97,108,95,
103,95,115,97,116,98,
0,103,108,111,98,97,
108,95,65,83,0,103,
108,111,98,97,108,95,
97,115,97,116,0,103,
108,111,98,97,108,95,
104,99,114,116,95,104,
95,115,105,122,101,0,
103,108,111,98,97,108,
95,104,99,114,116,95,
118,95,115,105,122,101,
0,103,108,111,98,97,
108,95,104,99,114,116,
95,104,95,99,101,110,
116,0,103,108,111,98,
97,108,95,104,99,114,
116,95,118,95,99,101,
110,116,0,103,108,111,
98,97,108,95,104,99,
114,116,95,112,105,110,
95,112,104,97,115,101,
0,103,108,111,98,97,
108,95,104,99,114,116,
95,112,105,110,95,97,
109,112,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,171,171,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
104,0,0,0,3,0,
0,0,8,0,0,0,
80,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
80,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,3,0,0,
89,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,88,1,
0,0,80,0,1,0,
86,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,8,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
101,0,0,3,194,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,9,50,0,
16,0,0,0,0,0,
70,128,32,0,0,0,
0,0,4,0,0,0,
230,138,32,0,0,0,
0,0,7,0,0,0,
56,0,0,8,194,32,
16,0,0,0,0,0,
6,4,16,0,0,0,
0,0,166,142,32,0,
0,0,0,0,4,0,
0,0,54,0,0,5,
50,32,16,0,0,0,
0,0,70,16,16,0,
1,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
8,0,0,0,1,0,
0,0,0,0,0,0,
5,0,0,0,6,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,167,42,
39,99,127,113,80,173,
94,115,246,215,183,48,
124,65,1,0,0,0,
148,193,0,0,5,0,
0,0,52,0,0,0,
200,190,0,0,20,191,
0,0,72,191,0,0,
248,192,0,0,82,68,
69,70,140,190,0,0,
1,0,0,0,28,1,
0,0,5,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
97,190,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
220,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,237,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
1,0,0,0,2,1,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
2,0,0,0,1,0,
0,0,13,0,0,0,
10,1,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,3,0,0,0,
1,0,0,0,13,0,
0,0,22,1,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,95,67,
82,84,80,97,115,115,
95,115,97,109,112,108,
101,114,0,95,80,111,
115,116,67,82,84,80,
97,115,115,95,115,97,
109,112,108,101,114,0,
67,82,84,80,97,115,
115,0,80,111,115,116,
67,82,84,80,97,115,
115,0,85,66,79,0,
171,171,22,1,0,0,
169,2,0,0,52,1,
0,0,48,11,0,0,
0,0,0,0,0,0,
0,0,156,107,0,0,
0,0,0,0,64,0,
0,0,0,0,0,0,
176,107,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
212,107,0,0,64,0,
0,0,16,0,0,0,
0,0,0,0,240,107,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,20,108,
0,0,80,0,0,0,
16,0,0,0,0,0,
0,0,240,107,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,40,108,0,0,
96,0,0,0,16,0,
0,0,0,0,0,0,
240,107,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,108,0,0,112,0,
0,0,16,0,0,0,
0,0,0,0,240,107,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,86,108,
0,0,128,0,0,0,
16,0,0,0,0,0,
0,0,240,107,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,111,108,0,0,
144,0,0,0,16,0,
0,0,0,0,0,0,
240,107,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
134,108,0,0,160,0,
0,0,4,0,0,0,
0,0,0,0,160,108,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,196,108,
0,0,164,0,0,0,
4,0,0,0,0,0,
0,0,220,108,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,0,109,0,0,
168,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
76,109,0,0,172,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,104,109,
0,0,176,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,137,109,0,0,
180,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,109,0,0,184,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,208,109,
0,0,188,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,243,109,0,0,
192,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
36,110,0,0,196,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,65,110,
0,0,200,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,104,110,0,0,
204,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
142,110,0,0,208,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,173,110,
0,0,212,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,209,110,0,0,
216,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,110,0,0,220,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,9,111,
0,0,224,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,53,111,0,0,
228,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
77,111,0,0,232,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,108,111,
0,0,236,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,134,111,0,0,
240,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
163,111,0,0,244,0,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,201,111,
0,0,248,0,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,240,111,0,0,
252,0,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
10,112,0,0,0,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,38,112,
0,0,4,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,65,112,0,0,
8,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
97,112,0,0,12,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,134,112,
0,0,16,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,165,112,0,0,
20,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
196,112,0,0,24,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,234,112,
0,0,28,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,2,113,0,0,
32,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
33,113,0,0,36,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,59,113,
0,0,40,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,88,113,0,0,
44,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
126,113,0,0,48,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,165,113,
0,0,52,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,191,113,0,0,
56,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
219,113,0,0,60,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,246,113,
0,0,64,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,22,114,0,0,
68,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
59,114,0,0,72,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,90,114,
0,0,76,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,121,114,0,0,
80,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
146,114,0,0,84,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,177,114,
0,0,88,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,208,114,0,0,
92,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
238,114,0,0,96,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,16,115,
0,0,100,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,52,115,0,0,
104,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
82,115,0,0,108,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,114,115,
0,0,112,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,143,115,0,0,
116,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
179,115,0,0,120,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,208,115,
0,0,124,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,241,115,0,0,
128,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
11,116,0,0,132,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,48,116,
0,0,136,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,90,116,0,0,
140,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
122,116,0,0,144,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,149,116,
0,0,148,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,178,116,0,0,
152,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
223,116,0,0,156,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,8,117,
0,0,160,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,50,117,0,0,
164,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
93,117,0,0,168,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,128,117,
0,0,172,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,170,117,0,0,
176,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
202,117,0,0,180,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,238,117,
0,0,184,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,23,118,0,0,
188,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
70,118,0,0,192,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,99,118,
0,0,196,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,128,118,0,0,
200,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
149,118,0,0,204,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,178,118,
0,0,208,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,206,118,0,0,
212,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,118,0,0,216,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,10,119,
0,0,220,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,40,119,0,0,
224,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
72,119,0,0,228,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,102,119,
0,0,232,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,149,119,0,0,
236,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
189,119,0,0,240,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,236,119,
0,0,244,1,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,120,0,0,
248,1,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,120,0,0,252,1,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,101,120,
0,0,0,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,127,120,0,0,
4,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,120,0,0,8,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,210,120,
0,0,12,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,224,120,0,0,
16,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
240,120,0,0,20,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,254,120,
0,0,24,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,28,121,0,0,
28,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
61,121,0,0,32,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,95,121,
0,0,36,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,124,121,0,0,
40,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
159,121,0,0,44,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,189,121,
0,0,48,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,224,121,0,0,
52,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
11,122,0,0,56,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,38,122,
0,0,60,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,82,122,0,0,
64,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
128,122,0,0,68,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,174,122,
0,0,72,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,220,122,0,0,
76,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
12,123,0,0,80,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,66,123,
0,0,84,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,106,123,0,0,
88,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
146,123,0,0,92,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,181,123,
0,0,96,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,209,123,0,0,
100,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,123,0,0,104,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,21,124,
0,0,108,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,60,124,0,0,
112,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
102,124,0,0,116,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,142,124,
0,0,120,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,183,124,0,0,
124,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
209,124,0,0,128,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,249,124,
0,0,132,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,34,125,0,0,
136,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
65,125,0,0,140,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,99,125,
0,0,144,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,136,125,0,0,
148,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,125,0,0,152,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,204,125,
0,0,156,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,231,125,0,0,
160,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
6,126,0,0,164,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,42,126,
0,0,168,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,76,126,0,0,
172,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
110,126,0,0,176,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,139,126,
0,0,180,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,166,126,0,0,
184,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
200,126,0,0,188,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,232,126,
0,0,192,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,3,127,0,0,
196,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
41,127,0,0,200,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,79,127,
0,0,204,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,127,0,0,
208,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
149,127,0,0,212,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,176,127,
0,0,216,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,203,127,0,0,
220,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
243,127,0,0,224,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,17,128,
0,0,228,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,64,128,0,0,
232,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
100,128,0,0,236,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,133,128,
0,0,240,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,174,128,0,0,
244,2,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
201,128,0,0,248,2,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,234,128,
0,0,252,2,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,6,129,0,0,
0,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
39,129,0,0,4,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,72,129,
0,0,8,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,114,129,0,0,
12,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
149,129,0,0,16,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,184,129,
0,0,20,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,219,129,0,0,
24,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
248,129,0,0,28,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,42,130,
0,0,32,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,66,130,0,0,
36,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,130,0,0,40,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,137,130,
0,0,44,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,179,130,0,0,
48,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
220,130,0,0,52,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,5,131,
0,0,56,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,41,131,0,0,
60,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
88,131,0,0,64,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,131,
0,0,68,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,172,131,0,0,
72,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
210,131,0,0,76,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,249,131,
0,0,80,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,25,132,0,0,
84,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
65,132,0,0,88,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,102,132,
0,0,92,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,134,132,0,0,
96,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,132,0,0,100,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,209,132,
0,0,104,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,7,133,0,0,
108,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
57,133,0,0,112,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,105,133,
0,0,116,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,157,133,0,0,
120,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
207,133,0,0,124,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,8,134,
0,0,128,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,58,134,0,0,
132,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
100,134,0,0,136,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,132,134,
0,0,140,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,169,134,0,0,
144,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
206,134,0,0,148,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,243,134,
0,0,152,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,22,135,0,0,
156,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
57,135,0,0,160,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,96,135,
0,0,164,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,147,135,0,0,
168,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
199,135,0,0,172,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,254,135,
0,0,176,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,38,136,0,0,
180,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
88,136,0,0,184,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,136,
0,0,188,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,179,136,0,0,
192,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
239,136,0,0,196,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,31,137,
0,0,200,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,79,137,0,0,
204,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
114,137,0,0,208,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,154,137,
0,0,212,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,195,137,0,0,
216,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
224,137,0,0,220,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,255,137,
0,0,224,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,28,138,0,0,
228,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
57,138,0,0,232,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,95,138,
0,0,236,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,133,138,0,0,
240,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,138,0,0,244,3,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,209,138,
0,0,248,3,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,235,138,0,0,
252,3,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
7,139,0,0,0,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,40,139,
0,0,4,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,72,139,0,0,
8,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
119,139,0,0,12,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,156,139,
0,0,16,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,199,139,0,0,
20,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
236,139,0,0,24,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,25,140,
0,0,28,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,62,140,0,0,
32,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
95,140,0,0,36,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,136,140,
0,0,40,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,189,140,0,0,
44,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
243,140,0,0,48,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,10,141,
0,0,52,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,36,141,0,0,
56,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
57,141,0,0,60,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,79,141,
0,0,64,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,107,141,0,0,
68,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
144,141,0,0,72,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,185,141,
0,0,76,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,222,141,0,0,
80,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
2,142,0,0,84,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,38,142,
0,0,88,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,79,142,0,0,
92,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,142,0,0,96,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,137,142,
0,0,100,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,169,142,0,0,
104,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
196,142,0,0,108,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,142,
0,0,112,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,243,142,0,0,
116,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
22,143,0,0,120,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,60,143,
0,0,124,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,97,143,0,0,
128,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
138,143,0,0,132,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,180,143,
0,0,136,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,205,143,0,0,
140,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
241,143,0,0,144,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,28,144,
0,0,148,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,72,144,0,0,
152,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
109,144,0,0,156,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,134,144,
0,0,160,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,166,144,0,0,
164,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
193,144,0,0,168,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,214,144,
0,0,172,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,251,144,0,0,
176,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
20,145,0,0,180,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,53,145,
0,0,184,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,80,145,0,0,
188,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
116,145,0,0,192,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,152,145,
0,0,196,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,188,145,0,0,
200,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
222,145,0,0,204,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,1,146,
0,0,208,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,33,146,0,0,
212,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
63,146,0,0,216,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,91,146,
0,0,220,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,122,146,0,0,
224,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
161,146,0,0,228,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,200,146,
0,0,232,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,246,146,0,0,
236,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
39,147,0,0,240,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,147,
0,0,244,4,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,120,147,0,0,
248,4,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
153,147,0,0,252,4,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,192,147,
0,0,0,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,235,147,0,0,
4,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
31,148,0,0,8,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,74,148,
0,0,12,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,120,148,0,0,
16,5,0,0,4,0,
0,0,2,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
159,148,0,0,20,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,192,148,
0,0,24,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,227,148,0,0,
28,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
6,149,0,0,32,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,47,149,
0,0,36,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,149,0,0,
40,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
115,149,0,0,44,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,153,149,
0,0,48,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,200,149,0,0,
52,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
247,149,0,0,56,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,23,150,
0,0,60,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,56,150,0,0,
64,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
97,150,0,0,68,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,133,150,
0,0,72,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,174,150,0,0,
76,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
202,150,0,0,80,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,230,150,
0,0,84,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,11,151,0,0,
88,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
48,151,0,0,92,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,84,151,
0,0,96,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,119,151,0,0,
100,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
155,151,0,0,104,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,201,151,
0,0,108,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,228,151,0,0,
112,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
7,152,0,0,116,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,40,152,
0,0,120,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,78,152,0,0,
124,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
117,152,0,0,128,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,155,152,
0,0,132,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,198,152,0,0,
136,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
239,152,0,0,140,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,9,153,
0,0,144,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,50,153,0,0,
148,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
77,153,0,0,152,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,107,153,
0,0,156,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,140,153,0,0,
160,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,153,0,0,164,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,202,153,
0,0,168,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,229,153,0,0,
172,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
0,154,0,0,176,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,30,154,
0,0,180,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,64,154,0,0,
184,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
95,154,0,0,188,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,135,154,
0,0,192,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,159,154,0,0,
196,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
185,154,0,0,200,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,154,
0,0,204,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,241,154,0,0,
208,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
9,155,0,0,212,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,31,155,
0,0,216,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,49,155,0,0,
220,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
75,155,0,0,224,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,100,155,
0,0,228,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,125,155,0,0,
232,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
145,155,0,0,236,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,187,155,
0,0,240,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,230,155,0,0,
244,5,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
14,156,0,0,248,5,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,39,156,
0,0,252,5,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,71,156,0,0,
0,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
95,156,0,0,4,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,121,156,
0,0,8,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,155,156,0,0,
12,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
182,156,0,0,16,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,208,156,
0,0,20,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,244,156,0,0,
24,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
12,157,0,0,28,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,48,157,
0,0,32,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,81,157,0,0,
36,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
101,157,0,0,40,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,123,157,
0,0,44,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,143,157,0,0,
48,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
163,157,0,0,52,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,187,157,
0,0,56,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,223,157,0,0,
60,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
4,158,0,0,64,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,43,158,
0,0,68,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,84,158,0,0,
72,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
126,158,0,0,76,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,161,158,
0,0,80,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,198,158,0,0,
84,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
233,158,0,0,88,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,12,159,
0,0,92,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,35,159,0,0,
96,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
54,159,0,0,100,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,81,159,
0,0,104,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,107,159,0,0,
108,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
133,159,0,0,112,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,154,159,
0,0,116,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,197,159,0,0,
120,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
241,159,0,0,124,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,26,160,
0,0,128,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,52,160,0,0,
132,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
85,160,0,0,136,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,110,160,
0,0,140,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,137,160,0,0,
144,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,160,0,0,148,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,200,160,
0,0,152,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,227,160,0,0,
156,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
8,161,0,0,160,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,33,161,
0,0,164,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,70,161,0,0,
168,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
104,161,0,0,172,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,125,161,
0,0,176,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,148,161,0,0,
180,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
169,161,0,0,184,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,190,161,
0,0,188,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,227,161,0,0,
192,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
253,161,0,0,196,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,19,162,
0,0,200,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,49,162,0,0,
204,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
78,162,0,0,208,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,107,162,
0,0,212,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,131,162,0,0,
216,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
177,162,0,0,220,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,224,162,
0,0,224,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,163,0,0,
228,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
41,163,0,0,232,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,77,163,
0,0,236,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,105,163,0,0,
240,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
135,163,0,0,244,6,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,173,163,
0,0,248,6,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,163,0,0,
252,6,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
234,163,0,0,0,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,18,164,
0,0,4,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,46,164,0,0,
8,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
86,164,0,0,12,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,123,164,
0,0,16,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,147,164,0,0,
20,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,164,0,0,24,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,197,164,
0,0,28,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,221,164,0,0,
32,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
5,165,0,0,36,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,34,165,
0,0,40,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,59,165,0,0,
44,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
92,165,0,0,48,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,124,165,
0,0,52,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,156,165,0,0,
56,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
183,165,0,0,60,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,232,165,
0,0,64,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,26,166,0,0,
68,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
73,166,0,0,72,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,105,166,
0,0,76,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,144,166,0,0,
80,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
175,166,0,0,84,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,208,166,
0,0,88,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,249,166,0,0,
92,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
27,167,0,0,96,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,60,167,
0,0,100,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,167,0,0,
104,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
134,167,0,0,108,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,177,167,
0,0,112,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,217,167,0,0,
116,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
244,167,0,0,120,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,17,168,
0,0,124,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,168,0,0,
128,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
71,168,0,0,132,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,114,168,
0,0,136,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,137,168,0,0,
140,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
163,168,0,0,144,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,194,168,
0,0,148,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,228,168,0,0,
152,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
253,168,0,0,156,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,18,169,
0,0,160,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,47,169,0,0,
164,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
75,169,0,0,168,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,169,
0,0,172,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,126,169,0,0,
176,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
171,169,0,0,180,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,217,169,
0,0,184,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,170,0,0,
188,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
32,170,0,0,192,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,67,170,
0,0,196,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,94,170,0,0,
200,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
123,170,0,0,204,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,160,170,
0,0,208,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,190,170,0,0,
212,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
219,170,0,0,216,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,2,171,
0,0,220,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,29,171,0,0,
224,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,171,0,0,228,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,104,171,
0,0,232,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,127,171,0,0,
236,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
152,171,0,0,240,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,175,171,
0,0,244,7,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,198,171,0,0,
248,7,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
237,171,0,0,252,7,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,10,172,
0,0,0,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,35,172,0,0,
4,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,172,0,0,8,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,100,172,
0,0,12,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,132,172,0,0,
16,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
159,172,0,0,20,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,208,172,
0,0,24,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,2,173,0,0,
28,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
49,173,0,0,32,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,81,173,
0,0,36,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,120,173,0,0,
40,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
151,173,0,0,44,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,184,173,
0,0,48,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,225,173,0,0,
52,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
3,174,0,0,56,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,36,174,
0,0,60,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,79,174,0,0,
64,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
110,174,0,0,68,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,153,174,
0,0,72,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,193,174,0,0,
76,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
220,174,0,0,80,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,249,174,
0,0,84,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,175,0,0,
88,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
47,175,0,0,92,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,90,175,
0,0,96,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,113,175,0,0,
100,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
132,175,0,0,104,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,159,175,
0,0,108,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,185,175,0,0,
112,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
211,175,0,0,116,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,232,175,
0,0,120,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,19,176,0,0,
124,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
63,176,0,0,128,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,104,176,
0,0,132,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,130,176,0,0,
136,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
163,176,0,0,140,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,188,176,
0,0,144,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,215,176,0,0,
148,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
250,176,0,0,152,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,22,177,
0,0,156,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,49,177,0,0,
160,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
86,177,0,0,164,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,111,177,
0,0,168,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,148,177,0,0,
172,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
182,177,0,0,176,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,203,177,
0,0,180,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,226,177,0,0,
184,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
247,177,0,0,188,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,12,178,
0,0,192,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,39,178,0,0,
196,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
76,178,0,0,200,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,106,178,
0,0,204,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,141,178,0,0,
208,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
177,178,0,0,212,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,210,178,
0,0,216,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,246,178,0,0,
220,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
24,179,0,0,224,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,52,179,
0,0,228,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,84,179,0,0,
232,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
118,179,0,0,236,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,156,179,
0,0,240,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,196,179,0,0,
244,8,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
235,179,0,0,248,8,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,11,180,
0,0,252,8,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,40,180,0,0,
0,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
68,180,0,0,4,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,96,180,
0,0,8,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,126,180,0,0,
12,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
149,180,0,0,16,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,176,180,
0,0,20,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,206,180,0,0,
24,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
233,180,0,0,28,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,8,181,
0,0,32,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,41,181,0,0,
36,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
74,181,0,0,40,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,109,181,
0,0,44,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,143,181,0,0,
48,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
181,181,0,0,52,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,200,181,
0,0,56,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,217,181,0,0,
60,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
232,181,0,0,64,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,10,182,
0,0,68,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,24,182,0,0,
72,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
42,182,0,0,76,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,61,182,
0,0,80,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,80,182,0,0,
84,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
99,182,0,0,88,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,116,182,
0,0,92,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,129,182,0,0,
96,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
143,182,0,0,100,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,157,182,
0,0,104,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,169,182,0,0,
108,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
182,182,0,0,112,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,200,182,
0,0,116,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,218,182,0,0,
120,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
234,182,0,0,124,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,246,182,
0,0,128,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,1,183,0,0,
132,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
37,183,0,0,136,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,75,183,
0,0,140,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,115,183,0,0,
144,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
162,183,0,0,148,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,216,183,
0,0,152,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,243,183,0,0,
156,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
9,184,0,0,160,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,31,184,
0,0,164,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,48,184,0,0,
168,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
63,184,0,0,172,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,78,184,
0,0,176,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,91,184,0,0,
180,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
105,184,0,0,184,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,118,184,
0,0,188,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,131,184,0,0,
192,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
146,184,0,0,196,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,165,184,
0,0,200,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,185,184,0,0,
204,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
198,184,0,0,208,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,215,184,
0,0,212,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,226,184,0,0,
216,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
243,184,0,0,220,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,4,185,
0,0,224,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,20,185,0,0,
228,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
36,185,0,0,232,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,47,185,
0,0,236,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,64,185,0,0,
240,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
80,185,0,0,244,9,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,93,185,
0,0,248,9,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,113,185,0,0,
252,9,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
126,185,0,0,0,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,140,185,
0,0,4,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,152,185,0,0,
8,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,185,0,0,12,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,189,185,
0,0,16,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,209,185,0,0,
20,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
224,185,0,0,24,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,239,185,
0,0,28,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,255,185,0,0,
32,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
15,186,0,0,36,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,26,186,
0,0,40,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,42,186,0,0,
44,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
62,186,0,0,48,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,76,186,
0,0,52,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,94,186,0,0,
56,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
109,186,0,0,60,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,121,186,
0,0,64,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,138,186,0,0,
68,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
154,186,0,0,72,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,171,186,
0,0,76,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,187,186,0,0,
80,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
216,186,0,0,84,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,232,186,
0,0,88,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,249,186,0,0,
92,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
11,187,0,0,96,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,27,187,
0,0,100,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,44,187,0,0,
104,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
61,187,0,0,108,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,187,
0,0,112,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,94,187,0,0,
116,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,187,0,0,120,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,126,187,
0,0,124,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,145,187,0,0,
128,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
173,187,0,0,132,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,187,187,
0,0,136,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,202,187,0,0,
140,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
217,187,0,0,144,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,232,187,
0,0,148,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,248,187,0,0,
152,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
8,188,0,0,156,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,24,188,
0,0,160,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,43,188,0,0,
164,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
58,188,0,0,168,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,73,188,
0,0,172,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,92,188,0,0,
176,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,188,0,0,180,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,129,188,
0,0,184,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,146,188,0,0,
188,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
163,188,0,0,192,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,186,188,
0,0,196,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,188,0,0,
200,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
225,188,0,0,204,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,244,188,
0,0,208,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,10,189,0,0,
212,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
26,189,0,0,216,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,43,189,
0,0,220,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,59,189,0,0,
224,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
75,189,0,0,228,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,91,189,
0,0,232,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,107,189,0,0,
236,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
123,189,0,0,240,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,139,189,
0,0,244,10,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,155,189,0,0,
248,10,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
171,189,0,0,252,10,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,185,189,
0,0,0,11,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,199,189,0,0,
4,11,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
213,189,0,0,8,11,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,223,189,
0,0,12,11,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,235,189,0,0,
16,11,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
254,189,0,0,20,11,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,17,190,
0,0,24,11,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,36,190,0,0,
28,11,0,0,4,0,
0,0,0,0,0,0,
40,109,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
55,190,0,0,32,11,
0,0,4,0,0,0,
0,0,0,0,40,109,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,77,190,
0,0,36,11,0,0,
4,0,0,0,0,0,
0,0,40,109,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
167,107,0,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,230,107,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,79,
114,105,103,105,110,97,
108,70,101,101,100,98,
97,99,107,83,105,122,
101,0,103,108,111,98,
97,108,95,79,117,116,
112,117,116,83,105,122,
101,0,103,108,111,98,
97,108,95,70,105,110,
97,108,86,105,101,119,
112,111,114,116,83,105,
122,101,0,103,108,111,
98,97,108,95,68,101,
114,101,122,101,100,80,
97,115,115,83,105,122,
101,0,103,108,111,98,
97,108,95,70,114,97,
109,101,68,105,114,101,
99,116,105,111,110,0,
105,110,116,0,0,0,
2,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
156,108,0,0,103,108,
111,98,97,108,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
214,108,0,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,83,
79,76,85,84,73,79,
78,95,68,69,66,85,
71,95,79,78,0,102,
108,111,97,116,0,171,
171,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,31,109,
0,0,103,108,111,98,
97,108,95,72,83,77,
95,83,73,78,68,69,
78,95,66,79,82,68,
69,82,95,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,78,68,69,78,95,
66,79,82,68,69,82,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,83,73,78,68,
69,78,95,66,79,82,
68,69,82,95,66,82,
73,71,72,84,78,69,
83,83,0,103,108,111,
98,97,108,95,72,83,
77,95,83,73,78,68,
69,78,95,65,77,66,
73,69,78,84,95,76,
73,71,72,84,73,78,
71,0,103,108,111,98,
97,108,95,72,83,77,
95,83,73,78,68,69,
78,95,66,79,82,68,
69,82,95,84,72,73,
67,75,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,73,78,68,69,78,
95,66,79,82,68,69,
82,95,69,77,80,84,
89,95,84,85,66,69,
95,67,79,77,80,69,
78,83,65,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,67,72,69,
95,71,82,65,80,72,
73,67,83,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,67,72,69,95,
85,80,68,65,84,69,
95,73,78,68,73,67,
65,84,79,82,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,71,76,79,
66,65,76,95,71,82,
65,80,72,73,67,83,
95,66,82,73,71,72,
84,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
84,65,84,73,67,95,
76,65,89,69,82,83,
95,71,65,77,77,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,95,76,73,71,72,
84,73,78,71,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,49,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,95,76,73,
71,72,84,73,78,71,
95,83,87,65,80,95,
73,77,65,71,69,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,49,
95,72,85,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,49,
95,83,65,84,85,82,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,86,65,76,85,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,49,95,67,79,
78,84,82,65,83,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,49,95,83,67,65,
76,69,95,75,69,69,
80,95,65,83,80,69,
67,84,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,49,95,83,
67,65,76,69,95,73,
78,72,69,82,73,84,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,49,95,83,67,
65,76,69,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,82,79,84,65,
84,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,77,66,73,
69,78,84,49,95,77,
73,82,82,79,82,95,
72,79,82,90,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,49,
95,80,79,83,95,73,
78,72,69,82,73,84,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
49,95,80,79,83,73,
84,73,79,78,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,49,95,80,79,83,
73,84,73,79,78,95,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,49,95,68,73,
84,72,69,82,73,78,
71,95,83,65,77,80,
76,69,83,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,50,95,
72,85,69,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,50,95,
83,65,84,85,82,65,
84,73,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,86,65,76,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,50,95,67,79,78,
84,82,65,83,84,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
50,95,83,67,65,76,
69,95,75,69,69,80,
95,65,83,80,69,67,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,50,95,83,67,
65,76,69,95,73,78,
72,69,82,73,84,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,77,66,73,69,78,
84,50,95,83,67,65,
76,69,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,82,79,84,65,84,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,65,77,66,73,69,
78,84,50,95,77,73,
82,82,79,82,95,72,
79,82,90,0,103,108,
111,98,97,108,95,72,
83,77,95,65,77,66,
73,69,78,84,50,95,
80,79,83,95,73,78,
72,69,82,73,84,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,65,77,
66,73,69,78,84,50,
95,80,79,83,73,84,
73,79,78,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,65,
77,66,73,69,78,84,
50,95,80,79,83,73,
84,73,79,78,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
86,73,69,87,80,79,
82,84,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,86,73,69,87,80,
79,82,84,95,80,79,
83,73,84,73,79,78,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,86,73,69,87,
80,79,82,84,95,80,
79,83,73,84,73,79,
78,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,86,73,69,
87,80,79,82,84,95,
90,79,79,77,95,77,
65,83,75,0,103,108,
111,98,97,108,95,72,
83,77,95,70,76,73,
80,95,86,73,69,87,
80,79,82,84,95,86,
69,82,84,73,67,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,70,76,73,80,95,
86,73,69,87,80,79,
82,84,95,72,79,82,
73,90,79,78,84,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,70,76,73,80,95,
67,79,82,69,95,86,
69,82,84,73,67,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,70,76,73,80,95,
67,79,82,69,95,72,
79,82,73,90,79,78,
84,65,76,0,103,108,
111,98,97,108,95,72,
83,77,95,82,79,84,
65,84,69,95,67,79,
82,69,95,73,77,65,
71,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,83,80,69,
67,84,95,82,65,84,
73,79,95,79,82,73,
69,78,84,65,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,65,83,80,69,
67,84,95,82,65,84,
73,79,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,65,83,80,69,67,
84,95,82,65,84,73,
79,95,69,88,80,76,
73,67,73,84,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,95,83,67,65,76,
69,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
73,78,84,95,83,67,
65,76,69,95,77,85,
76,84,73,80,76,69,
95,79,70,70,83,69,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,95,83,
67,65,76,69,95,77,
85,76,84,73,80,76,
69,95,79,70,70,83,
69,84,95,76,79,78,
71,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,95,83,
67,65,76,69,95,77,
65,88,95,72,69,73,
71,72,84,0,103,108,
111,98,97,108,95,72,
83,77,95,86,69,82,
84,73,67,65,76,95,
80,82,69,83,69,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
78,79,78,95,73,78,
84,69,71,69,82,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,85,
83,69,95,80,72,89,
83,73,67,65,76,95,
83,73,90,69,95,70,
79,82,95,78,79,78,
95,73,78,84,69,71,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,80,72,89,83,
73,67,65,76,95,77,
79,78,73,84,79,82,
95,65,83,80,69,67,
84,95,82,65,84,73,
79,0,103,108,111,98,
97,108,95,72,83,77,
95,80,72,89,83,73,
67,65,76,95,77,79,
78,73,84,79,82,95,
68,73,65,71,79,78,
65,76,95,83,73,90,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,80,72,89,83,73,
67,65,76,95,83,73,
77,95,84,85,66,69,
95,68,73,65,71,79,
78,65,76,95,83,73,
90,69,0,103,108,111,
98,97,108,95,72,83,
77,95,85,83,69,95,
73,77,65,71,69,95,
70,79,82,95,80,76,
65,67,69,77,69,78,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,80,76,65,67,69,
77,69,78,84,95,73,
77,65,71,69,95,85,
83,69,95,72,79,82,
73,90,79,78,84,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,80,76,65,67,69,
77,69,78,84,95,73,
77,65,71,69,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,78,79,78,
95,73,78,84,69,71,
69,82,95,83,67,65,
76,69,95,79,70,70,
83,69,84,0,103,108,
111,98,97,108,95,72,
83,77,95,85,83,69,
95,83,78,65,80,95,
84,79,95,67,76,79,
83,69,83,84,95,73,
78,84,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,83,78,65,80,
95,84,79,95,67,76,
79,83,69,83,84,95,
73,78,84,95,83,67,
65,76,69,95,84,79,
76,69,82,65,78,67,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,83,67,82,69,69,
78,95,80,79,83,73,
84,73,79,78,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,67,82,69,69,78,
95,80,79,83,73,84,
73,79,78,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
82,79,80,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,82,79,80,
95,80,69,82,67,69,
78,84,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,67,82,79,80,95,
80,69,82,67,69,78,
84,95,84,79,80,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
82,79,80,95,80,69,
82,67,69,78,84,95,
66,79,84,84,79,77,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,82,79,80,95,80,
69,82,67,69,78,84,
95,76,69,70,84,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
82,79,80,95,80,69,
82,67,69,78,84,95,
82,73,71,72,84,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
82,79,80,95,66,76,
65,67,75,95,84,72,
82,69,83,72,79,76,
68,0,103,108,111,98,
97,108,95,72,83,77,
95,83,67,65,78,76,
73,78,69,95,68,73,
82,69,67,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,67,79,82,69,95,
82,69,83,95,83,65,
77,80,76,73,78,71,
95,77,85,76,84,95,
83,67,65,78,76,73,
78,69,95,68,73,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,79,87,78,83,65,
77,80,76,69,95,66,
76,85,82,95,83,67,
65,78,76,73,78,69,
95,68,73,82,0,103,
108,111,98,97,108,95,
72,83,77,95,67,79,
82,69,95,82,69,83,
95,83,65,77,80,76,
73,78,71,95,77,85,
76,84,95,79,80,80,
79,83,73,84,69,95,
68,73,82,0,103,108,
111,98,97,108,95,72,
83,77,95,68,79,87,
78,83,65,77,80,76,
69,95,66,76,85,82,
95,79,80,80,79,83,
73,84,69,95,68,73,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,67,79,82,69,95,
82,69,83,95,83,65,
77,80,76,73,78,71,
95,83,72,73,70,84,
95,79,80,80,79,83,
73,84,69,95,68,73,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,69,82,
76,65,67,69,95,84,
82,73,71,71,69,82,
95,82,69,83,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,69,82,76,65,67,
69,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
73,78,84,69,82,76,
65,67,69,95,69,70,
70,69,67,84,95,83,
77,79,79,84,72,78,
69,83,83,95,73,78,
84,69,82,83,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,69,82,76,65,67,
69,95,83,67,65,78,
76,73,78,69,95,69,
70,70,69,67,84,0,
103,108,111,98,97,108,
95,105,115,99,97,110,
115,0,103,108,111,98,
97,108,95,118,103,97,
95,109,111,100,101,0,
103,108,111,98,97,108,
95,104,105,115,99,97,
110,0,103,108,111,98,
97,108,95,72,83,77,
95,70,65,75,69,95,
83,67,65,78,76,73,
78,69,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,70,65,75,69,95,
83,67,65,78,76,73,
78,69,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,70,65,
75,69,95,83,67,65,
78,76,73,78,69,95,
82,69,83,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,70,65,75,69,
95,83,67,65,78,76,
73,78,69,95,82,69,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,70,65,75,69,95,
83,67,65,78,76,73,
78,69,95,73,78,84,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,65,75,69,95,83,
67,65,78,76,73,78,
69,95,82,79,76,76,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,65,75,69,95,83,
67,65,78,76,73,78,
69,95,67,85,82,86,
65,84,85,82,69,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
65,75,69,95,83,67,
65,78,76,73,78,69,
95,66,82,73,71,72,
84,78,69,83,83,95,
67,85,84,79,70,70,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,85,65,76,83,67,
82,69,69,78,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,85,65,
76,83,67,82,69,69,
78,95,67,79,82,69,
95,73,77,65,71,69,
95,83,80,76,73,84,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
85,65,76,83,67,82,
69,69,78,95,67,79,
82,69,95,73,77,65,
71,69,95,83,87,65,
80,95,83,67,82,69,
69,78,83,0,103,108,
111,98,97,108,95,72,
83,77,95,68,85,65,
76,83,67,82,69,69,
78,95,67,79,82,69,
95,73,77,65,71,69,
95,83,80,76,73,84,
95,79,70,70,83,69,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,68,85,65,76,83,
67,82,69,69,78,95,
86,73,69,87,80,79,
82,84,95,83,80,76,
73,84,95,76,79,67,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
85,65,76,83,67,82,
69,69,78,95,83,72,
73,70,84,95,80,79,
83,73,84,73,79,78,
95,87,73,84,72,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
85,65,76,83,67,82,
69,69,78,95,80,79,
83,73,84,73,79,78,
95,79,70,70,83,69,
84,95,66,69,84,87,
69,69,78,95,83,67,
82,69,69,78,83,0,
103,108,111,98,97,108,
95,72,83,77,95,50,
78,68,95,83,67,82,
69,69,78,95,65,83,
80,69,67,84,95,82,
65,84,73,79,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,50,78,68,
95,83,67,82,69,69,
78,95,73,78,68,69,
80,69,78,68,69,78,
84,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,50,78,68,95,83,
67,82,69,69,78,95,
83,67,65,76,69,95,
79,70,70,83,69,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
50,78,68,95,83,67,
82,69,69,78,95,80,
79,83,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,50,78,
68,95,83,67,82,69,
69,78,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,50,78,68,95,
83,67,82,69,69,78,
95,67,82,79,80,95,
80,69,82,67,69,78,
84,95,90,79,79,77,
0,103,108,111,98,97,
108,95,72,83,77,95,
50,78,68,95,83,67,
82,69,69,78,95,67,
82,79,80,95,80,69,
82,67,69,78,84,95,
84,79,80,0,103,108,
111,98,97,108,95,72,
83,77,95,50,78,68,
95,83,67,82,69,69,
78,95,67,82,79,80,
95,80,69,82,67,69,
78,84,95,66,79,84,
84,79,77,0,103,108,
111,98,97,108,95,72,
83,77,95,50,78,68,
95,83,67,82,69,69,
78,95,67,82,79,80,
95,80,69,82,67,69,
78,84,95,76,69,70,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,50,78,68,95,83,
67,82,69,69,78,95,
67,82,79,80,95,80,
69,82,67,69,78,84,
95,82,73,71,72,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,82,86,65,84,
85,82,69,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,85,82,86,
65,84,85,82,69,95,
50,68,95,83,67,65,
76,69,95,76,79,78,
71,95,65,88,73,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,82,86,65,84,
85,82,69,95,50,68,
95,83,67,65,76,69,
95,83,72,79,82,84,
95,65,88,73,83,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
85,82,86,65,84,85,
82,69,95,51,68,95,
82,65,68,73,85,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,82,86,65,84,
85,82,69,95,51,68,
95,86,73,69,87,95,
68,73,83,84,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
82,86,65,84,85,82,
69,95,51,68,95,84,
73,76,84,95,65,78,
71,76,69,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
85,82,86,65,84,85,
82,69,95,51,68,95,
84,73,76,84,95,65,
78,71,76,69,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,82,84,95,67,85,
82,86,65,84,85,82,
69,95,83,67,65,76,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,83,73,71,78,65,
76,95,78,79,73,83,
69,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,83,73,
71,78,65,76,95,78,
79,73,83,69,95,65,
77,79,85,78,84,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,71,78,65,76,95,
78,79,73,83,69,95,
66,76,65,67,75,95,
76,69,86,69,76,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
73,71,78,65,76,95,
78,79,73,83,69,95,
83,73,90,69,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,83,73,71,
78,65,76,95,78,79,
73,83,69,95,83,73,
90,69,95,77,85,76,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,83,73,71,78,65,
76,95,78,79,73,83,
69,95,84,89,80,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,78,84,73,95,70,
76,73,67,75,69,82,
95,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,65,78,84,
73,95,70,76,73,67,
75,69,82,95,84,72,
82,69,83,72,79,76,
68,0,103,108,111,98,
97,108,95,72,83,77,
95,65,66,95,67,79,
77,80,65,82,69,95,
83,72,79,87,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,65,66,95,
67,79,77,80,65,82,
69,95,65,82,69,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
65,66,95,67,79,77,
80,65,82,69,95,70,
82,69,69,90,69,95,
67,82,84,95,84,85,
66,69,0,103,108,111,
98,97,108,95,72,83,
77,95,65,66,95,67,
79,77,80,65,82,69,
95,70,82,69,69,90,
69,95,71,82,65,80,
72,73,67,83,0,103,
108,111,98,97,108,95,
72,83,77,95,65,66,
95,67,79,77,80,65,
82,69,95,83,80,76,
73,84,95,65,82,69,
65,0,103,108,111,98,
97,108,95,72,83,77,
95,65,66,95,67,79,
77,80,65,82,69,95,
83,80,76,73,84,95,
80,79,83,73,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,83,72,79,87,
95,80,65,83,83,95,
73,78,68,69,88,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
72,79,87,95,80,65,
83,83,95,65,76,80,
72,65,0,103,108,111,
98,97,108,95,72,83,
77,95,83,72,79,87,
95,80,65,83,83,95,
65,80,80,76,89,95,
83,67,82,69,69,78,
95,67,79,79,82,68,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,67,82,69,69,78,
95,86,73,71,78,69,
84,84,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,67,82,69,69,78,
95,86,73,71,78,69,
84,84,69,95,68,85,
65,76,83,67,82,69,
69,78,95,86,73,83,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
67,82,69,69,78,95,
86,73,71,78,69,84,
84,69,95,83,84,82,
69,78,71,84,72,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
67,82,69,69,78,95,
86,73,71,78,69,84,
84,69,95,80,79,87,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,83,67,82,69,
69,78,95,86,73,71,
78,69,84,84,69,95,
73,78,95,82,69,70,
76,69,67,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,77,79,78,79,67,
72,82,79,77,69,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,77,79,
78,79,67,72,82,79,
77,69,95,66,82,73,
71,72,84,78,69,83,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,77,79,78,79,67,
72,82,79,77,69,95,
71,65,77,77,65,0,
103,108,111,98,97,108,
95,72,83,77,95,77,
79,78,79,67,72,82,
79,77,69,95,72,85,
69,95,79,70,70,83,
69,84,0,103,108,111,
98,97,108,95,72,83,
77,95,77,79,78,79,
67,72,82,79,77,69,
95,83,65,84,85,82,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,77,
79,78,79,67,72,82,
79,77,69,95,68,85,
65,76,83,67,82,69,
69,78,95,86,73,83,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
67,82,69,69,78,95,
82,69,70,76,69,67,
84,73,79,78,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,83,67,
82,69,69,78,95,82,
69,70,76,69,67,84,
73,79,78,95,80,79,
83,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,83,67,82,
69,69,78,95,82,69,
70,76,69,67,84,73,
79,78,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,68,73,70,70,85,
83,69,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
68,73,70,70,85,83,
69,95,73,77,65,71,
69,95,68,85,65,76,
83,67,82,69,69,78,
95,86,73,83,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,79,80,65,67,
73,84,89,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,68,73,70,70,
85,83,69,95,73,77,
65,71,69,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,68,73,70,
70,85,83,69,95,73,
77,65,71,69,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,68,73,70,70,85,
83,69,95,73,77,65,
71,69,95,67,79,76,
79,82,73,90,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,68,73,70,70,85,
83,69,95,73,77,65,
71,69,95,83,65,84,
85,82,65,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
68,73,70,70,85,83,
69,95,73,77,65,71,
69,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,68,
73,70,70,85,83,69,
95,73,77,65,71,69,
95,71,65,77,77,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,68,
73,70,70,85,83,69,
95,73,77,65,71,69,
95,65,77,66,73,69,
78,84,95,76,73,71,
72,84,73,78,71,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,68,73,
70,70,85,83,69,95,
73,77,65,71,69,95,
65,77,66,73,69,78,
84,50,95,76,73,71,
72,84,73,78,71,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,68,73,
70,70,85,83,69,95,
73,77,65,71,69,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,68,73,
70,70,85,83,69,95,
73,77,65,71,69,95,
83,67,65,76,69,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
68,73,70,70,85,83,
69,95,73,77,65,71,
69,95,82,79,84,65,
84,73,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,69,77,80,
84,89,95,84,72,73,
67,75,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,69,
77,80,84,89,95,84,
72,73,67,75,78,69,
83,83,95,88,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,68,73,70,
70,85,83,69,95,70,
79,82,67,69,95,65,
83,80,69,67,84,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,69,88,
80,76,73,67,73,84,
95,65,83,80,69,67,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,83,67,82,69,69,
78,95,67,79,82,78,
69,82,95,82,65,68,
73,85,83,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,67,79,76,79,
82,69,68,95,71,69,
76,95,73,77,65,71,
69,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,68,85,65,
76,83,67,82,69,69,
78,95,86,73,83,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,77,85,76,
84,73,80,76,89,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,67,
79,76,79,82,69,68,
95,71,69,76,95,73,
77,65,71,69,95,78,
79,82,77,65,76,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,67,
79,76,79,82,69,68,
95,71,69,76,95,73,
77,65,71,69,95,78,
79,82,77,65,76,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,67,79,76,
79,82,69,68,95,71,
69,76,95,73,77,65,
71,69,95,78,79,82,
77,65,76,95,86,73,
71,78,69,84,84,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,67,
79,76,79,82,69,68,
95,71,69,76,95,73,
77,65,71,69,95,84,
82,65,78,83,80,65,
82,69,78,67,89,95,
84,72,82,69,83,72,
79,76,68,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,67,79,76,79,
82,69,68,95,71,69,
76,95,73,77,65,71,
69,95,65,68,68,73,
84,73,86,69,95,65,
77,79,85,78,84,0,
103,108,111,98,97,108,
95,72,83,77,95,83,
72,79,87,95,67,82,
84,95,79,78,95,84,
79,80,95,79,70,95,
67,79,76,79,82,69,
68,95,71,69,76,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,83,72,
65,68,79,87,95,73,
77,65,71,69,95,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,72,65,68,79,87,
95,73,77,65,71,69,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,72,65,68,79,
87,95,73,77,65,71,
69,95,83,67,65,76,
69,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,72,65,68,
79,87,95,73,77,65,
71,69,95,83,67,65,
76,69,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,83,72,65,
68,79,87,95,73,77,
65,71,69,95,80,79,
83,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,72,65,68,
79,87,95,73,77,65,
71,69,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,72,65,68,79,
87,95,67,85,82,86,
65,84,85,82,69,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,67,79,
76,79,82,69,68,95,
71,69,76,95,73,77,
65,71,69,95,65,77,
66,73,69,78,84,95,
76,73,71,72,84,73,
78,71,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,67,79,76,79,82,
69,68,95,71,69,76,
95,73,77,65,71,69,
95,65,77,66,73,69,
78,84,50,95,76,73,
71,72,84,73,78,71,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,67,
79,76,79,82,69,68,
95,71,69,76,95,73,
77,65,71,69,95,70,
65,75,69,95,83,67,
65,78,76,73,78,69,
95,65,77,79,85,78,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
67,79,76,79,82,69,
68,95,71,69,76,95,
73,77,65,71,69,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,67,79,
76,79,82,69,68,95,
71,69,76,95,73,77,
65,71,69,95,70,76,
73,80,95,72,79,82,
73,90,79,78,84,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
67,79,76,79,82,69,
68,95,71,69,76,95,
73,77,65,71,69,95,
70,76,73,80,95,86,
69,82,84,73,67,65,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,84,65,84,73,67,
95,82,69,70,76,69,
67,84,73,79,78,95,
73,77,65,71,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,82,69,70,76,
69,67,84,73,79,78,
95,73,77,65,71,69,
95,68,85,65,76,83,
67,82,69,69,78,95,
86,73,83,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,82,69,70,76,
69,67,84,73,79,78,
95,73,77,65,71,69,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,79,80,65,67,
73,84,89,95,68,73,
70,70,85,83,69,95,
77,85,76,84,73,80,
76,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,66,76,65,67,
75,95,76,69,86,69,
76,0,103,108,111,98,
97,108,95,72,83,77,
95,84,85,66,69,95,
83,84,65,84,73,67,
95,65,77,66,73,69,
78,84,95,76,73,71,
72,84,73,78,71,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,83,84,
65,84,73,67,95,65,
77,66,73,69,78,84,
50,95,76,73,71,72,
84,73,78,71,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,83,84,65,
84,73,67,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,84,65,84,
73,67,95,83,67,65,
76,69,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,83,84,65,
84,73,67,95,80,79,
83,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,84,65,84,
73,67,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,83,84,65,84,73,
67,95,83,72,65,68,
79,87,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,83,84,65,
84,73,67,95,68,73,
84,72,69,82,95,83,
65,77,80,76,69,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,85,66,69,95,83,
84,65,84,73,67,95,
68,73,84,72,69,82,
95,68,73,83,84,65,
78,67,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,83,84,65,84,
73,67,95,68,73,84,
72,69,82,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,67,82,
84,95,66,76,69,78,
68,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,82,84,95,66,76,
69,78,68,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,67,82,
84,95,83,67,82,69,
69,78,95,66,76,69,
78,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,71,76,79,66,65,
76,95,67,79,82,78,
69,82,95,82,65,68,
73,85,83,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,66,76,65,67,
75,95,69,68,71,69,
95,67,79,82,78,69,
82,95,82,65,68,73,
85,83,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,85,66,69,
95,66,76,65,67,75,
95,69,68,71,69,95,
83,72,65,82,80,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,84,85,66,
69,95,66,76,65,67,
75,95,69,68,71,69,
95,67,85,82,86,65,
84,85,82,69,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,85,
66,69,95,66,76,65,
67,75,95,69,68,71,
69,95,84,72,73,67,
75,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
85,66,69,95,66,76,
65,67,75,95,69,68,
71,69,95,84,72,73,
67,75,78,69,83,83,
95,88,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
85,83,69,95,73,78,
68,69,80,69,78,68,
69,78,84,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,73,78,68,69,80,
69,78,68,69,78,84,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,85,83,
69,95,73,78,68,69,
80,69,78,68,69,78,
84,95,67,85,82,86,
65,84,85,82,69,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,73,78,68,
69,80,69,78,68,69,
78,84,95,67,85,82,
86,65,84,85,82,69,
95,83,67,65,76,69,
95,76,79,78,71,95,
65,88,73,83,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,73,78,68,69,
80,69,78,68,69,78,
84,95,67,85,82,86,
65,84,85,82,69,95,
83,67,65,76,69,95,
83,72,79,82,84,95,
65,88,73,83,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,79,80,65,67,
73,84,89,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,87,73,68,
84,72,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
72,69,73,71,72,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,83,67,
65,76,69,95,79,70,
70,83,69,84,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,73,78,78,69,
82,95,67,85,82,86,
65,84,85,82,69,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,73,78,78,
69,82,95,67,79,82,
78,69,82,95,82,65,
68,73,85,83,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,79,85,84,69,
82,95,67,85,82,86,
65,84,85,82,69,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,73,78,78,
69,82,95,69,68,71,
69,95,84,72,73,67,
75,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,73,78,78,
69,82,95,69,68,71,
69,95,83,72,65,82,
80,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,79,85,84,
69,82,95,67,79,82,
78,69,82,95,82,65,
68,73,85,83,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,73,78,78,69,
82,95,69,68,71,69,
95,83,72,65,68,79,
87,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,67,
79,76,79,82,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
67,79,76,79,82,95,
83,65,84,85,82,65,
84,73,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,67,79,76,79,
82,95,86,65,76,85,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,78,
79,73,83,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,90,
76,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,90,76,95,66,82,
73,71,72,84,78,69,
83,83,95,77,85,76,
84,95,84,79,80,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
90,76,95,66,82,73,
71,72,84,78,69,83,
83,95,77,85,76,84,
95,66,79,84,84,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,66,
82,73,71,72,84,78,
69,83,83,95,77,85,
76,84,95,83,73,68,
69,83,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
66,82,73,71,72,84,
78,69,83,83,95,77,
85,76,84,95,83,73,
68,69,95,76,69,70,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,66,
82,73,71,72,84,78,
69,83,83,95,77,85,
76,84,95,83,73,68,
69,95,82,73,71,72,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,66,90,76,95,72,
73,71,72,76,73,71,
72,84,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
73,78,78,69,82,95,
69,68,71,69,95,72,
73,71,72,76,73,71,
72,84,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
65,77,66,73,69,78,
84,95,76,73,71,72,
84,73,78,71,95,77,
85,76,84,73,80,76,
73,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,66,90,76,
95,65,77,66,73,69,
78,84,50,95,76,73,
71,72,84,73,78,71,
95,77,85,76,84,73,
80,76,73,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,85,83,69,
95,73,78,68,69,80,
69,78,68,69,78,84,
95,67,79,76,79,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,82,77,95,67,79,
76,79,82,95,72,85,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,70,82,77,95,67,
79,76,79,82,95,83,
65,84,85,82,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,67,79,76,79,82,
95,86,65,76,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,82,77,95,78,79,
73,83,69,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,79,85,84,69,82,
95,67,85,82,86,65,
84,85,82,69,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,84,72,73,67,
75,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,84,72,73,
67,75,78,69,83,83,
95,83,67,65,76,69,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,70,82,77,95,
79,85,84,69,82,95,
80,79,83,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,73,78,78,
69,82,95,69,68,71,
69,95,84,72,73,67,
75,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,73,78,78,
69,82,95,69,68,71,
69,95,72,73,71,72,
76,73,71,72,84,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,79,85,84,
69,82,95,69,68,71,
69,95,84,72,73,67,
75,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,79,85,84,
69,82,95,69,68,71,
69,95,83,72,65,68,
73,78,71,0,103,108,
111,98,97,108,95,72,
83,77,95,70,82,77,
95,79,85,84,69,82,
95,67,79,82,78,69,
82,95,82,65,68,73,
85,83,0,103,108,111,
98,97,108,95,72,83,
77,95,66,90,76,95,
79,85,84,69,82,95,
80,79,83,73,84,73,
79,78,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,83,72,65,68,
79,87,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,83,72,65,68,
79,87,95,87,73,68,
84,72,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,67,79,
82,78,69,82,95,70,
65,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,67,
79,82,78,69,82,95,
73,78,78,69,82,95,
83,80,82,69,65,68,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,67,79,82,78,
69,82,95,79,85,84,
69,82,95,83,80,82,
69,65,68,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,67,
79,82,78,69,82,95,
82,79,84,65,84,73,
79,78,95,79,70,70,
83,69,84,95,84,79,
80,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,67,79,82,
78,69,82,95,82,79,
84,65,84,73,79,78,
95,79,70,70,83,69,
84,95,66,79,84,84,
79,77,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,67,79,
82,78,69,82,95,83,
80,82,69,65,68,95,
70,65,76,76,79,70,
70,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,67,79,82,
78,69,82,95,70,65,
68,69,95,68,73,83,
84,65,78,67,69,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,71,76,79,66,65,
76,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,71,76,
79,66,65,76,95,71,
65,77,77,65,95,65,
68,74,85,83,84,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,66,69,90,69,76,
95,73,78,78,69,82,
95,69,68,71,69,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,66,69,90,69,
76,95,73,78,78,69,
82,95,69,68,71,69,
95,70,85,76,76,83,
67,82,69,69,78,95,
71,76,79,87,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
70,82,65,77,69,95,
73,78,78,69,82,95,
69,68,71,69,95,65,
77,79,85,78,84,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,70,82,65,77,69,
95,73,78,78,69,82,
95,69,68,71,69,95,
83,72,65,82,80,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,83,
72,79,87,95,84,85,
66,69,95,70,88,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,68,73,82,69,
67,84,95,65,77,79,
85,78,84,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,68,
73,70,70,85,83,69,
68,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,70,85,
76,76,83,67,82,69,
69,78,95,71,76,79,
87,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,70,85,76,
76,83,67,82,69,69,
78,95,71,76,79,87,
95,71,65,77,77,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,70,65,68,69,
95,65,77,79,85,78,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,82,65,68,
73,65,76,95,70,65,
68,69,95,87,73,68,
84,72,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,82,65,
68,73,65,76,95,70,
65,68,69,95,72,69,
73,71,72,84,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
76,65,84,69,82,65,
76,95,79,85,84,69,
82,95,70,65,68,69,
95,80,79,83,73,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,76,
65,84,69,82,65,76,
95,79,85,84,69,82,
95,70,65,68,69,95,
68,73,83,84,65,78,
67,69,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,78,79,
73,83,69,95,65,77,
79,85,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,82,69,
70,76,69,67,84,95,
78,79,73,83,69,95,
83,65,77,80,76,69,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,78,79,73,
83,69,95,83,65,77,
80,76,69,95,68,73,
83,84,65,78,67,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,66,76,85,82,
95,78,85,77,95,83,
65,77,80,76,69,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
82,69,70,76,69,67,
84,95,66,76,85,82,
95,70,65,76,76,79,
70,70,95,68,73,83,
84,65,78,67,69,0,
103,108,111,98,97,108,
95,72,83,77,95,82,
69,70,76,69,67,84,
95,66,76,85,82,95,
77,73,78,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,66,
76,85,82,95,77,65,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,70,76,69,
67,84,95,77,65,83,
75,95,73,77,65,71,
69,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,77,65,
83,75,95,70,79,76,
76,79,87,95,76,65,
89,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,77,
65,83,75,95,70,79,
76,76,79,87,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,77,
65,83,75,95,66,82,
73,71,72,84,78,69,
83,83,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,77,65,
83,75,95,66,76,65,
67,75,95,76,69,86,
69,76,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,77,65,
83,75,95,77,73,80,
77,65,80,80,73,78,
71,95,66,76,69,78,
68,95,66,73,65,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
71,76,65,83,83,95,
66,79,82,68,69,82,
95,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,82,69,70,
76,69,67,84,95,86,
73,71,78,69,84,84,
69,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,82,69,70,76,
69,67,84,95,86,73,
71,78,69,84,84,69,
95,83,73,90,69,0,
103,108,111,98,97,108,
95,72,83,77,95,80,
79,84,65,84,79,95,
83,72,79,87,95,66,
71,95,79,86,69,82,
95,83,67,82,69,69,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,80,79,84,65,84,
79,95,67,79,76,79,
82,73,90,69,95,67,
82,84,95,87,73,84,
72,95,66,71,0,103,
108,111,98,97,108,95,
72,83,77,95,80,79,
84,65,84,79,95,67,
79,76,79,82,73,90,
69,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
83,84,65,78,68,65,
82,68,95,68,69,67,
65,76,95,83,67,65,
76,69,95,87,73,84,
72,95,70,82,65,77,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,83,84,65,78,68,
65,82,68,95,84,79,
80,95,83,67,65,76,
69,95,87,73,84,72,
95,70,82,65,77,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,76,65,89,
69,82,95,79,82,68,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,86,73,69,87,
80,79,82,84,95,86,
73,71,78,69,84,84,
69,95,76,65,89,69,
82,95,79,82,68,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,67,82,84,95,76,
65,89,69,82,95,79,
82,68,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,76,
65,89,69,82,95,79,
82,68,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,76,65,89,69,
82,95,79,82,68,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,76,
65,89,69,82,95,79,
82,68,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,76,65,
89,69,82,95,79,82,
68,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,76,65,89,69,82,
95,79,82,68,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,76,65,
89,69,82,95,79,82,
68,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,67,85,84,
79,85,84,95,65,83,
80,69,67,84,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,67,85,84,
79,85,84,95,69,88,
80,76,73,67,73,84,
95,65,83,80,69,67,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,67,85,84,79,85,
84,95,70,79,76,76,
79,87,95,76,65,89,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,67,85,84,79,
85,84,95,70,79,76,
76,79,87,95,70,85,
76,76,95,85,83,69,
83,95,90,79,79,77,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,84,79,85,84,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,85,84,79,85,84,
95,83,67,65,76,69,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,67,85,84,79,
85,84,95,67,79,82,
78,69,82,95,82,65,
68,73,85,83,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
84,79,85,84,95,80,
79,83,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,67,85,
84,79,85,84,95,80,
79,83,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,67,
79,76,79,82,73,90,
69,95,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,83,65,84,85,82,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,66,
71,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,71,65,77,
77,65,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,65,
77,66,73,69,78,84,
95,76,73,71,72,84,
73,78,71,95,77,85,
76,84,73,80,76,73,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,65,
77,66,73,69,78,84,
50,95,76,73,71,72,
84,73,78,71,95,77,
85,76,84,73,80,76,
73,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,66,71,95,
65,80,80,76,89,95,
65,77,66,73,69,78,
84,95,73,78,95,65,
68,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,66,76,
69,78,68,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,83,
79,85,82,67,69,95,
77,65,84,84,69,95,
84,89,80,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,77,65,83,75,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,67,85,84,79,85,
84,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,68,85,65,
76,83,67,82,69,69,
78,95,86,73,83,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,70,79,76,76,79,
87,95,76,65,89,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,66,71,95,70,79,
76,76,79,87,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,71,95,
70,79,76,76,79,87,
95,70,85,76,76,95,
85,83,69,83,95,90,
79,79,77,0,103,108,
111,98,97,108,95,72,
83,77,95,66,71,95,
70,73,76,76,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,66,71,95,
83,80,76,73,84,95,
80,82,69,83,69,82,
86,69,95,67,69,78,
84,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,66,71,95,
83,80,76,73,84,95,
82,69,80,69,65,84,
95,87,73,68,84,72,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,83,67,65,
76,69,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,83,
67,65,76,69,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
66,71,95,80,79,83,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,66,71,95,80,
79,83,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,87,82,65,80,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,66,71,
95,77,73,80,77,65,
80,80,73,78,71,95,
66,76,69,78,68,95,
66,73,65,83,0,103,
108,111,98,97,108,95,
72,83,77,95,86,73,
69,87,80,79,82,84,
95,86,73,71,78,69,
84,84,69,95,79,80,
65,67,73,84,89,0,
103,108,111,98,97,108,
95,72,83,77,95,86,
73,69,87,80,79,82,
84,95,86,73,71,78,
69,84,84,69,95,77,
65,83,75,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,86,73,69,87,
80,79,82,84,95,86,
73,71,78,69,84,84,
69,95,67,85,84,79,
85,84,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,86,73,69,87,80,
79,82,84,95,86,73,
71,78,69,84,84,69,
95,70,79,76,76,79,
87,95,76,65,89,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,86,73,69,87,80,
79,82,84,95,86,73,
71,78,69,84,84,69,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
86,73,69,87,80,79,
82,84,95,86,73,71,
78,69,84,84,69,95,
83,67,65,76,69,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,86,73,69,87,80,
79,82,84,95,86,73,
71,78,69,84,84,69,
95,80,79,83,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
86,73,69,87,80,79,
82,84,95,86,73,71,
78,69,84,84,69,95,
80,79,83,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,72,85,69,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,67,79,76,
79,82,73,90,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
83,65,84,85,82,65,
84,73,79,78,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,66,82,73,71,
72,84,78,69,83,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,71,65,
77,77,65,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,65,77,66,73,69,
78,84,95,76,73,71,
72,84,73,78,71,95,
77,85,76,84,73,80,
76,73,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,65,77,66,73,
69,78,84,50,95,76,
73,71,72,84,73,78,
71,95,77,85,76,84,
73,80,76,73,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,65,80,
80,76,89,95,65,77,
66,73,69,78,84,95,
73,78,95,65,68,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,66,76,69,
78,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,76,69,68,95,83,
79,85,82,67,69,95,
77,65,84,84,69,95,
84,89,80,69,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,77,65,83,75,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,67,85,84,
79,85,84,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
68,85,65,76,83,67,
82,69,69,78,95,86,
73,83,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,76,69,68,95,70,
79,76,76,79,87,95,
76,65,89,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,70,79,76,
76,79,87,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
70,79,76,76,79,87,
95,70,85,76,76,95,
85,83,69,83,95,90,
79,79,77,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,70,73,76,76,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,76,69,
68,95,83,80,76,73,
84,95,80,82,69,83,
69,82,86,69,95,67,
69,78,84,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,83,80,76,
73,84,95,82,69,80,
69,65,84,95,87,73,
68,84,72,0,103,108,
111,98,97,108,95,72,
83,77,95,76,69,68,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,69,68,95,83,67,
65,76,69,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,80,79,83,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,76,69,68,95,
80,79,83,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,76,
69,68,95,77,73,80,
77,65,80,80,73,78,
71,95,66,76,69,78,
68,95,66,73,65,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,72,85,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,67,79,76,79,82,
73,90,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,83,65,84,85,82,
65,84,73,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,71,
65,77,77,65,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,65,
77,66,73,69,78,84,
95,76,73,71,72,84,
73,78,71,95,77,85,
76,84,73,80,76,73,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,65,77,66,
73,69,78,84,50,95,
76,73,71,72,84,73,
78,71,95,77,85,76,
84,73,80,76,73,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,95,65,80,80,76,
89,95,65,77,66,73,
69,78,84,95,73,78,
95,65,68,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,95,66,76,
69,78,68,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,83,79,85,
82,67,69,95,77,65,
84,84,69,95,84,89,
80,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,77,65,83,
75,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,67,85,84,79,85,
84,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,68,85,65,76,83,
67,82,69,69,78,95,
86,73,83,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,95,70,79,76,
76,79,87,95,76,65,
89,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,95,70,79,
76,76,79,87,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,95,70,79,
76,76,79,87,95,70,
85,76,76,95,85,83,
69,83,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,95,70,73,76,76,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,95,
83,80,76,73,84,95,
80,82,69,83,69,82,
86,69,95,67,69,78,
84,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,95,83,80,
76,73,84,95,82,69,
80,69,65,84,95,87,
73,68,84,72,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,95,83,
67,65,76,69,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,80,79,83,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,80,79,83,95,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
95,77,73,80,77,65,
80,80,73,78,71,95,
66,76,69,78,68,95,
66,73,65,83,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,79,80,65,67,
73,84,89,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,72,85,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,67,79,76,79,
82,73,90,69,95,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,83,
65,84,85,82,65,84,
73,79,78,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,66,82,73,71,72,
84,78,69,83,83,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,71,65,77,
77,65,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
65,77,66,73,69,78,
84,95,76,73,71,72,
84,73,78,71,95,77,
85,76,84,73,80,76,
73,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,65,77,66,73,69,
78,84,50,95,76,73,
71,72,84,73,78,71,
95,77,85,76,84,73,
80,76,73,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,65,80,80,
76,89,95,65,77,66,
73,69,78,84,95,73,
78,95,65,68,68,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,66,76,69,78,
68,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
76,69,68,95,83,79,
85,82,67,69,95,77,
65,84,84,69,95,84,
89,80,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,77,65,83,75,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,67,85,84,79,
85,84,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,68,
85,65,76,83,67,82,
69,69,78,95,86,73,
83,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,86,73,67,69,
76,69,68,95,70,79,
76,76,79,87,95,76,
65,89,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,70,79,76,76,
79,87,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,70,
79,76,76,79,87,95,
70,85,76,76,95,85,
83,69,83,95,90,79,
79,77,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
70,73,76,76,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,86,
73,67,69,76,69,68,
95,83,80,76,73,84,
95,80,82,69,83,69,
82,86,69,95,67,69,
78,84,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,83,80,76,73,
84,95,82,69,80,69,
65,84,95,87,73,68,
84,72,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,86,73,
67,69,76,69,68,95,
83,67,65,76,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,86,73,67,69,76,
69,68,95,83,67,65,
76,69,95,88,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,80,79,83,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,86,73,67,
69,76,69,68,95,80,
79,83,95,89,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
86,73,67,69,76,69,
68,95,77,73,80,77,
65,80,80,73,78,71,
95,66,76,69,78,68,
95,66,73,65,83,0,
103,108,111,98,97,108,
95,72,83,77,95,70,
82,77,95,79,80,65,
67,73,84,89,0,103,
108,111,98,97,108,95,
72,83,77,95,70,82,
77,95,66,76,69,78,
68,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
70,82,77,95,84,69,
88,84,85,82,69,95,
79,80,65,67,73,84,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,70,82,77,95,84,
69,88,84,85,82,69,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,79,
80,65,67,73,84,89,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
72,85,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,67,79,76,
79,82,73,90,69,95,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,83,65,84,85,
82,65,84,73,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,71,65,
77,77,65,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,65,77,66,
73,69,78,84,95,76,
73,71,72,84,73,78,
71,95,77,85,76,84,
73,80,76,73,69,82,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
65,77,66,73,69,78,
84,50,95,76,73,71,
72,84,73,78,71,95,
77,85,76,84,73,80,
76,73,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,65,80,
80,76,89,95,65,77,
66,73,69,78,84,95,
73,78,95,65,68,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,66,
76,69,78,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,68,69,67,
65,76,95,83,79,85,
82,67,69,95,77,65,
84,84,69,95,84,89,
80,69,0,103,108,111,
98,97,108,95,72,83,
77,95,68,69,67,65,
76,95,77,65,83,75,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,67,
85,84,79,85,84,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,68,85,
65,76,83,67,82,69,
69,78,95,86,73,83,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,70,
79,76,76,79,87,95,
76,65,89,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,70,
79,76,76,79,87,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,70,79,
76,76,79,87,95,70,
85,76,76,95,85,83,
69,83,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,70,73,76,76,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,68,69,
67,65,76,95,83,80,
76,73,84,95,80,82,
69,83,69,82,86,69,
95,67,69,78,84,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,83,80,76,73,84,
95,82,69,80,69,65,
84,95,87,73,68,84,
72,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,83,67,65,76,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
83,67,65,76,69,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,68,69,67,65,76,
95,80,79,83,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
68,69,67,65,76,95,
80,79,83,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,68,
69,67,65,76,95,77,
73,80,77,65,80,80,
73,78,71,95,66,76,
69,78,68,95,66,73,
65,83,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
79,80,65,67,73,84,
89,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
67,79,76,79,82,73,
90,69,95,79,78,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,83,65,84,
85,82,65,84,73,79,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,66,
82,73,71,72,84,78,
69,83,83,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,71,65,77,77,65,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,65,77,
66,73,69,78,84,95,
76,73,71,72,84,73,
78,71,95,77,85,76,
84,73,80,76,73,69,
82,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,65,
77,66,73,69,78,84,
50,95,76,73,71,72,
84,73,78,71,95,77,
85,76,84,73,80,76,
73,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,65,80,80,76,89,
95,65,77,66,73,69,
78,84,95,73,78,95,
65,68,68,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
66,76,69,78,68,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,67,65,
66,95,71,76,65,83,
83,95,83,79,85,82,
67,69,95,77,65,84,
84,69,95,84,89,80,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,77,
65,83,75,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
67,85,84,79,85,84,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,68,85,65,
76,83,67,82,69,69,
78,95,86,73,83,95,
77,79,68,69,0,103,
108,111,98,97,108,95,
72,83,77,95,67,65,
66,95,71,76,65,83,
83,95,70,79,76,76,
79,87,95,76,65,89,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
70,79,76,76,79,87,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,70,79,76,
76,79,87,95,70,85,
76,76,95,85,83,69,
83,95,90,79,79,77,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,70,73,
76,76,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,67,65,66,95,71,
76,65,83,83,95,83,
80,76,73,84,95,80,
82,69,83,69,82,86,
69,95,67,69,78,84,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
83,80,76,73,84,95,
82,69,80,69,65,84,
95,87,73,68,84,72,
0,103,108,111,98,97,
108,95,72,83,77,95,
67,65,66,95,71,76,
65,83,83,95,83,67,
65,76,69,0,103,108,
111,98,97,108,95,72,
83,77,95,67,65,66,
95,71,76,65,83,83,
95,83,67,65,76,69,
95,88,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
80,79,83,95,88,0,
103,108,111,98,97,108,
95,72,83,77,95,67,
65,66,95,71,76,65,
83,83,95,80,79,83,
95,89,0,103,108,111,
98,97,108,95,72,83,
77,95,67,65,66,95,
71,76,65,83,83,95,
77,73,80,77,65,80,
80,73,78,71,95,66,
76,69,78,68,95,66,
73,65,83,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,79,80,65,67,73,
84,89,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
72,85,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,67,79,76,79,82,
73,90,69,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,83,65,
84,85,82,65,84,73,
79,78,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
66,82,73,71,72,84,
78,69,83,83,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,71,65,77,77,
65,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,65,
77,66,73,69,78,84,
95,76,73,71,72,84,
73,78,71,95,77,85,
76,84,73,80,76,73,
69,82,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
65,77,66,73,69,78,
84,50,95,76,73,71,
72,84,73,78,71,95,
77,85,76,84,73,80,
76,73,69,82,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,65,80,80,76,
89,95,65,77,66,73,
69,78,84,95,73,78,
95,65,68,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
79,80,95,83,79,85,
82,67,69,95,77,65,
84,84,69,95,84,89,
80,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
77,65,83,75,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,67,85,84,79,85,
84,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,68,85,
65,76,83,67,82,69,
69,78,95,86,73,83,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,84,
79,80,95,70,79,76,
76,79,87,95,76,65,
89,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,70,79,76,76,79,
87,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,70,79,
76,76,79,87,95,70,
85,76,76,95,85,83,
69,83,95,90,79,79,
77,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,70,
73,76,76,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,84,79,80,95,
83,80,76,73,84,95,
80,82,69,83,69,82,
86,69,95,67,69,78,
84,69,82,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,83,80,76,73,84,
95,82,69,80,69,65,
84,95,87,73,68,84,
72,0,103,108,111,98,
97,108,95,72,83,77,
95,84,79,80,95,83,
67,65,76,69,0,103,
108,111,98,97,108,95,
72,83,77,95,84,79,
80,95,83,67,65,76,
69,95,88,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,80,79,83,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,80,79,
83,95,89,0,103,108,
111,98,97,108,95,72,
83,77,95,84,79,80,
95,77,73,82,82,79,
82,95,87,82,65,80,
0,103,108,111,98,97,
108,95,72,83,77,95,
84,79,80,95,77,73,
80,77,65,80,80,73,
78,71,95,66,76,69,
78,68,95,66,73,65,
83,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,78,68,69,
82,95,83,73,77,80,
76,69,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,82,69,78,68,69,
82,95,83,73,77,80,
76,69,95,77,65,83,
75,95,84,89,80,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
76,65,89,69,82,73,
78,71,95,68,69,66,
85,71,95,77,65,83,
75,95,77,79,68,69,
0,103,108,111,98,97,
108,95,72,83,77,95,
73,78,84,82,79,95,
76,79,71,79,95,66,
76,69,78,68,95,77,
79,68,69,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,76,79,71,
79,95,70,76,73,80,
95,86,69,82,84,73,
67,65,76,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,78,79,73,
83,69,95,66,76,69,
78,68,95,77,79,68,
69,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,78,79,73,83,69,
95,72,79,76,68,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,78,
79,73,83,69,95,70,
65,68,69,95,79,85,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,83,79,76,73,68,
95,66,76,65,67,75,
95,72,79,76,68,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,83,
79,76,73,68,95,66,
76,65,67,75,95,70,
65,68,69,95,79,85,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,83,79,76,73,68,
95,67,79,76,79,82,
95,66,76,69,78,68,
95,77,79,68,69,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,76,
79,71,79,95,79,86,
69,82,95,83,79,76,
73,68,95,67,79,76,
79,82,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,76,79,71,79,
95,80,76,65,67,69,
77,69,78,84,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,82,79,95,76,79,
71,79,95,72,69,73,
71,72,84,0,103,108,
111,98,97,108,95,72,
83,77,95,73,78,84,
82,79,95,76,79,71,
79,95,80,79,83,95,
88,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,76,79,71,79,95,
80,79,83,95,89,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,87,
72,69,78,95,84,79,
95,83,72,79,87,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,83,
80,69,69,68,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,82,79,95,76,79,
71,79,95,87,65,73,
84,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,76,79,71,79,95,
70,65,68,69,95,73,
78,0,103,108,111,98,
97,108,95,72,83,77,
95,73,78,84,82,79,
95,76,79,71,79,95,
72,79,76,68,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,82,79,95,76,79,
71,79,95,70,65,68,
69,95,79,85,84,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,83,
79,76,73,68,95,67,
79,76,79,82,95,72,
85,69,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,83,79,76,73,
68,95,67,79,76,79,
82,95,83,65,84,0,
103,108,111,98,97,108,
95,72,83,77,95,73,
78,84,82,79,95,83,
79,76,73,68,95,67,
79,76,79,82,95,86,
65,76,85,69,0,103,
108,111,98,97,108,95,
72,83,77,95,73,78,
84,82,79,95,83,79,
76,73,68,95,67,79,
76,79,82,95,72,79,
76,68,0,103,108,111,
98,97,108,95,72,83,
77,95,73,78,84,82,
79,95,83,79,76,73,
68,95,67,79,76,79,
82,95,70,65,68,69,
95,79,85,84,0,103,
108,111,98,97,108,95,
71,65,77,77,65,95,
73,78,80,85,84,0,
103,108,111,98,97,108,
95,103,97,109,109,97,
95,111,117,116,0,103,
108,111,98,97,108,95,
112,111,115,116,95,98,
114,0,103,108,111,98,
97,108,95,112,111,115,
116,95,98,114,95,97,
102,102,101,99,116,95,
98,108,97,99,107,95,
108,101,118,101,108,0,
103,108,111,98,97,108,
95,109,95,103,108,111,
119,0,103,108,111,98,
97,108,95,109,95,103,
108,111,119,95,108,111,
119,0,103,108,111,98,
97,108,95,109,95,103,
108,111,119,95,104,105,
103,104,0,103,108,111,
98,97,108,95,109,95,
103,108,111,119,95,100,
105,115,116,0,103,108,
111,98,97,108,95,109,
95,103,108,111,119,95,
109,97,115,107,0,103,
108,111,98,97,108,95,
115,109,97,115,107,95,
109,105,116,0,103,108,
111,98,97,108,95,98,
109,97,115,107,0,103,
108,111,98,97,108,95,
98,109,97,115,107,49,
0,103,108,111,98,97,
108,95,104,109,97,115,
107,49,0,103,108,111,
98,97,108,95,103,108,
111,119,0,103,108,111,
98,97,108,95,98,108,
111,111,109,0,103,108,
111,98,97,108,95,109,
97,115,107,95,98,108,
111,111,109,0,103,108,
111,98,97,108,95,98,
108,111,111,109,95,100,
105,115,116,0,103,108,
111,98,97,108,95,104,
97,108,97,116,105,111,
110,0,103,108,111,98,
97,108,95,84,65,84,
69,0,103,108,111,98,
97,108,95,73,79,83,
0,103,108,111,98,97,
108,95,72,83,77,95,
79,86,69,82,83,67,
65,78,95,82,65,83,
84,69,82,95,66,76,
79,79,77,95,79,78,
0,103,108,111,98,97,
108,95,72,83,77,95,
79,86,69,82,83,67,
65,78,95,82,65,83,
84,69,82,95,66,76,
79,79,77,95,77,79,
68,69,0,103,108,111,
98,97,108,95,72,83,
77,95,79,86,69,82,
83,67,65,78,95,82,
65,83,84,69,82,95,
66,76,79,79,77,95,
65,77,79,85,78,84,
0,103,108,111,98,97,
108,95,72,83,77,95,
79,86,69,82,83,67,
65,78,95,82,65,83,
84,69,82,95,66,76,
79,79,77,95,78,69,
85,84,82,65,76,95,
82,65,78,71,69,0,
103,108,111,98,97,108,
95,72,83,77,95,79,
86,69,82,83,67,65,
78,95,82,65,83,84,
69,82,95,66,76,79,
79,77,95,78,69,85,
84,82,65,76,95,82,
65,78,71,69,95,67,
69,78,84,69,82,0,
103,108,111,98,97,108,
95,72,83,77,95,79,
86,69,82,83,67,65,
78,95,65,77,79,85,
78,84,0,103,108,111,
98,97,108,95,72,83,
77,95,79,86,69,82,
83,67,65,78,95,88,
0,103,108,111,98,97,
108,95,72,83,77,95,
79,86,69,82,83,67,
65,78,95,89,0,103,
108,111,98,97,108,95,
112,114,101,115,99,97,
108,101,120,0,103,108,
111,98,97,108,95,99,
95,115,104,97,112,101,
0,103,108,111,98,97,
108,95,115,98,111,114,
100,101,114,0,103,108,
111,98,97,108,95,99,
115,105,122,101,0,103,
108,111,98,97,108,95,
98,115,105,122,101,49,
0,103,108,111,98,97,
108,95,119,97,114,112,
88,0,103,108,111,98,
97,108,95,119,97,114,
112,89,0,103,108,111,
98,97,108,95,103,97,
109,109,97,95,99,0,
103,108,111,98,97,108,
95,98,114,105,103,104,
116,98,111,111,115,116,
0,103,108,111,98,97,
108,95,98,114,105,103,
104,116,98,111,111,115,
116,49,0,103,108,111,
98,97,108,95,99,108,
105,112,115,0,103,108,
111,98,97,108,95,98,
108,101,110,100,77,111,
100,101,0,103,108,111,
98,97,108,95,103,115,
108,0,103,108,111,98,
97,108,95,115,99,97,
110,108,105,110,101,49,
0,103,108,111,98,97,
108,95,115,99,97,110,
108,105,110,101,50,0,
103,108,111,98,97,108,
95,98,101,97,109,95,
109,105,110,0,103,108,
111,98,97,108,95,98,
101,97,109,95,109,97,
120,0,103,108,111,98,
97,108,95,116,100,115,
0,103,108,111,98,97,
108,95,98,101,97,109,
95,115,105,122,101,0,
103,108,111,98,97,108,
95,118,101,114,116,109,
97,115,107,0,103,108,
111,98,97,108,95,115,
99,97,110,115,0,103,
108,111,98,97,108,95,
115,99,97,110,95,102,
97,108,108,111,102,102,
0,103,108,111,98,97,
108,95,115,112,105,107,
101,0,103,108,111,98,
97,108,95,115,115,104,
97,114,112,0,103,108,
111,98,97,108,95,114,
105,110,103,0,103,108,
111,98,97,108,95,110,
111,95,115,99,97,110,
108,105,110,101,115,0,
103,108,111,98,97,108,
95,115,99,97,110,103,
97,109,109,97,0,103,
108,111,98,97,108,95,
114,111,108,108,105,110,
103,95,115,99,97,110,
0,103,108,111,98,97,
108,95,104,95,115,104,
97,114,112,0,103,108,
111,98,97,108,95,115,
95,115,104,97,114,112,
0,103,108,111,98,97,
108,95,115,109,97,114,
116,95,101,105,0,103,
108,111,98,97,108,95,
101,105,95,108,105,109,
105,116,0,103,108,111,
98,97,108,95,115,116,
104,0,103,108,111,98,
97,108,95,98,97,114,
115,112,101,101,100,0,
103,108,111,98,97,108,
95,98,97,114,105,110,
116,101,110,115,105,116,
121,0,103,108,111,98,
97,108,95,98,97,114,
100,105,114,0,103,108,
111,98,97,108,95,115,
104,97,100,111,119,77,
97,115,107,0,103,108,
111,98,97,108,95,109,
97,115,107,115,116,114,
0,103,108,111,98,97,
108,95,109,99,117,116,
0,103,108,111,98,97,
108,95,109,97,115,107,
98,111,111,115,116,0,
103,108,111,98,97,108,
95,109,97,115,107,115,
105,122,101,0,103,108,
111,98,97,108,95,109,
97,115,107,95,122,111,
111,109,0,103,108,111,
98,97,108,95,109,122,
111,111,109,95,115,104,
0,103,108,111,98,97,
108,95,109,97,115,107,
115,105,122,101,97,117,
116,111,116,104,114,101,
115,104,111,108,100,0,
103,108,111,98,97,108,
95,109,97,115,107,68,
97,114,107,0,103,108,
111,98,97,108,95,109,
97,115,107,76,105,103,
104,116,0,103,108,111,
98,97,108,95,109,97,
115,107,95,103,97,109,
109,97,0,103,108,111,
98,97,108,95,115,108,
111,116,109,97,115,107,
0,103,108,111,98,97,
108,95,115,108,111,116,
109,97,115,107,49,0,
103,108,111,98,97,108,
95,115,108,111,116,119,
105,100,116,104,0,103,
108,111,98,97,108,95,
100,111,117,98,108,101,
95,115,108,111,116,0,
103,108,111,98,97,108,
95,115,108,111,116,109,
115,0,103,108,111,98,
97,108,95,115,109,111,
111,116,104,109,97,115,
107,0,103,108,111,98,
97,108,95,109,115,104,
105,102,116,0,103,108,
111,98,97,108,95,109,
97,115,107,95,108,97,
121,111,117,116,0,103,
108,111,98,97,108,95,
71,68,86,95,68,69,
67,79,78,86,69,82,
71,69,78,67,69,95,
79,78,0,103,108,111,
98,97,108,95,100,101,
99,111,110,115,0,103,
108,111,98,97,108,95,
100,101,99,111,110,114,
114,0,103,108,111,98,
97,108,95,100,101,99,
111,110,114,103,0,103,
108,111,98,97,108,95,
100,101,99,111,110,114,
98,0,103,108,111,98,
97,108,95,100,101,99,
111,110,114,114,121,0,
103,108,111,98,97,108,
95,100,101,99,111,110,
114,103,121,0,103,108,
111,98,97,108,95,100,
101,99,111,110,114,98,
121,0,103,108,111,98,
97,108,95,100,101,99,
111,110,115,109,111,111,
116,104,0,103,108,111,
98,97,108,95,100,99,
116,121,112,101,120,0,
103,108,111,98,97,108,
95,100,99,116,121,112,
101,121,0,103,108,111,
98,97,108,95,100,99,
115,99,97,108,101,109,
111,100,101,0,103,108,
111,98,97,108,95,71,
68,86,95,78,79,73,
83,69,95,79,78,0,
103,108,111,98,97,108,
95,97,100,100,110,111,
105,115,101,100,0,103,
108,111,98,97,108,95,
110,111,105,115,101,116,
121,112,101,0,103,108,
111,98,97,108,95,110,
111,105,115,101,114,101,
115,100,0,103,108,111,
98,97,108,95,110,111,
105,115,101,114,101,115,
100,52,107,109,117,108,
116,0,103,108,111,98,
97,108,95,103,95,103,
114,97,100,101,95,111,
110,0,103,108,111,98,
97,108,95,103,95,68,
97,114,107,95,116,111,
95,68,105,109,0,103,
108,111,98,97,108,95,
103,95,71,67,111,109,
112,114,101,115,115,0,
103,108,111,98,97,108,
95,119,112,95,116,101,
109,112,101,114,97,116,
117,114,101,0,103,108,
111,98,97,108,95,103,
95,97,110,97,108,111,
103,0,103,108,111,98,
97,108,95,103,95,100,
105,103,105,116,97,108,
0,103,108,111,98,97,
108,95,103,95,115,102,
105,120,101,115,0,103,
108,111,98,97,108,95,
103,95,77,68,95,80,
97,108,0,103,108,111,
98,97,108,95,103,95,
83,77,83,95,98,108,
0,103,108,111,98,97,
108,95,103,95,67,82,
84,95,98,114,0,103,
108,111,98,97,108,95,
103,95,67,82,84,95,
98,103,0,103,108,111,
98,97,108,95,103,95,
67,82,84,95,98,98,
0,103,108,111,98,97,
108,95,103,95,67,82,
84,95,114,102,0,103,
108,111,98,97,108,95,
103,95,67,82,84,95,
115,108,0,103,108,111,
98,97,108,95,103,95,
115,97,116,114,0,103,
108,111,98,97,108,95,
103,95,115,97,116,103,
0,103,108,111,98,97,
108,95,103,95,115,97,
116,98,0,103,108,111,
98,97,108,95,65,83,
0,103,108,111,98,97,
108,95,97,115,97,116,
0,103,108,111,98,97,
108,95,104,99,114,116,
95,104,95,115,105,122,
101,0,103,108,111,98,
97,108,95,104,99,114,
116,95,118,95,115,105,
122,101,0,103,108,111,
98,97,108,95,104,99,
114,116,95,104,95,99,
101,110,116,0,103,108,
111,98,97,108,95,104,
99,114,116,95,118,95,
99,101,110,116,0,103,
108,111,98,97,108,95,
104,99,114,116,95,112,
105,110,95,112,104,97,
115,101,0,103,108,111,
98,97,108,95,104,99,
114,116,95,112,105,110,
95,97,109,112,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,171,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
12,0,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
168,1,0,0,80,0,
0,0,106,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,82,0,
0,0,90,0,0,3,
0,96,16,0,2,0,
0,0,90,0,0,3,
0,96,16,0,3,0,
0,0,88,24,0,4,
0,112,16,0,2,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,3,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,3,0,0,0,
56,0,0,8,18,0,
16,0,0,0,0,0,
1,64,0,0,10,215,
35,60,10,128,32,0,
0,0,0,0,81,0,
0,0,72,0,0,141,
194,0,0,128,67,85,
21,0,242,0,16,0,
1,0,0,0,70,16,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,1,64,
0,0,0,0,0,64,
72,0,0,141,194,0,
0,128,67,85,21,0,
242,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,1,64,0,0,
0,0,0,64,0,0,
0,8,242,0,16,0,
1,0,0,0,70,14,
16,0,1,0,0,0,
70,14,16,128,65,0,
0,0,2,0,0,0,
50,0,0,9,242,0,
16,0,0,0,0,0,
6,0,16,0,0,0,
0,0,70,14,16,0,
1,0,0,0,70,14,
16,0,2,0,0,0,
47,0,0,5,114,0,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,54,32,0,5,
130,32,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,56,0,
0,10,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
2,64,0,0,59,177,
147,63,59,177,147,63,
59,177,147,63,0,0,
0,0,25,32,0,5,
114,32,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,10,0,
0,0,3,0,0,0,
0,0,0,0,2,0,
0,0,6,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class BezelMega_BezelShadersBaseLinearizeCrtShaderDef : public ShaderDef
{
public:
	BezelMega_BezelShadersBaseLinearizeCrtShaderDef() : ShaderDef{}
	{
		Name = "linearize-crt";
		VertexByteCode = RetroArchBezelMega_BezelShadersBaseLinearizeCrtShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchBezelMega_BezelShadersBaseLinearizeCrtShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchBezelMega_BezelShadersBaseLinearizeCrtShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchBezelMega_BezelShadersBaseLinearizeCrtShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalFeedbackSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", 0, 112, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FinalViewportSize", 0, 128, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("DerezedPassSize", 0, 144, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameDirection", 0, 160, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", 0, 164, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_RESOLUTION_DEBUG_ON", 0, 168, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Show Resolution Info"));
		Params.push_back(ShaderParam("HSM_SINDEN_BORDER_ON", 0, 172, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Show Border"));
		Params.push_back(ShaderParam("HSM_SINDEN_BORDER_OPACITY", 0, 176, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_SINDEN_BORDER_BRIGHTNESS", 0, 180, 4, 0.000000f, 200.000000f, 60.000000f, 5.000000f, "Brightness"));
		Params.push_back(ShaderParam("HSM_SINDEN_AMBIENT_LIGHTING", 0, 184, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_SINDEN_BORDER_THICKNESS", 0, 188, 4, 0.000000f, 30.000000f, 2.000000f, 0.500000f, "Thickness"));
		Params.push_back(ShaderParam("HSM_SINDEN_BORDER_EMPTY_TUBE_COMPENSATION", 0, 192, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Compensate Empty Tube"));
		Params.push_back(ShaderParam("HSM_CACHE_GRAPHICS_ON", 0, 196, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Cache Graphics: OFF | ON"));
		Params.push_back(ShaderParam("HSM_CACHE_UPDATE_INDICATOR_MODE", 0, 200, 4, 0.000000f, 2.000000f, 2.000000f, 1.000000f, "Cache Update Indicator: OFF | ON | ONLY IF CACHE IS OFF"));
		Params.push_back(ShaderParam("HSM_GLOBAL_GRAPHICS_BRIGHTNESS", 0, 204, 4, 0.000000f, 500.000000f, 100.000000f, 1.000000f, "Graphics Brightness"));
		Params.push_back(ShaderParam("HSM_STATIC_LAYERS_GAMMA", 0, 208, 4, 0.010000f, 5.000000f, 1.000000f, 0.010000f, "Graphics Gamma Adjust"));
		Params.push_back(ShaderParam("HSM_AMBIENT_LIGHTING_OPACITY", 0, 212, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Ambient Global Opacity Multiplier"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_OPACITY", 0, 216, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Ambient 1st Image Opacity"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_OPACITY", 0, 220, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Ambient 2nd Image Opacity (Used for BG by Default)"));
		Params.push_back(ShaderParam("HSM_AMBIENT_LIGHTING_SWAP_IMAGE_MODE", 0, 224, 4, 0.000000f, 3.000000f, 0.000000f, 1.000000f, "Which Images to Use: BOTH | 1 ONLY | 2 ONLY | SWAP"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_HUE", 0, 228, 4, -180.000000f, 180.000000f, 0.000000f, 1.000000f, "Hue"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_SATURATION", 0, 232, 4, 0.000000f, 300.000000f, 100.000000f, 1.000000f, "Saturation"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_VALUE", 0, 236, 4, 0.000000f, 400.000000f, 120.000000f, 1.000000f, "Value"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_CONTRAST", 0, 240, 4, 0.000000f, 200.000000f, 100.000000f, 0.500000f, "Contrast"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_SCALE_KEEP_ASPECT", 0, 244, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Scale Aspect - MATCH VIEWPORT | USE TEXURE ASPECT"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_SCALE_INHERIT_MODE", 0, 248, 4, 0.000000f, 2.000000f, 2.000000f, 1.000000f, "Scale Inheritance - OFF | ZOOM | TUBE"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_SCALE", 0, 252, 4, 10.000000f, 1000.000000f, 250.000000f, 1.000000f, "Scale Offset"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_SCALE_X", 0, 256, 4, 10.000000f, 1000.000000f, 100.000000f, 0.500000f, "Scale Offset X"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_ROTATE", 0, 260, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Rotate"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_MIRROR_HORZ", 0, 264, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Mirror Horizontal"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_POS_INHERIT_MODE", 0, 268, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Position Inheritance - OFF | ON"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_POSITION_X", 0, 272, 4, -1500.000000f, 1500.000000f, 0.000000f, 1.000000f, "Position X"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_POSITION_Y", 0, 276, 4, -1500.000000f, 1500.000000f, 0.000000f, 1.000000f, "Position Y"));
		Params.push_back(ShaderParam("HSM_AMBIENT1_DITHERING_SAMPLES", 0, 280, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_AMBIENT2_HUE", 0, 284, 4, -180.000000f, 180.000000f, 0.000000f, 1.000000f, "Hue"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_SATURATION", 0, 288, 4, 0.000000f, 300.000000f, 100.000000f, 1.000000f, "Saturation"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_VALUE", 0, 292, 4, 0.000000f, 400.000000f, 100.000000f, 1.000000f, "Value"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_CONTRAST", 0, 296, 4, 0.000000f, 200.000000f, 100.000000f, 0.500000f, "Contrast"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_SCALE_KEEP_ASPECT", 0, 300, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Scale Aspect - MATCH VIEWPORT | USE TEXURE ASPECT"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_SCALE_INHERIT_MODE", 0, 304, 4, 0.000000f, 2.000000f, 1.000000f, 1.000000f, "Scale Inheritance - OFF | ZOOM | TUBE"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_SCALE", 0, 308, 4, 10.000000f, 1000.000000f, 100.000000f, 0.500000f, "Scale Offset"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_SCALE_X", 0, 312, 4, 10.000000f, 1000.000000f, 100.000000f, 0.500000f, "Scale Offset X"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_ROTATE", 0, 316, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Rotate"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_MIRROR_HORZ", 0, 320, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Mirror Horizontal"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_POS_INHERIT_MODE", 0, 324, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Position Inheritance - OFF | ON"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_POSITION_X", 0, 328, 4, -1000.000000f, 1000.000000f, 0.000000f, 1.000000f, "Position X"));
		Params.push_back(ShaderParam("HSM_AMBIENT2_POSITION_Y", 0, 332, 4, -1000.000000f, 1000.000000f, 0.000000f, 1.000000f, "Position Y"));
		Params.push_back(ShaderParam("HSM_VIEWPORT_ZOOM", 0, 336, 4, 10.000000f, 500.000000f, 100.000000f, 0.200000f, "Viewport Zoom"));
		Params.push_back(ShaderParam("HSM_VIEWPORT_POSITION_X", 0, 340, 4, -500.000000f, 500.000000f, 0.000000f, 1.000000f, "Viewport Position X"));
		Params.push_back(ShaderParam("HSM_VIEWPORT_POSITION_Y", 0, 344, 4, -500.000000f, 500.000000f, 0.000000f, 1.000000f, "Viewport Position Y"));
		Params.push_back(ShaderParam("HSM_VIEWPORT_ZOOM_MASK", 0, 348, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Zoom CRT Mask"));
		Params.push_back(ShaderParam("HSM_FLIP_VIEWPORT_VERTICAL", 0, 352, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Flip Viewport Vertical"));
		Params.push_back(ShaderParam("HSM_FLIP_VIEWPORT_HORIZONTAL", 0, 356, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Flip Viewport Horizontal"));
		Params.push_back(ShaderParam("HSM_FLIP_CORE_VERTICAL", 0, 360, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Flip Core Image Vertical"));
		Params.push_back(ShaderParam("HSM_FLIP_CORE_HORIZONTAL", 0, 364, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Flip Core Image Horizontal"));
		Params.push_back(ShaderParam("HSM_ROTATE_CORE_IMAGE", 0, 368, 4, -1.000000f, 1.000000f, 0.000000f, 1.000000f, "Rotate CRT Tube --  -1:270 | 0 | 1:90"));
		Params.push_back(ShaderParam("HSM_ASPECT_RATIO_ORIENTATION", 0, 372, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Orientation - Auto | Horizontal | Vertical"));
		Params.push_back(ShaderParam("HSM_ASPECT_RATIO_MODE", 0, 376, 4, 0.000000f, 6.000000f, 5.000000f, 1.000000f, "Type - Auto | Explicit | 4:3 | 3:2 | 16:9 | PAR | Full"));
		Params.push_back(ShaderParam("HSM_ASPECT_RATIO_EXPLICIT", 0, 380, 4, 0.000000f, 8.000000f, 1.333300f, 0.002000f, "Explicit Aspect Ratio (Also Auto Ratio Fallback)"));
		Params.push_back(ShaderParam("HSM_INT_SCALE_MODE", 0, 384, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Integer Scale Mode - OFF | ShortAxis | BothAxes"));
		Params.push_back(ShaderParam("HSM_INT_SCALE_MULTIPLE_OFFSET", 0, 388, 4, -20.000000f, 20.000000f, 0.000000f, 1.000000f, "Integer Scale Multiple Offset"));
		Params.push_back(ShaderParam("HSM_INT_SCALE_MULTIPLE_OFFSET_LONG", 0, 392, 4, -20.000000f, 20.000000f, 0.000000f, 1.000000f, "Integer Scale Multiple Offset on Long Axis"));
		Params.push_back(ShaderParam("HSM_INT_SCALE_MAX_HEIGHT", 0, 396, 4, 60.000000f, 140.000000f, 89.000000f, 0.500000f, "Base Integer Scale Max Height %"));
		Params.push_back(ShaderParam("HSM_VERTICAL_PRESET", 0, 400, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Preset is for Monitor Portrait Mode (Smaller CRT Screen)"));
		Params.push_back(ShaderParam("HSM_NON_INTEGER_SCALE", 0, 404, 4, 1.000000f, 200.000000f, 82.970001f, 0.200000f, "Non-Integer Scale %"));
		Params.push_back(ShaderParam("HSM_USE_PHYSICAL_SIZE_FOR_NON_INTEGER", 0, 408, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Physical Monitor and Tube Sizes for Non-Integer"));
		Params.push_back(ShaderParam("HSM_PHYSICAL_MONITOR_ASPECT_RATIO", 0, 412, 4, 0.250000f, 5.000000f, 1.770000f, 0.010000f, "Your Monitor's Aspect Ratio"));
		Params.push_back(ShaderParam("HSM_PHYSICAL_MONITOR_DIAGONAL_SIZE", 0, 416, 4, 1.000000f, 100.000000f, 27.000000f, 0.100000f, "Your Monitor's Size (Diagonal)"));
		Params.push_back(ShaderParam("HSM_PHYSICAL_SIM_TUBE_DIAGONAL_SIZE", 0, 420, 4, 1.000000f, 100.000000f, 18.100000f, 0.100000f, "Simulated Tube Size (Diagonal)"));
		Params.push_back(ShaderParam("HSM_USE_IMAGE_FOR_PLACEMENT", 0, 424, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Image For Automatic Placement (Scale and Y Pos)"));
		Params.push_back(ShaderParam("HSM_PLACEMENT_IMAGE_USE_HORIZONTAL", 0, 428, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Auto Place Horizontal (X Pos)"));
		Params.push_back(ShaderParam("HSM_PLACEMENT_IMAGE_MODE", 0, 432, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Placement Image Mode: TRANSPARENCY : WHITE ON BLACK"));
		Params.push_back(ShaderParam("HSM_NON_INTEGER_SCALE_OFFSET", 0, 436, 4, 5.000000f, 400.000000f, 100.000000f, 0.100000f, "Non-Integer Scale Offset"));
		Params.push_back(ShaderParam("HSM_USE_SNAP_TO_CLOSEST_INT_SCALE", 0, 440, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Snap to Closest Integer Scale: OFF | ON"));
		Params.push_back(ShaderParam("HSM_SNAP_TO_CLOSEST_INT_SCALE_TOLERANCE", 0, 444, 4, 0.000000f, 300.000000f, 20.000000f, 1.000000f, "Snap To Closest Integer Scale Tolerance"));
		Params.push_back(ShaderParam("HSM_SCREEN_POSITION_X", 0, 448, 4, -1000.000000f, 1000.000000f, 0.000000f, 1.000000f, "Position X"));
		Params.push_back(ShaderParam("HSM_SCREEN_POSITION_Y", 0, 452, 4, -1000.000000f, 1000.000000f, 0.000000f, 1.000000f, "Position Y"));
		Params.push_back(ShaderParam("HSM_CROP_MODE", 0, 456, 4, 0.000000f, 2.000000f, 2.000000f, 1.000000f, "Crop Mode  -  OFF | CROP BLACK ONLY | CROP ANY"));
		Params.push_back(ShaderParam("HSM_CROP_PERCENT_ZOOM", 0, 460, 4, -50.000000f, 100.000000f, 0.000000f, 0.100000f, "Crop Zoom %"));
		Params.push_back(ShaderParam("HSM_CROP_PERCENT_TOP", 0, 464, 4, -50.000000f, 100.000000f, 0.000000f, 0.100000f, "Crop Top %"));
		Params.push_back(ShaderParam("HSM_CROP_PERCENT_BOTTOM", 0, 468, 4, -50.000000f, 100.000000f, 0.000000f, 0.100000f, "Crop Bottom %"));
		Params.push_back(ShaderParam("HSM_CROP_PERCENT_LEFT", 0, 472, 4, -50.000000f, 100.000000f, 0.000000f, 0.100000f, "Crop Left %"));
		Params.push_back(ShaderParam("HSM_CROP_PERCENT_RIGHT", 0, 476, 4, -50.000000f, 100.000000f, 0.000000f, 0.100000f, "Crop Right %"));
		Params.push_back(ShaderParam("HSM_CROP_BLACK_THRESHOLD", 0, 480, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Black Threshold for 'CROP BLACK ONLY'"));
		Params.push_back(ShaderParam("HSM_SCANLINE_DIRECTION", 0, 484, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Scanline Direction - Auto | Horiz | Vert"));
		Params.push_back(ShaderParam("HSM_CORE_RES_SAMPLING_MULT_SCANLINE_DIR", 0, 488, 4, 25.000000f, 1600.000000f, 100.000000f, 25.000000f, "Scanline Dir Multiplier"));
		Params.push_back(ShaderParam("HSM_DOWNSAMPLE_BLUR_SCANLINE_DIR", 0, 492, 4, 0.000000f, 200.000000f, 0.000000f, 1.000000f, "Scanline Dir Downsample Blur"));
		Params.push_back(ShaderParam("HSM_CORE_RES_SAMPLING_MULT_OPPOSITE_DIR", 0, 496, 4, 25.000000f, 1600.000000f, 100.000000f, 25.000000f, "Opposite Dir Multiplier"));
		Params.push_back(ShaderParam("HSM_DOWNSAMPLE_BLUR_OPPOSITE_DIR", 0, 500, 4, 0.000000f, 200.000000f, 0.000000f, 1.000000f, "Opposite Dir Downsample Blur"));
		Params.push_back(ShaderParam("HSM_CORE_RES_SAMPLING_SHIFT_OPPOSITE_DIR", 0, 504, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTERLACE_TRIGGER_RES", 0, 508, 4, 100.000000f, 2000.000000f, 375.000000f, 25.000000f, "Trigger Res for Interlace, Fake Scanlines & VGA"));
		Params.push_back(ShaderParam("HSM_INTERLACE_MODE", 0, 512, 4, -1.000000f, 5.000000f, 4.000000f, 1.000000f, "Interlace Mode:"));
		Params.push_back(ShaderParam("HSM_INTERLACE_EFFECT_SMOOTHNESS_INTERS", 0, 516, 4, 0.000000f, 100.000000f, 0.000000f, 10.000000f, "Interlace Effect Smoothness"));
		Params.push_back(ShaderParam("HSM_INTERLACE_SCANLINE_EFFECT", 0, 520, 4, 0.000000f, 1.000000f, 0.200000f, 0.050000f, "Interlace Scanline Effect ('Laced brightness)"));
		Params.push_back(ShaderParam("iscans", 0, 524, 4, 0.000000f, 1.000000f, 0.250000f, 0.050000f, "Interlace (Scanline) Saturation"));
		Params.push_back(ShaderParam("vga_mode", 0, 528, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "VGA Single/Double Scan mode"));
		Params.push_back(ShaderParam("hiscan", 0, 532, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "High Resolution Scanlines (ScaleFx or XBR Only)"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_MODE", 0, 536, 4, 0.000000f, 2.000000f, 2.000000f, 1.000000f, "Show Fake Scanlines - OFF | ON | USE TRIGGER RES"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_OPACITY", 0, 540, 4, 0.000000f, 100.000000f, 0.000000f, 5.000000f, "Opacity - Def 70"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_RES_MODE", 0, 544, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Scan Resolution Mode: AUTO (CORE RES) : EXPLICIT"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_RES", 0, 548, 4, 0.000000f, 480.000000f, 240.000000f, 8.000000f, "Explicit Scan Resolution"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_INT_SCALE", 0, 552, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Int Scale Scanlines"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_ROLL", 0, 556, 4, -100.000000f, 100.000000f, 0.000000f, 1.000000f, "Rolling Scanline"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_CURVATURE", 0, 560, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Scanline Curvature"));
		Params.push_back(ShaderParam("HSM_FAKE_SCANLINE_BRIGHTNESS_CUTOFF", 0, 564, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_MODE", 0, 568, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Dual Screen Mode - OFF | VERTICAL | HORIZONTAL"));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_CORE_IMAGE_SPLIT_MODE", 0, 572, 4, 0.000000f, 2.000000f, 1.000000f, 1.000000f, "Core Image Split Mode  - AUTO | VERTICAL | HORIZONTAL"));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_CORE_IMAGE_SWAP_SCREENS", 0, 576, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Core Image Swap Screen Content"));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_CORE_IMAGE_SPLIT_OFFSET", 0, 580, 4, -100.000000f, 100.000000f, 0.000000f, 1.000000f, "Core Image Split Offset"));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_VIEWPORT_SPLIT_LOCATION", 0, 584, 4, -500.000000f, 500.000000f, 0.000000f, 1.000000f, "Viewport Split Offset"));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_SHIFT_POSITION_WITH_SCALE", 0, 588, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Scale Screens from Center of Split"));
		Params.push_back(ShaderParam("HSM_DUALSCREEN_POSITION_OFFSET_BETWEEN_SCREENS", 0, 592, 4, -250.000000f, 250.000000f, 0.000000f, 0.200000f, "Position Offset Between Screens"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_ASPECT_RATIO_MODE", 0, 596, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "2nd Screen Aspect Ratio Mode - Same as 1st Screen | PAR"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_INDEPENDENT_SCALE", 0, 600, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "2nd Screen Use Independent Scale"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_SCALE_OFFSET", 0, 604, 4, 1.000000f, 500.000000f, 100.000000f, 0.500000f, "2nd Screen Scale Offset"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_POS_X", 0, 608, 4, -500.000000f, 500.000000f, 0.000000f, 1.000000f, "2nd Screen Pos X"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_POS_Y", 0, 612, 4, -500.000000f, 500.000000f, 0.000000f, 1.000000f, "2nd Screen Pos Y"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_CROP_PERCENT_ZOOM", 0, 616, 4, -10.000000f, 100.000000f, 0.000000f, 0.100000f, "2nd Screen Crop Zoom %"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_CROP_PERCENT_TOP", 0, 620, 4, -10.000000f, 100.000000f, 0.000000f, 0.100000f, "2nd Screen Crop Top %"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_CROP_PERCENT_BOTTOM", 0, 624, 4, -10.000000f, 100.000000f, 0.000000f, 0.100000f, "2nd Screen Crop Bottom %"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_CROP_PERCENT_LEFT", 0, 628, 4, -10.000000f, 100.000000f, 0.000000f, 0.100000f, "2nd Screen Crop Left %"));
		Params.push_back(ShaderParam("HSM_2ND_SCREEN_CROP_PERCENT_RIGHT", 0, 632, 4, -10.000000f, 100.000000f, 0.000000f, 0.100000f, "2nd Screen Crop Right %"));
		Params.push_back(ShaderParam("HSM_CURVATURE_MODE", 0, 636, 4, 0.000000f, 5.000000f, 1.000000f, 1.000000f, "Curvature Mode  OFF | 2D | 2D-CYL | 3D-1 | 3D-2 | 3D CYL"));
		Params.push_back(ShaderParam("HSM_CURVATURE_2D_SCALE_LONG_AXIS", 0, 640, 4, 5.000000f, 400.000000f, 100.000000f, 5.000000f, "2D Curvature on Long Axis"));
		Params.push_back(ShaderParam("HSM_CURVATURE_2D_SCALE_SHORT_AXIS", 0, 644, 4, 5.000000f, 400.000000f, 100.000000f, 5.000000f, "2D Curvature on Short Axis"));
		Params.push_back(ShaderParam("HSM_CURVATURE_3D_RADIUS", 0, 648, 4, 16.000000f, 102400.000000f, 200.000000f, 1.000000f, "3D Radius"));
		Params.push_back(ShaderParam("HSM_CURVATURE_3D_VIEW_DIST", 0, 652, 4, 50.000000f, 102400.000000f, 150.000000f, 5.000000f, "3D View Distance - Def 150"));
		Params.push_back(ShaderParam("HSM_CURVATURE_3D_TILT_ANGLE_X", 0, 656, 4, -120.000000f, 120.000000f, 0.000000f, 1.000000f, "3D Tilt Angle X"));
		Params.push_back(ShaderParam("HSM_CURVATURE_3D_TILT_ANGLE_Y", 0, 660, 4, -120.000000f, 120.000000f, 0.000000f, 1.000000f, "3D Tilt Angle Y"));
		Params.push_back(ShaderParam("HSM_CRT_CURVATURE_SCALE", 0, 664, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "CRT Curvature Scale Multiplier: 0 = Less Moire Artifacts"));
		Params.push_back(ShaderParam("HSM_SIGNAL_NOISE_ON", 0, 668, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Signal Noise ON"));
		Params.push_back(ShaderParam("HSM_SIGNAL_NOISE_AMOUNT", 0, 672, 4, -1.000000f, 1.000000f, 0.200000f, 0.020000f, "Amount"));
		Params.push_back(ShaderParam("HSM_SIGNAL_NOISE_BLACK_LEVEL", 0, 676, 4, 0.000000f, 300.000000f, 100.000000f, 5.000000f, "Contrast"));
		Params.push_back(ShaderParam("HSM_SIGNAL_NOISE_SIZE_MODE", 0, 680, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Noise Resolution Mode:  SCANLINE | CORE | SMOOTHED"));
		Params.push_back(ShaderParam("HSM_SIGNAL_NOISE_SIZE_MULT", 0, 684, 4, 0.500000f, 4.000000f, 0.500000f, 0.500000f, "Size Mult"));
		Params.push_back(ShaderParam("HSM_SIGNAL_NOISE_TYPE", 0, 688, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Noise Type:  LUMA ADD | COLORED"));
		Params.push_back(ShaderParam("HSM_ANTI_FLICKER_ON", 0, 692, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Anti-Flicker ON"));
		Params.push_back(ShaderParam("HSM_ANTI_FLICKER_THRESHOLD", 0, 696, 4, 0.000000f, 100.000000f, 25.000000f, 5.000000f, "Luma Difference Threshold"));
		Params.push_back(ShaderParam("HSM_AB_COMPARE_SHOW_MODE", 0, 700, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Show:  CRT SHADER | ORIGINAL"));
		Params.push_back(ShaderParam("HSM_AB_COMPARE_AREA", 0, 704, 4, 0.000000f, 3.000000f, 0.000000f, 1.000000f, "Compare Area:  LEFT | RIGHT | TOP | BOTTOM"));
		Params.push_back(ShaderParam("HSM_AB_COMPARE_FREEZE_CRT_TUBE", 0, 708, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Freeze CRT Tube (Freeze Left, New changes on Right)"));
		Params.push_back(ShaderParam("HSM_AB_COMPARE_FREEZE_GRAPHICS", 0, 712, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Freeze Graphics (Freeze Left, New changes on Right)"));
		Params.push_back(ShaderParam("HSM_AB_COMPARE_SPLIT_AREA", 0, 716, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_AB_COMPARE_SPLIT_POSITION", 0, 720, 4, 0.000000f, 100.000000f, 50.000000f, 0.200000f, "Splitscreen Position"));
		Params.push_back(ShaderParam("HSM_SHOW_PASS_INDEX", 0, 724, 4, 0.000000f, 10.000000f, 0.000000f, 1.000000f, "Show Pass Index"));
		Params.push_back(ShaderParam("HSM_SHOW_PASS_ALPHA", 0, 728, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Show Alpha Channel"));
		Params.push_back(ShaderParam("HSM_SHOW_PASS_APPLY_SCREEN_COORD", 0, 732, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Apply Screen Scale & Curvature to Unscaled Passes"));
		Params.push_back(ShaderParam("HSM_SCREEN_VIGNETTE_ON", 0, 736, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Use Vignette"));
		Params.push_back(ShaderParam("HSM_SCREEN_VIGNETTE_DUALSCREEN_VIS_MODE", 0, 740, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Dual Screen Visibility - BOTH | SCREEN 1 | SCREEN 2"));
		Params.push_back(ShaderParam("HSM_SCREEN_VIGNETTE_STRENGTH", 0, 744, 4, 0.000000f, 98.000000f, 40.000000f, 2.000000f, "Amount (Strength)"));
		Params.push_back(ShaderParam("HSM_SCREEN_VIGNETTE_POWER", 0, 748, 4, 0.000000f, 200.000000f, 26.000000f, 2.000000f, "Corner Amount (Power)"));
		Params.push_back(ShaderParam("HSM_SCREEN_VIGNETTE_IN_REFLECTION", 0, 752, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Amount of Vignette in Reflection"));
		Params.push_back(ShaderParam("HSM_MONOCHROME_MODE", 0, 756, 4, 0.000000f, 3.000000f, 0.000000f, 1.000000f, "Monochrome Color: OFF | BW | AMBER | GREEN"));
		Params.push_back(ShaderParam("HSM_MONOCHROME_BRIGHTNESS", 0, 760, 4, 1.000000f, 500.000000f, 100.000000f, 1.000000f, "Monochrome Brightness"));
		Params.push_back(ShaderParam("HSM_MONOCHROME_GAMMA", 0, 764, 4, 0.100000f, 5.000000f, 1.000000f, 0.100000f, "Monochrome Gamma"));
		Params.push_back(ShaderParam("HSM_MONOCHROME_HUE_OFFSET", 0, 768, 4, -180.000000f, 180.000000f, 0.000000f, 1.000000f, "Monochrome Hue Offset"));
		Params.push_back(ShaderParam("HSM_MONOCHROME_SATURATION", 0, 772, 4, -100.000000f, 200.000000f, 100.000000f, 1.000000f, "Monochrome Saturation"));
		Params.push_back(ShaderParam("HSM_MONOCHROME_DUALSCREEN_VIS_MODE", 0, 776, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Dual Screen Visibility - BOTH | SCREEN 1 | SCREEN 2"));
		Params.push_back(ShaderParam("HSM_SCREEN_REFLECTION_SCALE", 0, 780, 4, 1.000000f, 300.000000f, 100.000000f, 1.000000f, "Screen Reflection Scale"));
		Params.push_back(ShaderParam("HSM_SCREEN_REFLECTION_POS_X", 0, 784, 4, -100.000000f, 100.000000f, 0.000000f, 1.000000f, "Screen Reflection Pos X"));
		Params.push_back(ShaderParam("HSM_SCREEN_REFLECTION_POS_Y", 0, 788, 4, -100.000000f, 100.000000f, 0.000000f, 1.000000f, "Screen Reflection Pos Y"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_MODE", 0, 792, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Tube Diffuse Color - BLACK | IMAGE | TRANSPARENT"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_DUALSCREEN_VIS_MODE", 0, 796, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Dual Screen Visibility - BOTH | SCREEN 1 | SCREEN 2"));
		Params.push_back(ShaderParam("HSM_TUBE_OPACITY", 0, 800, 4, 0.000000f, 100.000000f, 100.000000f, 0.100000f, "Tube Opacity"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_AMOUNT", 0, 804, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Amount"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_HUE", 0, 808, 4, 0.000000f, 360.000000f, 0.000000f, 1.000000f, "Hue Offset"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_COLORIZE_ON", 0, 812, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Colorize On"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_SATURATION", 0, 816, 4, 0.000000f, 200.000000f, 100.000000f, 1.000000f, "Saturation"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_BRIGHTNESS", 0, 820, 4, 0.000000f, 500.000000f, 15.000000f, 1.000000f, "Brightness"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_GAMMA", 0, 824, 4, 0.000000f, 5.000000f, 1.000000f, 0.010000f, "Gamma Adjust"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_AMBIENT_LIGHTING", 0, 828, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Ambient Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_AMBIENT2_LIGHTING", 0, 832, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Ambient 2nd Image Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_SCALE", 0, 836, 4, 0.000000f, 1000.000000f, 140.000000f, 1.000000f, "Image Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_SCALE_X", 0, 840, 4, 0.000000f, 1000.000000f, 100.000000f, 1.000000f, "Image Scale X"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_IMAGE_ROTATION", 0, 844, 4, -1.000000f, 1.000000f, 0.000000f, 1.000000f, "Image Rotation: -1: 270 | 0 | 1: 90"));
		Params.push_back(ShaderParam("HSM_TUBE_EMPTY_THICKNESS", 0, 848, 4, 0.000000f, 6000.000000f, 0.000000f, 10.000000f, "Empty Tube Thickness"));
		Params.push_back(ShaderParam("HSM_TUBE_EMPTY_THICKNESS_X_SCALE", 0, 852, 4, 0.000000f, 3000.000000f, 100.000000f, 1.000000f, "Empty Tube Thicknes X Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_DIFFUSE_FORCE_ASPECT", 0, 856, 4, 0.000000f, 2.000000f, 1.000000f, 1.000000f, "Tube Aspect - EVEN | SCREEN | Explicit"));
		Params.push_back(ShaderParam("HSM_TUBE_EXPLICIT_ASPECT", 0, 860, 4, 0.500000f, 3.000000f, 1.333300f, 0.010000f, "Explicit Tube Aspect"));
		Params.push_back(ShaderParam("HSM_SCREEN_CORNER_RADIUS_SCALE", 0, 864, 4, 5.000000f, 3000.000000f, 100.000000f, 1.000000f, "Screen (Game Image) Corner Radius Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_ON", 0, 868, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Tube Colored Gel - OFF | ON"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_DUALSCREEN_VIS_MODE", 0, 872, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Dual Screen Visibility - BOTH | SCREEN 1 | SCREEN 2"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_MULTIPLY_AMOUNT", 0, 876, 4, 0.000000f, 100.000000f, 90.000000f, 1.000000f, "Multiply Blend Amount"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_NORMAL_AMOUNT", 0, 880, 4, 0.000000f, 100.000000f, 15.000000f, 1.000000f, "Blend Amount"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_NORMAL_BRIGHTNESS", 0, 884, 4, 0.000000f, 200.000000f, 100.000000f, 1.000000f, "Brightness"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_NORMAL_VIGNETTE", 0, 888, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Vignette Amount"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_TRANSPARENCY_THRESHOLD", 0, 892, 4, 0.000000f, 100.000000f, 23.000000f, 1.000000f, "Transparency Threshold"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_ADDITIVE_AMOUNT", 0, 896, 4, 0.000000f, 100.000000f, 0.000000f, 0.050000f, "Additive Blend Amount"));
		Params.push_back(ShaderParam("HSM_SHOW_CRT_ON_TOP_OF_COLORED_GEL", 0, 900, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_IMAGE_ON", 0, 904, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Tube Shadow Image - OFF | ON"));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_IMAGE_OPACITY", 0, 908, 4, 0.000000f, 100.000000f, 60.000000f, 2.000000f, "Opacity"));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_IMAGE_SCALE_X", 0, 912, 4, 0.000000f, 1000.000000f, 122.000000f, 0.100000f, "Scale X"));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_IMAGE_SCALE_Y", 0, 916, 4, 0.000000f, 1000.000000f, 130.000000f, 0.100000f, "Scale Y"));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_IMAGE_POS_X", 0, 920, 4, -500.000000f, 500.000000f, 0.000000f, 0.100000f, "Position X"));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_IMAGE_POS_Y", 0, 924, 4, -500.000000f, 500.000000f, 9.000000f, 0.100000f, "Position Y"));
		Params.push_back(ShaderParam("HSM_TUBE_SHADOW_CURVATURE_SCALE", 0, 928, 4, 0.000000f, 2000.000000f, 300.000000f, 1.000000f, "Curvature Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_AMBIENT_LIGHTING", 0, 932, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Ambient Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_AMBIENT2_LIGHTING", 0, 936, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Ambient 2nd Image Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_FAKE_SCANLINE_AMOUNT", 0, 940, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Fake Scanline Amount"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_SCALE", 0, 944, 4, 0.000000f, 1000.000000f, 100.000000f, 1.000000f, "Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_FLIP_HORIZONTAL", 0, 948, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Flip Horizontal"));
		Params.push_back(ShaderParam("HSM_TUBE_COLORED_GEL_IMAGE_FLIP_VERTICAL", 0, 952, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Flip Vertical"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_REFLECTION_IMAGE_ON", 0, 956, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Tube Static Reflection Image - OFF | ON"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_REFLECTION_IMAGE_DUALSCREEN_VIS_MODE", 0, 960, 4, 0.000000f, 2.000000f, 0.000000f, 1.000000f, "Dual Screen Visibility - BOTH | SCREEN 1 | SCREEN 2"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_REFLECTION_IMAGE_OPACITY", 0, 964, 4, 0.000000f, 100.000000f, 14.000000f, 0.100000f, "Opacity"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_OPACITY_DIFFUSE_MULTIPLY", 0, 968, 4, 0.000000f, 100.000000f, 25.000000f, 5.000000f, "Multiply Opacity by Diffuse Amount"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_BLACK_LEVEL", 0, 972, 4, -100.000000f, 100.000000f, 25.000000f, 0.500000f, "Black Level"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_AMBIENT_LIGHTING", 0, 976, 4, 0.000000f, 100.000000f, 60.000000f, 1.000000f, "Ambient Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_AMBIENT2_LIGHTING", 0, 980, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Ambient 2nd Image Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_SCALE", 0, 984, 4, 0.000000f, 1000.000000f, 120.000000f, 1.000000f, "Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_SCALE_X", 0, 988, 4, 0.000000f, 1000.000000f, 100.000000f, 1.000000f, "Scale X"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_POS_X", 0, 992, 4, -500.000000f, 500.000000f, 10.000000f, 1.000000f, "Pos X"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_POS_Y", 0, 996, 4, -500.000000f, 500.000000f, 10.000000f, 1.000000f, "Pos Y"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_SHADOW_OPACITY", 0, 1000, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Shadow Opacity"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_DITHER_SAMPLES", 0, 1004, 4, 0.000000f, 10.000000f, 0.000000f, 1.000000f, "Noise Samples (Reduces Banding)"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_DITHER_DISTANCE", 0, 1008, 4, 0.000000f, 10.000000f, 5.000000f, 0.500000f, "Noise Distance"));
		Params.push_back(ShaderParam("HSM_TUBE_STATIC_DITHER_AMOUNT", 0, 1012, 4, 0.000000f, 10.000000f, 0.600000f, 0.100000f, "Noise Amount"));
		Params.push_back(ShaderParam("HSM_CRT_BLEND_MODE", 0, 1016, 4, 0.000000f, 2.000000f, 1.000000f, 1.000000f, "CRT Blend Mode: OFF | ADD | MULTIPLY"));
		Params.push_back(ShaderParam("HSM_CRT_BLEND_AMOUNT", 0, 1020, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "CRT Blend Amount"));
		Params.push_back(ShaderParam("HSM_CRT_SCREEN_BLEND_MODE", 0, 1024, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_GLOBAL_CORNER_RADIUS", 0, 1028, 4, 4.000000f, 500.000000f, 10.000000f, 2.000000f, "Global Corner Radius - Def 10"));
		Params.push_back(ShaderParam("HSM_TUBE_BLACK_EDGE_CORNER_RADIUS_SCALE", 0, 1032, 4, 10.000000f, 8000.000000f, 100.000000f, 10.000000f, "Black Edge Corner Radius Scale"));
		Params.push_back(ShaderParam("HSM_TUBE_BLACK_EDGE_SHARPNESS", 0, 1036, 4, 0.000000f, 90.000000f, 70.000000f, 1.000000f, "Black Edge Sharpness - Def 70"));
		Params.push_back(ShaderParam("HSM_TUBE_BLACK_EDGE_CURVATURE_SCALE", 0, 1040, 4, 20.000000f, 8000.000000f, 100.000000f, 10.000000f, "Black Edge Curvature Scale Multiplier"));
		Params.push_back(ShaderParam("HSM_TUBE_BLACK_EDGE_THICKNESS", 0, 1044, 4, -800.000000f, 6000.000000f, 100.000000f, 5.000000f, "Black Edge Thickness"));
		Params.push_back(ShaderParam("HSM_TUBE_BLACK_EDGE_THICKNESS_X_SCALE", 0, 1048, 4, 0.000000f, 3000.000000f, 100.000000f, 10.000000f, "Black Edge Thickness X Scale"));
		Params.push_back(ShaderParam("HSM_BZL_USE_INDEPENDENT_SCALE", 0, 1052, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Independent Scale"));
		Params.push_back(ShaderParam("HSM_BZL_INDEPENDENT_SCALE", 0, 1056, 4, 1.000000f, 200.000000f, 82.970001f, 0.100000f, "Independent Scale (When scale from image is not used)"));
		Params.push_back(ShaderParam("HSM_BZL_USE_INDEPENDENT_CURVATURE", 0, 1060, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Independent Curvature"));
		Params.push_back(ShaderParam("HSM_BZL_INDEPENDENT_CURVATURE_SCALE_LONG_AXIS", 0, 1064, 4, 0.000000f, 400.000000f, 100.000000f, 5.000000f, "Independent Curvature X"));
		Params.push_back(ShaderParam("HSM_BZL_INDEPENDENT_CURVATURE_SCALE_SHORT_AXIS", 0, 1068, 4, 0.000000f, 400.000000f, 100.000000f, 5.000000f, "Independent Curvature Y"));
		Params.push_back(ShaderParam("HSM_BZL_OPACITY", 0, 1072, 4, 0.000000f, 100.000000f, 100.000000f, 5.000000f, "Opacity"));
		Params.push_back(ShaderParam("HSM_BZL_BLEND_MODE", 0, 1076, 4, 0.000000f, 3.000000f, 1.000000f, 1.000000f, "Blend Mode - Off | Normal | Add | Mult"));
		Params.push_back(ShaderParam("HSM_BZL_WIDTH", 0, 1080, 4, -250.000000f, 5000.000000f, 125.000000f, 1.000000f, "Width - Def 125"));
		Params.push_back(ShaderParam("HSM_BZL_HEIGHT", 0, 1084, 4, -250.000000f, 5000.000000f, 100.000000f, 1.000000f, "Height"));
		Params.push_back(ShaderParam("HSM_BZL_SCALE_OFFSET", 0, 1088, 4, 1.000000f, 200.000000f, 100.000000f, 0.100000f, "Scale Offset"));
		Params.push_back(ShaderParam("HSM_BZL_INNER_CURVATURE_SCALE", 0, 1092, 4, 0.000000f, 8000.000000f, 100.000000f, 10.000000f, "Inner Curvature Scale Multiplier"));
		Params.push_back(ShaderParam("HSM_BZL_INNER_CORNER_RADIUS_SCALE", 0, 1096, 4, 0.000000f, 8000.000000f, 80.000000f, 1.000000f, "Inner Corner Radius Scale - Def 80"));
		Params.push_back(ShaderParam("HSM_BZL_OUTER_CURVATURE_SCALE", 0, 1100, 4, 0.000000f, 500.000000f, 0.000000f, 5.000000f, "Outer Curvature Scale"));
		Params.push_back(ShaderParam("HSM_BZL_INNER_EDGE_THICKNESS", 0, 1104, 4, 0.000000f, 700.000000f, 110.000000f, 10.000000f, "Inner Edge Thickness"));
		Params.push_back(ShaderParam("HSM_BZL_INNER_EDGE_SHARPNESS", 0, 1108, 4, 0.000000f, 90.000000f, 95.000000f, 5.000000f, "Inner Edge Sharpness - Def 95"));
		Params.push_back(ShaderParam("HSM_BZL_OUTER_CORNER_RADIUS_SCALE", 0, 1112, 4, 0.000000f, 4000.000000f, 60.000000f, 1.000000f, "Outer Corner Radius Scale - Def 60"));
		Params.push_back(ShaderParam("HSM_BZL_INNER_EDGE_SHADOW", 0, 1116, 4, 0.000000f, 200.000000f, 70.000000f, 5.000000f, "Opacity of Shadow from Bezel on Tube"));
		Params.push_back(ShaderParam("HSM_BZL_COLOR_HUE", 0, 1120, 4, 0.000000f, 360.000000f, 0.000000f, 1.000000f, "Hue"));
		Params.push_back(ShaderParam("HSM_BZL_COLOR_SATURATION", 0, 1124, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Saturation"));
		Params.push_back(ShaderParam("HSM_BZL_COLOR_VALUE", 0, 1128, 4, 0.000000f, 100.000000f, 10.000000f, 0.200000f, "Value/Brightness - Def 10"));
		Params.push_back(ShaderParam("HSM_BZL_NOISE", 0, 1132, 4, 0.000000f, 100.000000f, 30.000000f, 1.000000f, "Noise - Def 30"));
		Params.push_back(ShaderParam("HSM_BZL_BRIGHTNESS", 0, 1136, 4, 0.000000f, 600.000000f, 30.000000f, 2.000000f, "Base Brightness - Def 30"));
		Params.push_back(ShaderParam("HSM_BZL_BRIGHTNESS_MULT_TOP", 0, 1140, 4, 0.000000f, 1000.000000f, 50.000000f, 2.000000f, "Top Multiplier - Def 50"));
		Params.push_back(ShaderParam("HSM_BZL_BRIGHTNESS_MULT_BOTTOM", 0, 1144, 4, 0.000000f, 1000.000000f, 200.000000f, 2.000000f, "Bottom Multiplier - Def 200"));
		Params.push_back(ShaderParam("HSM_BZL_BRIGHTNESS_MULT_SIDES", 0, 1148, 4, 0.000000f, 1000.000000f, 100.000000f, 2.000000f, "Sides Multiplier"));
		Params.push_back(ShaderParam("HSM_BZL_BRIGHTNESS_MULT_SIDE_LEFT", 0, 1152, 4, 0.000000f, 1000.000000f, 100.000000f, 2.000000f, "Left Side Multiplier"));
		Params.push_back(ShaderParam("HSM_BZL_BRIGHTNESS_MULT_SIDE_RIGHT", 0, 1156, 4, 0.000000f, 1000.000000f, 100.000000f, 2.000000f, "Right Side Multiplier"));
		Params.push_back(ShaderParam("HSM_BZL_HIGHLIGHT", 0, 1160, 4, 0.000000f, 100.000000f, 1.000000f, 0.200000f, "Main Highlight"));
		Params.push_back(ShaderParam("HSM_BZL_INNER_EDGE_HIGHLIGHT", 0, 1164, 4, 0.000000f, 100.000000f, 100.000000f, 5.000000f, "Inner Edge Highlight"));
		Params.push_back(ShaderParam("HSM_BZL_AMBIENT_LIGHTING_MULTIPLIER", 0, 1168, 4, 0.000000f, 100.000000f, 100.000000f, 1.000000f, "Bezel Ambient Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_BZL_AMBIENT2_LIGHTING_MULTIPLIER", 0, 1172, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Ambient 2nd Image Lighting Multiplier"));
		Params.push_back(ShaderParam("HSM_FRM_USE_INDEPENDENT_COLOR", 0, 1176, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Use Independent Frame Color"));
		Params.push_back(ShaderParam("HSM_FRM_COLOR_HUE", 0, 1180, 4, 0.000000f, 360.000000f, 0.000000f, 1.000000f, "Hue"));
		Params.push_back(ShaderParam("HSM_FRM_COLOR_SATURATION", 0, 1184, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Saturation"));
		Params.push_back(ShaderParam("HSM_FRM_COLOR_VALUE", 0, 1188, 4, 0.000000f, 100.000000f, 10.000000f, 0.200000f, "Value/Brightness - Def 10"));
		Params.push_back(ShaderParam("HSM_FRM_NOISE", 0, 1192, 4, 0.000000f, 100.000000f, 30.000000f, 1.000000f, "Noise - Def 30"));
		Params.push_back(ShaderParam("HSM_FRM_OUTER_CURVATURE_SCALE", 0, 1196, 4, 0.000000f, 500.000000f, 0.000000f, 5.000000f, "Frame Outer Curvature Scale"));
		Params.push_back(ShaderParam("HSM_FRM_THICKNESS", 0, 1200, 4, 0.000000f, 2000.000000f, 100.000000f, 5.000000f, "Frame Thickness"));
		Params.push_back(ShaderParam("HSM_FRM_THICKNESS_SCALE_X", 0, 1204, 4, 0.000000f, 1000.000000f, 100.000000f, 2.000000f, "Frame Thickness Scale X"));
		Params.push_back(ShaderParam("HSM_FRM_OUTER_POS_Y", 0, 1208, 4, -100.000000f, 100.000000f, 0.000000f, 0.050000f, "Frame Outer Pos Y"));
		Params.push_back(ShaderParam("HSM_FRM_INNER_EDGE_THICKNESS", 0, 1212, 4, 0.000000f, 5000.000000f, 100.000000f, 5.000000f, "Inner Edge Thickness"));
		Params.push_back(ShaderParam("HSM_FRM_INNER_EDGE_HIGHLIGHT", 0, 1216, 4, 0.000000f, 100.000000f, 14.000000f, 1.000000f, "Inner Edge Highlight"));
		Params.push_back(ShaderParam("HSM_FRM_OUTER_EDGE_THICKNESS", 0, 1220, 4, 0.000000f, 1000.000000f, 100.000000f, 10.000000f, "Outer Edge Thickness"));
		Params.push_back(ShaderParam("HSM_FRM_OUTER_EDGE_SHADING", 0, 1224, 4, 0.000000f, 100.000000f, 50.000000f, 5.000000f, "Outer Edge Shading"));
		Params.push_back(ShaderParam("HSM_FRM_OUTER_CORNER_RADIUS", 0, 1228, 4, 0.000000f, 70.000000f, 5.000000f, 0.050000f, "Outer Corner Radius"));
		Params.push_back(ShaderParam("HSM_BZL_OUTER_POSITION_Y", 0, 1232, 4, -500.000000f, 500.000000f, 0.000000f, 1.000000f, "Outer Edge Position Y"));
		Params.push_back(ShaderParam("HSM_FRM_SHADOW_OPACITY", 0, 1236, 4, 0.000000f, 300.000000f, 100.000000f, 1.000000f, "Shadow Opacity"));
		Params.push_back(ShaderParam("HSM_FRM_SHADOW_WIDTH", 0, 1240, 4, 0.000000f, 500.000000f, 100.000000f, 1.000000f, "Shadow Width"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_FADE", 0, 1244, 4, 1.000000f, 100.000000f, 10.000000f, 0.500000f, "Corner Fade"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_INNER_SPREAD", 0, 1248, 4, 0.000000f, 1000.000000f, 500.000000f, 10.000000f, "Corner Inner Spread"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_OUTER_SPREAD", 0, 1252, 4, 0.000000f, 1000.000000f, 160.000000f, 10.000000f, "Corner Outer Spread"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_ROTATION_OFFSET_TOP", 0, 1256, 4, -90.000000f, 90.000000f, 0.000000f, 0.500000f, "Corner Rotation Offset Top"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_ROTATION_OFFSET_BOTTOM", 0, 1260, 4, -90.000000f, 90.000000f, 0.000000f, 0.500000f, "Corner Rotation Offset Bottom"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_SPREAD_FALLOFF", 0, 1264, 4, 1.000000f, 200.000000f, 100.000000f, 1.000000f, "Corner Spread Falloff"));
		Params.push_back(ShaderParam("HSM_REFLECT_CORNER_FADE_DISTANCE", 0, 1268, 4, 1.000000f, 100.000000f, 100.000000f, 1.000000f, "Corner Fade Distance"));
		Params.push_back(ShaderParam("HSM_REFLECT_GLOBAL_AMOUNT", 0, 1272, 4, 0.000000f, 1000.000000f, 40.000000f, 1.000000f, "Global Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_GLOBAL_GAMMA_ADJUST", 0, 1276, 4, 0.250000f, 3.000000f, 1.200000f, 0.050000f, "Global Gamma Adjust"));
		Params.push_back(ShaderParam("HSM_REFLECT_BEZEL_INNER_EDGE_AMOUNT", 0, 1280, 4, 0.000000f, 300.000000f, 130.000000f, 2.000000f, "Bezel Inner Edge Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_BEZEL_INNER_EDGE_FULLSCREEN_GLOW", 0, 1284, 4, 0.000000f, 1000.000000f, 40.000000f, 1.000000f, "Bezel Inner Edge Fullscreen Glow"));
		Params.push_back(ShaderParam("HSM_REFLECT_FRAME_INNER_EDGE_AMOUNT", 0, 1288, 4, 0.000000f, 300.000000f, 50.000000f, 2.000000f, "Frame Inner Edge Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_FRAME_INNER_EDGE_SHARPNESS", 0, 1292, 4, 0.000000f, 90.000000f, 90.000000f, 2.000000f, "Frame Inner Edge Sharpness"));
		Params.push_back(ShaderParam("HSM_REFLECT_SHOW_TUBE_FX_AMOUNT", 0, 1296, 4, 0.000000f, 100.000000f, 100.000000f, 2.000000f, "Show Tube Effects in Reflection Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_DIRECT_AMOUNT", 0, 1300, 4, 0.000000f, 300.000000f, 150.000000f, 2.000000f, "Direct Reflection"));
		Params.push_back(ShaderParam("HSM_REFLECT_DIFFUSED_AMOUNT", 0, 1304, 4, 0.000000f, 300.000000f, 50.000000f, 2.000000f, "Diffused Reflection"));
		Params.push_back(ShaderParam("HSM_REFLECT_FULLSCREEN_GLOW", 0, 1308, 4, 0.000000f, 600.000000f, 75.000000f, 0.500000f, "FullScreen Glow"));
		Params.push_back(ShaderParam("HSM_REFLECT_FULLSCREEN_GLOW_GAMMA", 0, 1312, 4, 0.000000f, 5.000000f, 3.000000f, 0.020000f, "FullScreen Glow Gamma"));
		Params.push_back(ShaderParam("HSM_REFLECT_FADE_AMOUNT", 0, 1316, 4, 0.000000f, 100.000000f, 100.000000f, 5.000000f, "Fade Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_RADIAL_FADE_WIDTH", 0, 1320, 4, 0.000000f, 1000.000000f, 100.000000f, 1.000000f, "Radial Fade Width"));
		Params.push_back(ShaderParam("HSM_REFLECT_RADIAL_FADE_HEIGHT", 0, 1324, 4, 0.000000f, 1000.000000f, 100.000000f, 1.000000f, "Radial Fade Height"));
		Params.push_back(ShaderParam("HSM_REFLECT_LATERAL_OUTER_FADE_POSITION", 0, 1328, 4, -500.000000f, 500.000000f, -18.000000f, 0.500000f, "Lateral Outer Fade Position"));
		Params.push_back(ShaderParam("HSM_REFLECT_LATERAL_OUTER_FADE_DISTANCE", 0, 1332, 4, 1.000000f, 400.000000f, 20.000000f, 0.500000f, "Lateral Outer Fade Distance"));
		Params.push_back(ShaderParam("HSM_REFLECT_NOISE_AMOUNT", 0, 1336, 4, 0.000000f, 100.000000f, 50.000000f, 1.000000f, "Noise Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_NOISE_SAMPLES", 0, 1340, 4, 0.000000f, 3.000000f, 1.000000f, 1.000000f, "Noise Samples - 0 | 1 | 2 | 12"));
		Params.push_back(ShaderParam("HSM_REFLECT_NOISE_SAMPLE_DISTANCE", 0, 1344, 4, 0.000000f, 500.000000f, 100.000000f, 5.000000f, "Sample Distance"));
		Params.push_back(ShaderParam("HSM_REFLECT_BLUR_NUM_SAMPLES", 0, 1348, 4, 0.000000f, 40.000000f, 12.000000f, 1.000000f, "Blur Samples - 0 for OFF"));
		Params.push_back(ShaderParam("HSM_REFLECT_BLUR_FALLOFF_DISTANCE", 0, 1352, 4, 0.000000f, 1000.000000f, 100.000000f, 1.000000f, "Falloff Distance"));
		Params.push_back(ShaderParam("HSM_REFLECT_BLUR_MIN", 0, 1356, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Min Blur"));
		Params.push_back(ShaderParam("HSM_REFLECT_BLUR_MAX", 0, 1360, 4, 0.000000f, 100.000000f, 95.000000f, 1.000000f, "Max Blur"));
		Params.push_back(ShaderParam("HSM_REFLECT_MASK_IMAGE_AMOUNT", 0, 1364, 4, 0.000000f, 100.000000f, 0.000000f, 1.000000f, "Reflection Image Mask Amount"));
		Params.push_back(ShaderParam("HSM_REFLECT_MASK_FOLLOW_LAYER", 0, 1368, 4, 0.000000f, 7.000000f, 4.000000f, 1.000000f, "Follow Layer - FULL | TUBE | BEZEL |BG|DEVICE|DECAL|CAB|TOP"));
		Params.push_back(ShaderParam("HSM_REFLECT_MASK_FOLLOW_MODE", 0, 1372, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Follow Mode - FOLLOW SCALE & POS | FOLLOW EXACTLY"));
		Params.push_back(ShaderParam("HSM_REFLECT_MASK_BRIGHTNESS", 0, 1376, 4, 0.000000f, 200.000000f, 100.000000f, 1.000000f, "Mask Brightness"));
		Params.push_back(ShaderParam("HSM_REFLECT_MASK_BLACK_LEVEL", 0, 1380, 4, -100.000000f, 100.000000f, 0.000000f, 0.500000f, "Mask Black Level"));
		Params.push_back(ShaderParam("HSM_REFLECT_MASK_MIPMAPPING_BLEND_BIAS", 0, 1384, 4, -5.000000f, 5.000000f, 0.000000f, 0.100000f, "Mipmapping Blend Bias (Affects Sharpness)"));
		Params.push_back(ShaderParam("HSM_GLASS_BORDER_ON", 0, 1388, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Glass Border ON (For Glass Preset)"));
		Params.push_back(ShaderParam("HSM_REFLECT_VIGNETTE_AMOUNT", 0, 1392, 4, 0.000000f, 100.000000f, 0.000000f, 0.500000f, "Glass Reflection Vignette"));
		Params.push_back(ShaderParam("HSM_REFLECT_VIGNETTE_SIZE", 0, 1396, 4, 50.000000f, 200.000000f, 100.000000f, 2.000000f, "Glass Reflection Vignette Size"));
		Params.push_back(ShaderParam("HSM_POTATO_SHOW_BG_OVER_SCREEN", 0, 1400, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_POTATO_COLORIZE_CRT_WITH_BG", 0, 1404, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_POTATO_COLORIZE_BRIGHTNESS", 0, 1408, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_STANDARD_DECAL_SCALE_WITH_FRAME", 0, 1412, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_STANDARD_TOP_SCALE_WITH_FRAME", 0, 1416, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_LAYER_ORDER", 0, 1420, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_LAYER_ORDER", 0, 1424, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CRT_LAYER_ORDER", 0, 1428, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_LAYER_ORDER", 0, 1432, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_LAYER_ORDER", 0, 1436, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_LAYER_ORDER", 0, 1440, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_LAYER_ORDER", 0, 1444, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_LAYER_ORDER", 0, 1448, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_LAYER_ORDER", 0, 1452, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_ASPECT_MODE", 0, 1456, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_EXPLICIT_ASPECT", 0, 1460, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_FOLLOW_LAYER", 0, 1464, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_FOLLOW_FULL_USES_ZOOM", 0, 1468, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_SCALE", 0, 1472, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_SCALE_X", 0, 1476, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_CORNER_RADIUS", 0, 1480, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_POS_X", 0, 1484, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CUTOUT_POS_Y", 0, 1488, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_OPACITY", 0, 1492, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_HUE", 0, 1496, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_COLORIZE_ON", 0, 1500, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_SATURATION", 0, 1504, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_BRIGHTNESS", 0, 1508, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_GAMMA", 0, 1512, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_AMBIENT_LIGHTING_MULTIPLIER", 0, 1516, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_AMBIENT2_LIGHTING_MULTIPLIER", 0, 1520, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_APPLY_AMBIENT_IN_ADD_MODE", 0, 1524, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_BLEND_MODE", 0, 1528, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_SOURCE_MATTE_TYPE", 0, 1532, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_MASK_MODE", 0, 1536, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_CUTOUT_MODE", 0, 1540, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_DUALSCREEN_VIS_MODE", 0, 1544, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_FOLLOW_LAYER", 0, 1548, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_FOLLOW_MODE", 0, 1552, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_FOLLOW_FULL_USES_ZOOM", 0, 1556, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_FILL_MODE", 0, 1560, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_SPLIT_PRESERVE_CENTER", 0, 1564, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_SPLIT_REPEAT_WIDTH", 0, 1568, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_SCALE", 0, 1572, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_SCALE_X", 0, 1576, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_POS_X", 0, 1580, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_POS_Y", 0, 1584, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_WRAP_MODE", 0, 1588, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_BG_MIPMAPPING_BLEND_BIAS", 0, 1592, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_OPACITY", 0, 1596, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_MASK_MODE", 0, 1600, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_CUTOUT_MODE", 0, 1604, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_FOLLOW_LAYER", 0, 1608, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_SCALE", 0, 1612, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_SCALE_X", 0, 1616, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_POS_X", 0, 1620, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_VIEWPORT_VIGNETTE_POS_Y", 0, 1624, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_OPACITY", 0, 1628, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_HUE", 0, 1632, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_COLORIZE_ON", 0, 1636, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_SATURATION", 0, 1640, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_BRIGHTNESS", 0, 1644, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_GAMMA", 0, 1648, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_AMBIENT_LIGHTING_MULTIPLIER", 0, 1652, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_AMBIENT2_LIGHTING_MULTIPLIER", 0, 1656, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_APPLY_AMBIENT_IN_ADD_MODE", 0, 1660, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_BLEND_MODE", 0, 1664, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_SOURCE_MATTE_TYPE", 0, 1668, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_MASK_MODE", 0, 1672, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_CUTOUT_MODE", 0, 1676, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_DUALSCREEN_VIS_MODE", 0, 1680, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_FOLLOW_LAYER", 0, 1684, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_FOLLOW_MODE", 0, 1688, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_FOLLOW_FULL_USES_ZOOM", 0, 1692, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_FILL_MODE", 0, 1696, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_SPLIT_PRESERVE_CENTER", 0, 1700, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_SPLIT_REPEAT_WIDTH", 0, 1704, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_SCALE", 0, 1708, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_SCALE_X", 0, 1712, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_POS_X", 0, 1716, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_POS_Y", 0, 1720, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LED_MIPMAPPING_BLEND_BIAS", 0, 1724, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_OPACITY", 0, 1728, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_HUE", 0, 1732, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_COLORIZE_ON", 0, 1736, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_SATURATION", 0, 1740, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_BRIGHTNESS", 0, 1744, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_GAMMA", 0, 1748, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_AMBIENT_LIGHTING_MULTIPLIER", 0, 1752, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_AMBIENT2_LIGHTING_MULTIPLIER", 0, 1756, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_APPLY_AMBIENT_IN_ADD_MODE", 0, 1760, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_BLEND_MODE", 0, 1764, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_SOURCE_MATTE_TYPE", 0, 1768, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_MASK_MODE", 0, 1772, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_CUTOUT_MODE", 0, 1776, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_DUALSCREEN_VIS_MODE", 0, 1780, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_FOLLOW_LAYER", 0, 1784, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_FOLLOW_MODE", 0, 1788, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_FOLLOW_FULL_USES_ZOOM", 0, 1792, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_FILL_MODE", 0, 1796, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_SPLIT_PRESERVE_CENTER", 0, 1800, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_SPLIT_REPEAT_WIDTH", 0, 1804, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_SCALE", 0, 1808, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_SCALE_X", 0, 1812, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_POS_X", 0, 1816, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_POS_Y", 0, 1820, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICE_MIPMAPPING_BLEND_BIAS", 0, 1824, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_OPACITY", 0, 1828, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_HUE", 0, 1832, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_COLORIZE_ON", 0, 1836, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_SATURATION", 0, 1840, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_BRIGHTNESS", 0, 1844, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_GAMMA", 0, 1848, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_AMBIENT_LIGHTING_MULTIPLIER", 0, 1852, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_AMBIENT2_LIGHTING_MULTIPLIER", 0, 1856, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_APPLY_AMBIENT_IN_ADD_MODE", 0, 1860, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_BLEND_MODE", 0, 1864, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_SOURCE_MATTE_TYPE", 0, 1868, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_MASK_MODE", 0, 1872, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_CUTOUT_MODE", 0, 1876, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_DUALSCREEN_VIS_MODE", 0, 1880, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_FOLLOW_LAYER", 0, 1884, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_FOLLOW_MODE", 0, 1888, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_FOLLOW_FULL_USES_ZOOM", 0, 1892, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_FILL_MODE", 0, 1896, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_SPLIT_PRESERVE_CENTER", 0, 1900, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_SPLIT_REPEAT_WIDTH", 0, 1904, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_SCALE", 0, 1908, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_SCALE_X", 0, 1912, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_POS_X", 0, 1916, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_POS_Y", 0, 1920, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DEVICELED_MIPMAPPING_BLEND_BIAS", 0, 1924, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_FRM_OPACITY", 0, 1928, 4, 0.000000f, 100.000000f, 100.000000f, 5.000000f, "Opacity"));
		Params.push_back(ShaderParam("HSM_FRM_BLEND_MODE", 0, 1932, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_FRM_TEXTURE_OPACITY", 0, 1936, 4, 0.000000f, 100.000000f, 1.500000f, 0.100000f, "Texture Overlay Opacity (Highlight)"));
		Params.push_back(ShaderParam("HSM_FRM_TEXTURE_BLEND_MODE", 0, 1940, 4, 0.000000f, 3.000000f, 2.000000f, 1.000000f, "Texture Overlay Blend Mode - Off | Normal | Add | Mult"));
		Params.push_back(ShaderParam("HSM_DECAL_OPACITY", 0, 1944, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_HUE", 0, 1948, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_COLORIZE_ON", 0, 1952, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_SATURATION", 0, 1956, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_BRIGHTNESS", 0, 1960, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_GAMMA", 0, 1964, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_AMBIENT_LIGHTING_MULTIPLIER", 0, 1968, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_AMBIENT2_LIGHTING_MULTIPLIER", 0, 1972, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_APPLY_AMBIENT_IN_ADD_MODE", 0, 1976, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_BLEND_MODE", 0, 1980, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_SOURCE_MATTE_TYPE", 0, 1984, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_MASK_MODE", 0, 1988, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_CUTOUT_MODE", 0, 1992, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_DUALSCREEN_VIS_MODE", 0, 1996, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_FOLLOW_LAYER", 0, 2000, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_FOLLOW_MODE", 0, 2004, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_FOLLOW_FULL_USES_ZOOM", 0, 2008, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_FILL_MODE", 0, 2012, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_SPLIT_PRESERVE_CENTER", 0, 2016, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_SPLIT_REPEAT_WIDTH", 0, 2020, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_SCALE", 0, 2024, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_SCALE_X", 0, 2028, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_POS_X", 0, 2032, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_POS_Y", 0, 2036, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_DECAL_MIPMAPPING_BLEND_BIAS", 0, 2040, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_OPACITY", 0, 2044, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_HUE", 0, 2048, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_COLORIZE_ON", 0, 2052, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_SATURATION", 0, 2056, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_BRIGHTNESS", 0, 2060, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_GAMMA", 0, 2064, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_AMBIENT_LIGHTING_MULTIPLIER", 0, 2068, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_AMBIENT2_LIGHTING_MULTIPLIER", 0, 2072, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_APPLY_AMBIENT_IN_ADD_MODE", 0, 2076, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_BLEND_MODE", 0, 2080, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_SOURCE_MATTE_TYPE", 0, 2084, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_MASK_MODE", 0, 2088, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_CUTOUT_MODE", 0, 2092, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_DUALSCREEN_VIS_MODE", 0, 2096, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_FOLLOW_LAYER", 0, 2100, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_FOLLOW_MODE", 0, 2104, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_FOLLOW_FULL_USES_ZOOM", 0, 2108, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_FILL_MODE", 0, 2112, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_SPLIT_PRESERVE_CENTER", 0, 2116, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_SPLIT_REPEAT_WIDTH", 0, 2120, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_SCALE", 0, 2124, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_SCALE_X", 0, 2128, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_POS_X", 0, 2132, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_POS_Y", 0, 2136, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_CAB_GLASS_MIPMAPPING_BLEND_BIAS", 0, 2140, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_OPACITY", 0, 2144, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_HUE", 0, 2148, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_COLORIZE_ON", 0, 2152, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_SATURATION", 0, 2156, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_BRIGHTNESS", 0, 2160, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_GAMMA", 0, 2164, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_AMBIENT_LIGHTING_MULTIPLIER", 0, 2168, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_AMBIENT2_LIGHTING_MULTIPLIER", 0, 2172, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_APPLY_AMBIENT_IN_ADD_MODE", 0, 2176, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_BLEND_MODE", 0, 2180, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_SOURCE_MATTE_TYPE", 0, 2184, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_MASK_MODE", 0, 2188, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_CUTOUT_MODE", 0, 2192, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_DUALSCREEN_VIS_MODE", 0, 2196, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_FOLLOW_LAYER", 0, 2200, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_FOLLOW_MODE", 0, 2204, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_FOLLOW_FULL_USES_ZOOM", 0, 2208, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_FILL_MODE", 0, 2212, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_SPLIT_PRESERVE_CENTER", 0, 2216, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_SPLIT_REPEAT_WIDTH", 0, 2220, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_SCALE", 0, 2224, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_SCALE_X", 0, 2228, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_POS_X", 0, 2232, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_POS_Y", 0, 2236, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_MIRROR_WRAP", 0, 2240, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_TOP_MIPMAPPING_BLEND_BIAS", 0, 2244, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_RENDER_SIMPLE_MODE", 0, 2248, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_RENDER_SIMPLE_MASK_TYPE", 0, 2252, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_LAYERING_DEBUG_MASK_MODE", 0, 2256, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_BLEND_MODE", 0, 2260, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_FLIP_VERTICAL", 0, 2264, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_NOISE_BLEND_MODE", 0, 2268, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_NOISE_HOLD", 0, 2272, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_NOISE_FADE_OUT", 0, 2276, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_BLACK_HOLD", 0, 2280, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_BLACK_FADE_OUT", 0, 2284, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_COLOR_BLEND_MODE", 0, 2288, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_OVER_SOLID_COLOR", 0, 2292, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_PLACEMENT", 0, 2296, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_HEIGHT", 0, 2300, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_POS_X", 0, 2304, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_POS_Y", 0, 2308, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_WHEN_TO_SHOW", 0, 2312, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SPEED", 0, 2316, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_WAIT", 0, 2320, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_FADE_IN", 0, 2324, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_HOLD", 0, 2328, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_LOGO_FADE_OUT", 0, 2332, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_COLOR_HUE", 0, 2336, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_COLOR_SAT", 0, 2340, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_COLOR_VALUE", 0, 2344, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_COLOR_HOLD", 0, 2348, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_INTRO_SOLID_COLOR_FADE_OUT", 0, 2352, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("GAMMA_INPUT", 0, 2356, 4, 0.100000f, 5.000000f, 2.400000f, 0.050000f, "Gamma In (Game Embedded Gamma) Def 2.4"));
		Params.push_back(ShaderParam("gamma_out", 0, 2360, 4, 0.100000f, 5.000000f, 2.400000f, 0.050000f, "Gamma Out (Electron Gun Gamma) Def 2.4"));
		Params.push_back(ShaderParam("post_br", 0, 2364, 4, 0.010000f, 5.000000f, 1.000000f, 0.010000f, "Post CRT Brightness"));
		Params.push_back(ShaderParam("post_br_affect_black_level", 0, 2368, 4, 0.000000f, 100.000000f, 100.000000f, 10.000000f, "Post CRT Brightness Affects Grade Black Level"));
		Params.push_back(ShaderParam("m_glow", 0, 2372, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("m_glow_low", 0, 2376, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("m_glow_high", 0, 2380, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("m_glow_dist", 0, 2384, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("m_glow_mask", 0, 2388, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("smask_mit", 0, 2392, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("bmask", 0, 2396, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("bmask1", 0, 2400, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hmask1", 0, 2404, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("glow", 0, 2408, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("bloom", 0, 2412, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mask_bloom", 0, 2416, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("bloom_dist", 0, 2420, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("halation", 0, 2424, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("TATE", 0, 2428, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("IOS", 0, 2432, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("HSM_OVERSCAN_RASTER_BLOOM_ON", 0, 2436, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Raster Bloom ON -- (Scaling based on average luma)"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_RASTER_BLOOM_MODE", 0, 2440, 4, 0.000000f, 2.000000f, 2.000000f, 1.000000f, "Raster Bloom Overscan Mode"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_RASTER_BLOOM_AMOUNT", 0, 2444, 4, 0.000000f, 20.000000f, 5.000000f, 1.000000f, "Raster Bloom %"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_RASTER_BLOOM_NEUTRAL_RANGE", 0, 2448, 4, 0.000000f, 1.000000f, 0.300000f, 0.050000f, "Raster Bloom Overscan Neutral Area"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_RASTER_BLOOM_NEUTRAL_RANGE_CENTER", 0, 2452, 4, 0.000000f, 1.000000f, 0.500000f, 0.050000f, "Raster Bloom Overscan Neutral Area Center"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_AMOUNT", 0, 2456, 4, -50.000000f, 100.000000f, 0.000000f, 0.500000f, "Overscan %"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_X", 0, 2460, 4, -50.000000f, 100.000000f, 0.000000f, 0.500000f, "Overscan X %"));
		Params.push_back(ShaderParam("HSM_OVERSCAN_Y", 0, 2464, 4, -50.000000f, 100.000000f, 0.000000f, 0.500000f, "Overscan Y %"));
		Params.push_back(ShaderParam("prescalex", 0, 2468, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("c_shape", 0, 2472, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("sborder", 0, 2476, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("csize", 0, 2480, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("bsize1", 0, 2484, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("warpX", 0, 2488, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("warpY", 0, 2492, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("gamma_c", 0, 2496, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("brightboost", 0, 2500, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("brightboost1", 0, 2504, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("clips", 0, 2508, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("blendMode", 0, 2512, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("gsl", 0, 2516, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("scanline1", 0, 2520, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("scanline2", 0, 2524, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("beam_min", 0, 2528, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("beam_max", 0, 2532, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("tds", 0, 2536, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("beam_size", 0, 2540, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("vertmask", 0, 2544, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("scans", 0, 2548, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("scan_falloff", 0, 2552, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("spike", 0, 2556, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("ssharp", 0, 2560, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("ring", 0, 2564, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("no_scanlines", 0, 2568, 4, 0.000000f, 1.500000f, 0.000000f, 0.050000f, "No-Scanline Mode (Guest Advanced Only)"));
		Params.push_back(ShaderParam("scangamma", 0, 2572, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("rolling_scan", 0, 2576, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("h_sharp", 0, 2580, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("s_sharp", 0, 2584, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("smart_ei", 0, 2588, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("ei_limit", 0, 2592, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("sth", 0, 2596, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("barspeed", 0, 2600, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("barintensity", 0, 2604, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("bardir", 0, 2608, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("shadowMask", 0, 2612, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("maskstr", 0, 2616, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mcut", 0, 2620, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("maskboost", 0, 2624, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("masksize", 0, 2628, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mask_zoom", 0, 2632, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mzoom_sh", 0, 2636, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("masksizeautothreshold", 0, 2640, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("maskDark", 0, 2644, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("maskLight", 0, 2648, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mask_gamma", 0, 2652, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("slotmask", 0, 2656, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("slotmask1", 0, 2660, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("slotwidth", 0, 2664, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("double_slot", 0, 2668, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("slotms", 0, 2672, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("smoothmask", 0, 2676, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mshift", 0, 2680, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("mask_layout", 0, 2684, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("GDV_DECONVERGENCE_ON", 0, 2688, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("decons", 0, 2692, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconrr", 0, 2696, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconrg", 0, 2700, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconrb", 0, 2704, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconrry", 0, 2708, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconrgy", 0, 2712, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconrby", 0, 2716, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("deconsmooth", 0, 2720, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("dctypex", 0, 2724, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("dctypey", 0, 2728, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("dcscalemode", 0, 2732, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("GDV_NOISE_ON", 0, 2736, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("addnoised", 0, 2740, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("noisetype", 0, 2744, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("noiseresd", 0, 2748, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("noiseresd4kmult", 0, 2752, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_grade_on", 0, 2756, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_Dark_to_Dim", 0, 2760, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_GCompress", 0, 2764, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("wp_temperature", 0, 2768, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_analog", 0, 2772, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_digital", 0, 2776, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_sfixes", 0, 2780, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_MD_Pal", 0, 2784, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_SMS_bl", 0, 2788, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_CRT_br", 0, 2792, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_CRT_bg", 0, 2796, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_CRT_bb", 0, 2800, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_CRT_rf", 0, 2804, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_CRT_sl", 0, 2808, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_satr", 0, 2812, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_satg", 0, 2816, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("g_satb", 0, 2820, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("AS", 0, 2824, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("asat", 0, 2828, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hcrt_h_size", 0, 2832, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hcrt_v_size", 0, 2836, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hcrt_h_cent", 0, 2840, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hcrt_v_cent", 0, 2844, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hcrt_pin_phase", 0, 2848, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("hcrt_pin_amp", 0, 2852, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("CRTPass", 2));
		Samplers.push_back(ShaderSampler("PostCRTPass", 3));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
