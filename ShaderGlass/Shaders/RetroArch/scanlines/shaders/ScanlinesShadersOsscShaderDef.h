/*
ShaderGlass shader scanlines/shaders\ossc imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/scanlines/shaders/ossc.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// An OSSC-like shader
// By DariusG @May/2023

*/

#pragma once

namespace RetroArchScanlinesShadersOsscShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,220,85,
189,136,2,228,17,69,
249,69,249,111,191,250,
94,91,1,0,0,0,
24,15,0,0,5,0,
0,0,52,0,0,0,
228,4,0,0,24,5,
0,0,76,5,0,0,
124,14,0,0,82,68,
69,70,168,4,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
127,4,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,15,0,0,0,
208,0,0,0,96,0,
0,0,0,0,0,0,
0,0,0,0,40,3,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,68,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,104,3,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
68,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
124,3,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,68,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,142,3,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,168,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,204,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
228,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
8,4,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,228,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,23,4,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,228,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,38,4,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
228,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
51,4,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,228,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,61,4,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,228,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,71,4,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
228,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
81,4,0,0,80,0,
0,0,4,0,0,0,
2,0,0,0,228,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,91,4,
0,0,84,0,0,0,
4,0,0,0,2,0,
0,0,228,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,101,4,0,0,
88,0,0,0,4,0,
0,0,2,0,0,0,
228,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
113,4,0,0,92,0,
0,0,4,0,0,0,
2,0,0,0,228,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,58,3,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,160,3,0,0,
112,97,114,97,109,115,
95,79,86,69,82,83,
67,65,78,0,102,108,
111,97,116,0,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,220,3,0,0,
112,97,114,97,109,115,
95,65,83,80,69,67,
84,120,0,112,97,114,
97,109,115,95,65,83,
80,69,67,84,121,0,
112,97,114,97,109,115,
95,76,73,78,69,83,
0,112,97,114,97,109,
115,95,76,49,0,112,
97,114,97,109,115,95,
76,50,0,112,97,114,
97,109,115,95,76,51,
0,112,97,114,97,109,
115,95,76,52,0,112,
97,114,97,109,115,95,
76,53,0,112,97,114,
97,109,115,95,84,65,
84,69,0,112,97,114,
97,109,115,95,72,89,
66,82,73,68,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,40,9,
0,0,80,0,0,0,
74,2,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,1,0,
0,0,6,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,4,0,0,0,
14,0,0,9,18,0,
16,0,0,0,0,0,
26,128,32,0,1,0,
0,0,2,0,0,0,
26,128,32,0,1,0,
0,0,1,0,0,0,
24,0,0,8,34,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,26,128,32,0,
1,0,0,0,3,0,
0,0,65,0,0,5,
66,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,66,0,
0,5,130,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
55,0,0,9,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
14,0,0,7,34,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,50,0,
0,15,194,0,16,0,
0,0,0,0,6,20,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,64,0,0,
0,64,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,128,191,
0,0,128,191,14,0,
0,9,18,0,16,0,
1,0,0,0,42,128,
32,0,1,0,0,0,
3,0,0,0,58,128,
32,0,1,0,0,0,
3,0,0,0,14,0,
0,8,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
10,128,32,0,1,0,
0,0,2,0,0,0,
56,0,0,8,18,0,
16,0,1,0,0,0,
10,0,16,0,1,0,
0,0,26,128,32,0,
1,0,0,0,2,0,
0,0,14,0,0,7,
18,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
56,0,0,7,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,230,10,16,0,
0,0,0,0,50,0,
0,15,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,0,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,0,
0,0,0,0,56,0,
0,8,194,0,16,0,
0,0,0,0,6,20,
16,0,0,0,0,0,
6,132,32,0,1,0,
0,0,2,0,0,0,
24,0,0,8,18,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
128,63,42,128,32,0,
1,0,0,0,5,0,
0,0,55,0,0,9,
66,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,178,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
70,123,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
1,0,0,0,70,3,
16,0,0,0,0,0,
2,64,0,0,208,179,
89,62,89,23,55,63,
152,221,147,61,0,0,
0,0,24,0,0,8,
34,0,16,0,1,0,
0,0,1,64,0,0,
0,0,160,64,10,128,
32,0,1,0,0,0,
4,0,0,0,31,0,
4,3,26,0,16,0,
1,0,0,0,56,0,
0,7,34,0,16,0,
1,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,205,204,
76,62,26,0,0,5,
34,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,50,0,
0,11,66,0,16,0,
1,0,0,0,10,0,
16,128,65,0,0,0,
1,0,0,0,58,128,
32,0,1,0,0,0,
5,0,0,0,1,64,
0,0,0,0,128,63,
50,0,0,14,114,0,
16,0,2,0,0,0,
150,135,32,128,65,0,
0,0,1,0,0,0,
4,0,0,0,166,10,
16,0,1,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,49,0,0,10,
242,0,16,0,3,0,
0,0,86,5,16,0,
1,0,0,0,2,64,
0,0,205,204,76,62,
205,204,204,62,154,153,
25,63,205,204,76,63,
50,0,0,14,98,0,
16,0,1,0,0,0,
6,129,32,128,65,0,
0,0,1,0,0,0,
5,0,0,0,166,10,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,128,63,
0,0,128,63,0,0,
0,0,55,0,0,9,
34,0,16,0,1,0,
0,0,58,0,16,0,
3,0,0,0,26,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,55,0,0,9,
34,0,16,0,1,0,
0,0,42,0,16,0,
3,0,0,0,42,0,
16,0,2,0,0,0,
26,0,16,0,1,0,
0,0,55,0,0,9,
34,0,16,0,1,0,
0,0,26,0,16,0,
3,0,0,0,26,0,
16,0,2,0,0,0,
26,0,16,0,1,0,
0,0,55,0,0,9,
34,0,16,0,1,0,
0,0,10,0,16,0,
3,0,0,0,10,0,
16,0,2,0,0,0,
26,0,16,0,1,0,
0,0,56,0,0,7,
226,0,16,0,1,0,
0,0,6,13,16,0,
0,0,0,0,86,5,
16,0,1,0,0,0,
18,0,0,1,24,0,
0,8,18,0,16,0,
2,0,0,0,1,64,
0,0,0,0,128,64,
10,128,32,0,1,0,
0,0,4,0,0,0,
31,0,4,3,10,0,
16,0,2,0,0,0,
56,0,0,7,18,0,
16,0,2,0,0,0,
42,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,62,26,0,
0,5,18,0,16,0,
2,0,0,0,10,0,
16,0,2,0,0,0,
50,0,0,11,34,0,
16,0,2,0,0,0,
10,0,16,128,65,0,
0,0,1,0,0,0,
58,128,32,0,1,0,
0,0,5,0,0,0,
1,64,0,0,0,0,
128,63,49,0,0,10,
210,0,16,0,2,0,
0,0,6,0,16,0,
2,0,0,0,2,64,
0,0,0,0,128,62,
0,0,0,0,0,0,
0,63,0,0,64,63,
50,0,0,14,114,0,
16,0,3,0,0,0,
150,135,32,128,65,0,
0,0,1,0,0,0,
4,0,0,0,86,5,
16,0,2,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,50,0,0,11,
34,0,16,0,2,0,
0,0,10,128,32,128,
65,0,0,0,1,0,
0,0,5,0,0,0,
26,0,16,0,2,0,
0,0,1,64,0,0,
0,0,128,63,55,0,
0,9,34,0,16,0,
2,0,0,0,58,0,
16,0,2,0,0,0,
42,0,16,0,3,0,
0,0,26,0,16,0,
2,0,0,0,55,0,
0,9,34,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
26,0,16,0,3,0,
0,0,26,0,16,0,
2,0,0,0,55,0,
0,9,18,0,16,0,
2,0,0,0,10,0,
16,0,2,0,0,0,
10,0,16,0,3,0,
0,0,26,0,16,0,
2,0,0,0,56,0,
0,7,226,0,16,0,
1,0,0,0,6,13,
16,0,0,0,0,0,
6,0,16,0,2,0,
0,0,18,0,0,1,
24,0,0,8,18,0,
16,0,2,0,0,0,
1,64,0,0,0,0,
64,64,10,128,32,0,
1,0,0,0,4,0,
0,0,31,0,4,3,
10,0,16,0,2,0,
0,0,56,0,0,7,
18,0,16,0,2,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,171,170,170,62,
26,0,0,5,18,0,
16,0,2,0,0,0,
10,0,16,0,2,0,
0,0,50,0,0,11,
34,0,16,0,2,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,58,128,32,0,
1,0,0,0,5,0,
0,0,1,64,0,0,
0,0,128,63,49,0,
0,10,82,0,16,0,
2,0,0,0,6,0,
16,0,2,0,0,0,
2,64,0,0,171,170,
170,62,0,0,0,0,
171,170,42,63,0,0,
0,0,50,0,0,14,
114,0,16,0,3,0,
0,0,150,135,32,128,
65,0,0,0,1,0,
0,0,4,0,0,0,
86,5,16,0,2,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,55,0,
0,9,34,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
26,0,16,0,3,0,
0,0,42,0,16,0,
3,0,0,0,55,0,
0,9,18,0,16,0,
2,0,0,0,10,0,
16,0,2,0,0,0,
10,0,16,0,3,0,
0,0,26,0,16,0,
2,0,0,0,56,0,
0,7,226,0,16,0,
1,0,0,0,6,13,
16,0,0,0,0,0,
6,0,16,0,2,0,
0,0,18,0,0,1,
24,0,0,8,18,0,
16,0,2,0,0,0,
1,64,0,0,0,0,
0,64,10,128,32,0,
1,0,0,0,4,0,
0,0,14,0,0,11,
34,0,16,0,2,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,10,128,
32,0,1,0,0,0,
4,0,0,0,56,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
26,0,16,0,2,0,
0,0,26,0,0,5,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,49,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
26,0,16,0,2,0,
0,0,50,0,0,11,
18,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,58,128,32,0,
1,0,0,0,5,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,14,98,0,16,0,
2,0,0,0,86,134,
32,128,65,0,0,0,
1,0,0,0,4,0,
0,0,6,0,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,128,63,0,0,
128,63,0,0,0,0,
55,0,0,9,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,26,0,16,0,
2,0,0,0,42,0,
16,0,2,0,0,0,
56,0,0,7,226,0,
16,0,2,0,0,0,
166,10,16,0,0,0,
0,0,6,13,16,0,
0,0,0,0,55,0,
0,9,226,0,16,0,
1,0,0,0,6,0,
16,0,2,0,0,0,
86,14,16,0,2,0,
0,0,6,13,16,0,
0,0,0,0,21,0,
0,1,21,0,0,1,
21,0,0,1,54,0,
0,5,114,32,16,0,
0,0,0,0,150,7,
16,0,1,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,62,0,0,1,
83,84,65,84,148,0,
0,0,72,0,0,0,
4,0,0,0,0,0,
0,0,2,0,0,0,
46,0,0,0,0,0,
0,0,0,0,0,0,
4,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
2,0,0,0,13,0,
0,0,6,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};

}

namespace RetroArch
{
class ScanlinesShadersOsscShaderDef : public ShaderDef
{
public:
	ScanlinesShadersOsscShaderDef() : ShaderDef{}
	{
		Name = "ossc";
		VertexByteCode = RetroArchScanlinesShadersOsscShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchScanlinesShadersOsscShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchScanlinesShadersOsscShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchScanlinesShadersOsscShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OVERSCAN", -1, 52, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Overscan"));
		Params.push_back(ShaderParam("ASPECTx", -1, 56, 4, 1.000000f, 32.000000f, 4.000000f, 1.000000f, "Aspect Ratio X"));
		Params.push_back(ShaderParam("ASPECTy", -1, 60, 4, 1.000000f, 32.000000f, 3.000000f, 1.000000f, "Aspect Ratio Y"));
		Params.push_back(ShaderParam("LINES", -1, 64, 4, 2.000000f, 5.000000f, 4.000000f, 1.000000f, "Lines"));
		Params.push_back(ShaderParam("L1", -1, 68, 4, 0.000000f, 1.000000f, 0.250000f, 0.010000f, "Line 1 Scanline Strength %"));
		Params.push_back(ShaderParam("L2", -1, 72, 4, 0.000000f, 1.000000f, 0.000000f, 0.010000f, "Line 2 Scanline Strength %"));
		Params.push_back(ShaderParam("L3", -1, 76, 4, 0.000000f, 1.000000f, 0.000000f, 0.010000f, "Line 3 Scanline Strength %"));
		Params.push_back(ShaderParam("L4", -1, 80, 4, 0.000000f, 1.000000f, 0.400000f, 0.010000f, "Line 4 Scanline Strength %"));
		Params.push_back(ShaderParam("L5", -1, 84, 4, 0.000000f, 1.000000f, 0.500000f, 0.010000f, "Line 5 Scanline Strength %"));
		Params.push_back(ShaderParam("TATE", -1, 88, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "TATE mode"));
		Params.push_back(ShaderParam("HYBRID", -1, 92, 4, 0.000000f, 1.000000f, 0.000000f, 0.010000f, "Scanline Hybrid Blend % (depend on pixel overlayed)"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
