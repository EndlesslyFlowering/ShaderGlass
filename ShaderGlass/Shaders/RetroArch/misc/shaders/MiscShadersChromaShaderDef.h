/*
ShaderGlass shader misc/shaders\chroma imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/misc/shaders/chroma.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// Chroma / YIQ
// by torridgristle

*/

#pragma once

namespace RetroArchMiscShadersChromaShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,110,239,
1,38,44,138,120,137,
121,214,212,137,93,170,
129,5,1,0,0,0,
140,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
240,2,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,8,1,
0,0,80,0,1,0,
66,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,6,0,
0,0,1,0,0,0,
0,0,0,0,4,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,196,106,
127,174,103,190,89,218,
219,237,236,227,99,2,
192,153,1,0,0,0,
100,16,0,0,5,0,
0,0,52,0,0,0,
252,5,0,0,48,6,
0,0,100,6,0,0,
200,15,0,0,82,68,
69,70,192,5,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
149,5,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,19,0,0,0,
208,0,0,0,112,0,
0,0,0,0,0,0,
0,0,0,0,200,3,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,228,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,8,4,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
228,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
28,4,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,228,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,46,4,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,72,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,108,4,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
136,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
172,4,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,136,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,194,4,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,136,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,216,4,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
136,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
235,4,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,136,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,250,4,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,136,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,9,5,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
136,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
22,5,0,0,80,0,
0,0,4,0,0,0,
2,0,0,0,136,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,35,5,
0,0,84,0,0,0,
4,0,0,0,2,0,
0,0,136,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,52,5,0,0,
88,0,0,0,4,0,
0,0,2,0,0,0,
136,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
69,5,0,0,92,0,
0,0,4,0,0,0,
2,0,0,0,136,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,85,5,
0,0,96,0,0,0,
4,0,0,0,2,0,
0,0,136,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,101,5,0,0,
100,0,0,0,4,0,
0,0,2,0,0,0,
136,4,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
117,5,0,0,104,0,
0,0,4,0,0,0,
2,0,0,0,136,4,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,133,5,
0,0,108,0,0,0,
4,0,0,0,2,0,
0,0,136,4,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,218,3,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
64,4,0,0,112,97,
114,97,109,115,95,66,
114,105,103,104,116,101,
110,76,101,118,101,108,
0,102,108,111,97,116,
0,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,129,4,
0,0,112,97,114,97,
109,115,95,66,114,105,
103,104,116,101,110,65,
109,111,117,110,116,0,
112,97,114,97,109,115,
95,67,111,110,116,114,
97,115,116,65,109,111,
117,110,116,0,112,97,
114,97,109,115,95,67,
104,114,111,109,97,76,
101,118,101,108,0,112,
97,114,97,109,115,95,
73,65,109,111,117,110,
116,0,112,97,114,97,
109,115,95,81,65,109,
111,117,110,116,0,112,
97,114,97,109,115,95,
73,84,105,108,116,0,
112,97,114,97,109,115,
95,81,84,105,108,116,
0,112,97,114,97,109,
115,95,73,84,105,108,
116,72,105,103,104,0,
112,97,114,97,109,115,
95,81,84,105,108,116,
72,105,103,104,0,112,
97,114,97,109,115,95,
73,84,105,108,116,77,
105,100,0,112,97,114,
97,109,115,95,81,84,
105,108,116,77,105,100,
0,112,97,114,97,109,
115,95,73,84,105,108,
116,76,111,119,0,112,
97,114,97,109,115,95,
81,84,105,108,116,76,
111,119,0,112,97,114,
97,109,115,95,76,117,
109,66,111,111,115,116,
0,77,105,99,114,111,
115,111,102,116,32,40,
82,41,32,72,76,83,
76,32,83,104,97,100,
101,114,32,67,111,109,
112,105,108,101,114,32,
49,48,46,49,0,171,
171,171,73,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,92,9,0,0,
80,0,0,0,87,2,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
7,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
4,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,0,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,1,0,0,0,
2,64,0,0,162,69,
22,63,27,133,140,190,
134,200,5,191,0,0,
0,0,70,2,16,0,
0,0,0,0,16,0,
0,10,34,0,16,0,
1,0,0,0,2,64,
0,0,213,120,233,61,
149,124,164,190,22,77,
159,62,0,0,0,0,
70,2,16,0,0,0,
0,0,16,0,0,10,
18,0,16,0,0,0,
0,0,2,64,0,0,
135,22,153,62,216,128,
24,63,236,135,88,62,
0,0,0,0,70,2,
16,0,0,0,0,0,
49,0,0,10,98,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,6,1,16,0,
1,0,0,0,49,0,
0,10,194,0,16,0,
1,0,0,0,6,4,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,30,0,0,8,
98,0,16,0,0,0,
0,0,86,6,16,128,
65,0,0,0,0,0,
0,0,166,11,16,0,
1,0,0,0,43,0,
0,5,98,0,16,0,
0,0,0,0,86,6,
16,0,0,0,0,0,
0,0,0,11,194,0,
16,0,1,0,0,0,
6,4,16,128,193,0,
0,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,128,63,0,0,
128,63,47,0,0,5,
194,0,16,0,1,0,
0,0,166,14,16,0,
1,0,0,0,56,0,
0,8,194,0,16,0,
1,0,0,0,166,14,
16,0,1,0,0,0,
6,128,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,194,0,
16,0,1,0,0,0,
166,14,16,0,1,0,
0,0,0,0,0,11,
194,0,16,0,1,0,
0,0,166,14,16,128,
65,0,0,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,128,63,
0,0,128,63,50,0,
0,10,98,0,16,0,
0,0,0,0,166,11,
16,0,1,0,0,0,
86,6,16,0,0,0,
0,0,6,1,16,128,
65,0,0,0,1,0,
0,0,50,0,0,10,
98,0,16,0,0,0,
0,0,86,134,32,0,
1,0,0,0,4,0,
0,0,86,6,16,0,
0,0,0,0,6,1,
16,0,1,0,0,0,
0,0,0,11,242,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,191,0,0,0,191,
0,0,0,191,0,0,
0,191,70,142,32,0,
1,0,0,0,5,0,
0,0,0,0,0,7,
130,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
0,0,0,8,18,0,
16,0,1,0,0,0,
58,0,16,128,193,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
128,63,50,0,0,9,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,0,0,0,7,
130,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,191,
52,0,0,7,18,0,
16,0,1,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,50,0,
0,10,130,0,16,0,
0,0,0,0,58,0,
16,128,193,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
1,64,0,0,0,0,
128,63,0,0,0,7,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
15,0,0,7,66,0,
16,0,1,0,0,0,
166,10,16,0,1,0,
0,0,6,0,16,0,
1,0,0,0,15,0,
0,7,18,0,16,0,
1,0,0,0,86,5,
16,0,1,0,0,0,
6,0,16,0,1,0,
0,0,15,0,0,7,
34,0,16,0,1,0,
0,0,246,15,16,0,
1,0,0,0,246,15,
16,0,0,0,0,0,
0,0,0,8,130,0,
16,0,1,0,0,0,
42,0,16,128,193,0,
0,0,1,0,0,0,
1,64,0,0,0,0,
128,63,50,0,0,9,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,0,0,0,11,
114,0,16,0,2,0,
0,0,2,64,0,0,
0,0,0,191,0,0,
0,191,0,0,0,191,
0,0,0,0,70,130,
32,0,1,0,0,0,
6,0,0,0,15,0,
0,7,130,0,16,0,
0,0,0,0,6,0,
16,0,2,0,0,0,
246,15,16,0,0,0,
0,0,0,0,0,8,
66,0,16,0,1,0,
0,0,58,0,16,128,
193,0,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,9,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,0,0,
0,11,194,0,16,0,
1,0,0,0,6,0,
16,128,65,0,0,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
128,63,0,0,0,63,
52,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,0,50,0,
0,11,66,0,16,0,
1,0,0,0,42,0,
16,128,65,0,0,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
0,0,0,7,66,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,10,18,0,16,0,
3,0,0,0,58,128,
32,0,1,0,0,0,
6,0,0,0,42,0,
16,0,1,0,0,0,
10,0,16,0,0,0,
0,0,0,0,0,7,
18,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
15,0,0,7,130,0,
16,0,0,0,0,0,
166,10,16,0,2,0,
0,0,6,0,16,0,
0,0,0,0,15,0,
0,7,18,0,16,0,
0,0,0,0,86,5,
16,0,2,0,0,0,
6,0,16,0,0,0,
0,0,0,0,0,8,
66,0,16,0,1,0,
0,0,58,0,16,128,
193,0,0,0,0,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,9,66,0,16,0,
3,0,0,0,42,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,58,0,16,0,
0,0,0,0,0,0,
0,8,66,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,191,
58,128,32,0,1,0,
0,0,4,0,0,0,
0,0,0,7,66,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,0,0,
0,8,130,0,16,0,
0,0,0,0,42,0,
16,128,193,0,0,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
50,0,0,9,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
0,0,0,8,66,0,
16,0,0,0,0,0,
10,0,16,128,193,0,
0,0,1,0,0,0,
1,64,0,0,0,0,
128,63,50,0,0,9,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,0,0,0,8,
66,0,16,0,0,0,
0,0,26,0,16,128,
193,0,0,0,1,0,
0,0,1,64,0,0,
0,0,128,63,50,0,
0,9,34,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,26,0,16,0,
1,0,0,0,0,0,
0,8,66,0,16,0,
0,0,0,0,10,0,
16,128,193,0,0,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
50,0,0,9,34,0,
16,0,3,0,0,0,
26,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
16,32,0,10,18,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,70,2,16,0,
3,0,0,0,16,32,
0,10,34,0,16,0,
0,0,0,0,2,64,
0,0,20,208,116,63,
177,80,139,190,45,178,
141,191,0,0,0,0,
70,2,16,0,3,0,
0,0,16,32,0,10,
66,0,16,0,0,0,
0,0,2,64,0,0,
219,249,30,63,2,188,
37,191,85,48,218,63,
0,0,0,0,70,2,
16,0,3,0,0,0,
0,0,0,11,114,0,
16,0,1,0,0,0,
70,2,16,128,65,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,47,0,0,5,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,56,0,
0,8,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
86,133,32,0,1,0,
0,0,3,0,0,0,
25,0,0,5,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,0,0,0,9,
114,0,16,0,1,0,
0,0,70,2,16,128,
65,0,0,0,0,0,
0,0,70,2,16,128,
65,0,0,0,1,0,
0,0,0,0,0,10,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,0,0,
50,0,0,10,114,0,
16,0,0,0,0,0,
166,138,32,0,1,0,
0,0,3,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,50,0,0,16,
114,0,16,0,2,0,
0,0,70,2,16,128,
65,0,0,0,0,0,
0,0,2,64,0,0,
0,0,0,64,0,0,
0,64,0,0,0,64,
0,0,0,0,2,64,
0,0,0,0,64,64,
0,0,64,64,0,0,
64,64,0,0,0,0,
50,0,0,10,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,70,2,16,0,
2,0,0,0,70,2,
16,128,65,0,0,0,
0,0,0,0,50,0,
0,10,114,32,16,0,
0,0,0,0,246,143,
32,0,1,0,0,0,
3,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,0,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,62,0,
0,1,83,84,65,84,
148,0,0,0,68,0,
0,0,4,0,0,0,
0,0,0,0,2,0,
0,0,63,0,0,0,
1,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class MiscShadersChromaShaderDef : public ShaderDef
{
public:
	MiscShadersChromaShaderDef() : ShaderDef{}
	{
		Name = "chroma";
		VertexByteCode = RetroArchMiscShadersChromaShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchMiscShadersChromaShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchMiscShadersChromaShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchMiscShadersChromaShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("BrightenLevel", -1, 52, 4, 1.000000f, 10.000000f, 2.000000f, 1.000000f, "Brighten Level"));
		Params.push_back(ShaderParam("BrightenAmount", -1, 56, 4, 0.000000f, 1.000000f, 0.000000f, 0.100000f, "Brighten Amount"));
		Params.push_back(ShaderParam("ContrastAmount", -1, 60, 4, 0.000000f, 1.000000f, 0.000000f, 0.100000f, "Contrast Amount"));
		Params.push_back(ShaderParam("ChromaLevel", -1, 64, 4, 1.000000f, 10.000000f, 2.000000f, 1.000000f, "Chroma Level"));
		Params.push_back(ShaderParam("IAmount", -1, 68, 4, 0.000000f, 1.000000f, 0.000000f, 0.100000f, "I Amount"));
		Params.push_back(ShaderParam("QAmount", -1, 72, 4, 0.000000f, 1.000000f, 0.000000f, 0.100000f, "Q Amount"));
		Params.push_back(ShaderParam("ITilt", -1, 76, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "I Tilt"));
		Params.push_back(ShaderParam("QTilt", -1, 80, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "Q Tilt"));
		Params.push_back(ShaderParam("ITiltHigh", -1, 84, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "I Tilt High"));
		Params.push_back(ShaderParam("QTiltHigh", -1, 88, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "Q Tilt High"));
		Params.push_back(ShaderParam("ITiltMid", -1, 92, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "I Tilt Mid"));
		Params.push_back(ShaderParam("QTiltMid", -1, 96, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "Q Tilt Mid"));
		Params.push_back(ShaderParam("ITiltLow", -1, 100, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "I Tilt Low"));
		Params.push_back(ShaderParam("QTiltLow", -1, 104, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "Q Tilt Low"));
		Params.push_back(ShaderParam("LumBoost", -1, 108, 4, 0.000000f, 1.000000f, 0.000000f, 0.100000f, "Luma Boost"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
