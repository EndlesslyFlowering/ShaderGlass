/*
ShaderGlass shader reshade/shaders/magicbloom\magicbloom_blend imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/reshade/shaders/magicbloom/magicbloom_blend.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

//Statics
// #ifndef MAGICBLOOM_NOADAPT
// #endif
// #define CONST_LOG2(v) (((v) & 0xAAAAAAAA) != 0) | ((((v) & 0xFFFF0000) != 0) << 4) | ((((v) & 0xFF00FF00) != 0) << 3) | ((((v) & 0xF0F0F0F0) != 0) << 2) | ((((v) & 0xCCCCCCCC) != 0) << 1)
//Functions
//Final blend shader
// TODO need to use the feedback, also the blend is possibly the last pass
// Without adaptation it seems 100.0 exposure is needed for bloom to look bright enough.
// If we're to display the bloom texture, we replace col with it.

*/

#pragma once

namespace RetroArchReshadeShadersMagicbloomMagicbloom_blendShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,14,47,
213,78,221,130,191,191,
97,225,117,245,226,84,
11,43,1,0,0,0,
160,3,0,0,5,0,
0,0,52,0,0,0,
60,1,0,0,136,1,
0,0,224,1,0,0,
4,3,0,0,82,68,
69,70,0,1,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
216,0,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,1,0,
0,0,120,0,0,0,
64,0,0,0,0,0,
0,0,0,0,0,0,
160,0,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,180,0,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,103,108,
111,98,97,108,95,77,
86,80,0,102,108,111,
97,116,52,120,52,0,
2,0,3,0,4,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,171,0,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
84,0,128,63,84,0,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,102,213,
254,101,231,105,190,62,
192,43,232,241,42,157,
188,18,1,0,0,0,
204,16,0,0,5,0,
0,0,52,0,0,0,
152,7,0,0,204,7,
0,0,0,8,0,0,
48,16,0,0,82,68,
69,70,92,7,0,0,
1,0,0,0,196,4,
0,0,23,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
50,7,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
28,3,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,1,0,
0,0,50,3,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,4,0,
0,0,1,0,0,0,
1,0,0,0,73,3,
0,0,3,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
5,0,0,0,1,0,
0,0,1,0,0,0,
96,3,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,6,0,0,0,
1,0,0,0,1,0,
0,0,119,3,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,7,0,
0,0,1,0,0,0,
1,0,0,0,142,3,
0,0,3,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
8,0,0,0,1,0,
0,0,1,0,0,0,
165,3,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,9,0,0,0,
1,0,0,0,1,0,
0,0,188,3,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,10,0,
0,0,1,0,0,0,
1,0,0,0,211,3,
0,0,3,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
11,0,0,0,1,0,
0,0,1,0,0,0,
234,3,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,12,0,0,0,
1,0,0,0,1,0,
0,0,5,4,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,13,0,
0,0,1,0,0,0,
1,0,0,0,31,4,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
3,0,0,0,1,0,
0,0,13,0,0,0,
44,4,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,4,0,0,0,
1,0,0,0,13,0,
0,0,58,4,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,5,0,
0,0,1,0,0,0,
13,0,0,0,72,4,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
6,0,0,0,1,0,
0,0,13,0,0,0,
86,4,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,7,0,0,0,
1,0,0,0,13,0,
0,0,100,4,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,8,0,
0,0,1,0,0,0,
13,0,0,0,114,4,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
9,0,0,0,1,0,
0,0,13,0,0,0,
128,4,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,10,0,0,0,
1,0,0,0,13,0,
0,0,142,4,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,11,0,
0,0,1,0,0,0,
13,0,0,0,156,4,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
12,0,0,0,1,0,
0,0,13,0,0,0,
174,4,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,13,0,0,0,
1,0,0,0,13,0,
0,0,191,4,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,95,80,
114,101,66,108,111,111,
109,80,97,115,115,95,
115,97,109,112,108,101,
114,0,95,116,77,97,
103,105,99,66,108,111,
111,109,95,49,95,115,
97,109,112,108,101,114,
0,95,116,77,97,103,
105,99,66,108,111,111,
109,95,50,95,115,97,
109,112,108,101,114,0,
95,116,77,97,103,105,
99,66,108,111,111,109,
95,51,95,115,97,109,
112,108,101,114,0,95,
116,77,97,103,105,99,
66,108,111,111,109,95,
52,95,115,97,109,112,
108,101,114,0,95,116,
77,97,103,105,99,66,
108,111,111,109,95,53,
95,115,97,109,112,108,
101,114,0,95,116,77,
97,103,105,99,66,108,
111,111,109,95,54,95,
115,97,109,112,108,101,
114,0,95,116,77,97,
103,105,99,66,108,111,
111,109,95,55,95,115,
97,109,112,108,101,114,
0,95,116,77,97,103,
105,99,66,108,111,111,
109,95,56,95,115,97,
109,112,108,101,114,0,
95,116,77,97,103,105,
99,66,108,111,111,109,
95,65,100,97,112,116,
95,115,97,109,112,108,
101,114,0,95,116,77,
97,103,105,99,66,108,
111,111,109,95,68,105,
114,116,95,115,97,109,
112,108,101,114,0,80,
114,101,66,108,111,111,
109,80,97,115,115,0,
116,77,97,103,105,99,
66,108,111,111,109,95,
49,0,116,77,97,103,
105,99,66,108,111,111,
109,95,50,0,116,77,
97,103,105,99,66,108,
111,111,109,95,51,0,
116,77,97,103,105,99,
66,108,111,111,109,95,
52,0,116,77,97,103,
105,99,66,108,111,111,
109,95,53,0,116,77,
97,103,105,99,66,108,
111,111,109,95,54,0,
116,77,97,103,105,99,
66,108,111,111,109,95,
55,0,116,77,97,103,
105,99,66,108,111,111,
109,95,56,0,116,77,
97,103,105,99,66,108,
111,111,109,95,65,100,
97,112,116,0,116,77,
97,103,105,99,66,108,
111,111,109,95,68,105,
114,116,0,80,117,115,
104,0,191,4,0,0,
8,0,0,0,220,4,
0,0,80,0,0,0,
0,0,0,0,0,0,
0,0,28,6,0,0,
0,0,0,0,16,0,
0,0,0,0,0,0,
56,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
92,6,0,0,16,0,
0,0,16,0,0,0,
0,0,0,0,56,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,6,
0,0,32,0,0,0,
16,0,0,0,0,0,
0,0,56,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,130,6,0,0,
48,0,0,0,4,0,
0,0,0,0,0,0,
156,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
192,6,0,0,52,0,
0,0,4,0,0,0,
2,0,0,0,216,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,252,6,
0,0,56,0,0,0,
4,0,0,0,2,0,
0,0,216,6,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,13,7,0,0,
60,0,0,0,4,0,
0,0,2,0,0,0,
216,6,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
27,7,0,0,64,0,
0,0,4,0,0,0,
2,0,0,0,216,6,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,46,6,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,148,6,0,0,
112,97,114,97,109,115,
95,65,112,112,108,121,
66,108,111,111,109,0,
102,108,111,97,116,0,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,210,6,0,0,
112,97,114,97,109,115,
95,102,69,120,112,111,
115,117,114,101,0,112,
97,114,97,109,115,95,
105,68,101,98,117,103,
0,112,97,114,97,109,
115,95,102,68,105,114,
116,95,73,110,116,101,
110,115,105,116,121,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,171,171,
73,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
40,8,0,0,80,0,
0,0,10,2,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
1,0,0,0,5,0,
0,0,90,0,0,3,
0,96,16,0,3,0,
0,0,90,0,0,3,
0,96,16,0,4,0,
0,0,90,0,0,3,
0,96,16,0,5,0,
0,0,90,0,0,3,
0,96,16,0,6,0,
0,0,90,0,0,3,
0,96,16,0,7,0,
0,0,90,0,0,3,
0,96,16,0,8,0,
0,0,90,0,0,3,
0,96,16,0,9,0,
0,0,90,0,0,3,
0,96,16,0,10,0,
0,0,90,0,0,3,
0,96,16,0,11,0,
0,0,90,0,0,3,
0,96,16,0,12,0,
0,0,90,0,0,3,
0,96,16,0,13,0,
0,0,88,24,0,4,
0,112,16,0,3,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,4,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
5,0,0,0,85,85,
0,0,88,24,0,4,
0,112,16,0,6,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,7,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
8,0,0,0,85,85,
0,0,88,24,0,4,
0,112,16,0,9,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,10,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
11,0,0,0,85,85,
0,0,88,24,0,4,
0,112,16,0,12,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,13,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,4,0,0,0,
49,0,0,8,18,0,
16,0,0,0,0,0,
26,128,32,0,1,0,
0,0,3,0,0,0,
1,64,0,0,0,0,
128,63,31,0,4,3,
10,0,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,242,32,16,0,
0,0,0,0,70,16,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,18,0,
0,1,54,0,0,8,
242,32,16,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,21,0,
0,1,31,0,0,3,
10,0,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
0,0,0,0,70,16,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,1,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
4,0,0,0,0,96,
16,0,4,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,5,0,0,0,
0,96,16,0,5,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,6,0,0,0,
0,96,16,0,6,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,7,0,0,0,
0,96,16,0,7,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,8,0,0,0,
0,96,16,0,8,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,9,0,0,0,
0,96,16,0,9,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,10,0,0,0,
0,96,16,0,10,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,2,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,11,0,0,0,
0,96,16,0,11,0,
0,0,0,0,0,7,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
56,0,0,10,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
0,0,0,62,0,0,
0,62,0,0,0,62,
0,0,0,0,69,0,
0,142,194,0,0,128,
67,85,21,0,130,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,150,115,16,0,
12,0,0,0,0,96,
16,0,12,0,0,0,
52,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
172,197,39,55,14,0,
0,8,130,0,16,0,
0,0,0,0,42,128,
32,0,1,0,0,0,
3,0,0,0,58,0,
16,0,0,0,0,0,
56,0,0,7,114,0,
16,0,1,0,0,0,
246,15,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,50,0,
0,15,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
2,64,0,0,154,153,
25,62,154,153,25,62,
154,153,25,62,0,0,
0,0,2,64,0,0,
205,204,76,61,205,204,
76,61,205,204,76,61,
0,0,0,0,50,0,
0,12,114,0,16,0,
2,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
111,18,131,59,111,18,
131,59,111,18,131,59,
0,0,0,0,50,0,
0,15,114,0,16,0,
3,0,0,0,70,2,
16,0,1,0,0,0,
2,64,0,0,154,153,
25,62,154,153,25,62,
154,153,25,62,0,0,
0,0,2,64,0,0,
0,0,0,63,0,0,
0,63,0,0,0,63,
0,0,0,0,50,0,
0,12,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
70,2,16,0,3,0,
0,0,2,64,0,0,
143,194,117,61,143,194,
117,61,143,194,117,61,
0,0,0,0,14,0,
0,7,114,0,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,0,0,0,10,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,2,64,
0,0,137,136,136,189,
137,136,136,189,137,136,
136,189,0,0,0,0,
56,0,0,10,114,0,
16,0,2,0,0,0,
70,2,16,0,1,0,
0,0,2,64,0,0,
45,133,176,63,45,133,
176,63,45,133,176,63,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,3,0,0,0,
70,16,16,0,0,0,
0,0,70,126,16,0,
13,0,0,0,0,96,
16,0,13,0,0,0,
56,0,0,8,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,6,128,32,0,
1,0,0,0,4,0,
0,0,50,0,0,16,
114,0,16,0,1,0,
0,0,70,2,16,128,
65,0,0,0,1,0,
0,0,2,64,0,0,
45,133,176,63,45,133,
176,63,45,133,176,63,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,0,0,
50,0,0,13,114,0,
16,0,2,0,0,0,
70,2,16,128,65,0,
0,0,3,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,50,0,
0,13,114,0,16,0,
1,0,0,0,70,2,
16,128,65,0,0,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
0,0,0,0,0,11,
114,0,16,0,0,0,
0,0,70,2,16,128,
65,0,0,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,0,0,
0,11,114,0,16,0,
2,0,0,0,70,2,
16,128,65,0,0,0,
1,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,0,0,
50,0,0,13,114,0,
16,0,0,0,0,0,
70,2,16,128,65,0,
0,0,0,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,24,0,
0,8,130,0,16,0,
0,0,0,0,1,64,
0,0,0,0,128,63,
58,128,32,0,1,0,
0,0,3,0,0,0,
55,0,0,9,114,32,
16,0,0,0,0,0,
246,15,16,0,0,0,
0,0,70,2,16,0,
1,0,0,0,70,2,
16,0,0,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,21,0,0,1,
62,0,0,1,83,84,
65,84,148,0,0,0,
48,0,0,0,4,0,
0,0,0,0,0,0,
2,0,0,0,27,0,
0,0,0,0,0,0,
0,0,0,0,2,0,
0,0,2,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,12,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,2,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class ReshadeShadersMagicbloomMagicbloom_blendShaderDef : public ShaderDef
{
public:
	ReshadeShadersMagicbloomMagicbloom_blendShaderDef() : ShaderDef{}
	{
		Name = "magicbloom_blend";
		VertexByteCode = RetroArchReshadeShadersMagicbloomMagicbloom_blendShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchReshadeShadersMagicbloomMagicbloom_blendShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchReshadeShadersMagicbloomMagicbloom_blendShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchReshadeShadersMagicbloomMagicbloom_blendShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("ApplyBloom", -1, 52, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "Apply Bloom"));
		Params.push_back(ShaderParam("fExposure", -1, 56, 4, 0.000000f, 1.000000f, 0.200000f, 0.010000f, "Exposure"));
		Params.push_back(ShaderParam("iDebug", -1, 60, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Debug: Show Bloom Contribution"));
		Params.push_back(ShaderParam("fDirt_Intensity", -1, 64, 4, 0.000000f, 1.000000f, 0.000000f, 0.010000f, "Dirt Intensity"));
		Samplers.push_back(ShaderSampler("PreBloomPass", 3));
		Samplers.push_back(ShaderSampler("tMagicBloom_1", 4));
		Samplers.push_back(ShaderSampler("tMagicBloom_2", 5));
		Samplers.push_back(ShaderSampler("tMagicBloom_3", 6));
		Samplers.push_back(ShaderSampler("tMagicBloom_4", 7));
		Samplers.push_back(ShaderSampler("tMagicBloom_5", 8));
		Samplers.push_back(ShaderSampler("tMagicBloom_6", 9));
		Samplers.push_back(ShaderSampler("tMagicBloom_7", 10));
		Samplers.push_back(ShaderSampler("tMagicBloom_8", 11));
		Samplers.push_back(ShaderSampler("tMagicBloom_Adapt", 12));
		Samplers.push_back(ShaderSampler("tMagicBloom_Dirt", 13));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
