/*
ShaderGlass shader ntsc/shaders/ntsc-simple\ntsc-mini imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/ntsc/shaders/ntsc-simple/ntsc-mini.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// vTexCoord is "time" variable, 52.6μs is time active pixels are displayed
// 1000000 multiply (osc) /divide (52.6μs) are omitted as they cancel one another
// every other NTSC line will be 180' shifted
// lineup and line will cancel chroma/luma one another on comb
// luma comb
// chroma comb

*/

#pragma once

namespace RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,68,124,
236,103,163,179,37,175,
77,214,108,171,136,141,
99,249,1,0,0,0,
228,4,0,0,5,0,
0,0,52,0,0,0,
128,2,0,0,204,2,
0,0,36,3,0,0,
72,4,0,0,82,68,
69,70,68,2,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
28,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,5,0,
0,0,120,0,0,0,
128,0,0,0,0,0,
0,0,0,0,0,0,
64,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,84,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,120,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,148,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,184,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
148,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
204,1,0,0,96,0,
0,0,16,0,0,0,
0,0,0,0,148,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,222,1,
0,0,112,0,0,0,
4,0,0,0,0,0,
0,0,248,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
75,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,138,1,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,103,108,
111,98,97,108,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,240,1,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,78,196,
239,9,247,115,135,12,
16,202,27,165,82,204,
158,136,1,0,0,0,
60,14,0,0,5,0,
0,0,52,0,0,0,
200,4,0,0,252,4,
0,0,48,5,0,0,
160,13,0,0,82,68,
69,70,140,4,0,0,
2,0,0,0,220,0,
0,0,4,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
97,4,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
188,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,204,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,211,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
215,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,95,83,111,117,
114,99,101,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,85,66,79,0,80,
117,115,104,0,211,0,
0,0,5,0,0,0,
12,1,0,0,128,0,
0,0,0,0,0,0,
0,0,0,0,215,0,
0,0,7,0,0,0,
176,2,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,212,1,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,232,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,2,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
40,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
76,2,0,0,80,0,
0,0,16,0,0,0,
0,0,0,0,40,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,96,2,
0,0,96,0,0,0,
16,0,0,0,2,0,
0,0,40,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,114,2,0,0,
112,0,0,0,4,0,
0,0,0,0,0,0,
140,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,108,111,98,97,108,
95,77,86,80,0,102,
108,111,97,116,52,120,
52,0,2,0,3,0,
4,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,223,1,
0,0,103,108,111,98,
97,108,95,79,117,116,
112,117,116,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,30,2,0,0,
103,108,111,98,97,108,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,103,108,111,98,
97,108,95,83,111,117,
114,99,101,83,105,122,
101,0,103,108,111,98,
97,108,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
132,2,0,0,200,3,
0,0,0,0,0,0,
4,0,0,0,2,0,
0,0,224,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,4,4,0,0,
4,0,0,0,4,0,
0,0,2,0,0,0,
224,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
17,4,0,0,8,0,
0,0,4,0,0,0,
2,0,0,0,224,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,36,4,
0,0,12,0,0,0,
4,0,0,0,2,0,
0,0,224,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,47,4,0,0,
16,0,0,0,4,0,
0,0,2,0,0,0,
224,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
64,4,0,0,20,0,
0,0,4,0,0,0,
2,0,0,0,224,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,80,4,
0,0,24,0,0,0,
4,0,0,0,2,0,
0,0,224,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,110,116,115,
99,95,115,97,116,0,
102,108,111,97,116,0,
171,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,216,3,
0,0,112,97,114,97,
109,115,95,108,112,97,
115,115,0,112,97,114,
97,109,115,95,99,111,
109,98,95,102,105,108,
116,101,114,0,112,97,
114,97,109,115,95,111,
102,113,0,112,97,114,
97,109,115,95,108,117,
109,97,95,114,97,116,
101,0,112,97,114,97,
109,115,95,109,105,110,
105,95,104,117,101,0,
112,97,114,97,109,115,
95,115,110,101,115,95,
109,111,100,101,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,171,171,
73,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
104,8,0,0,80,0,
0,0,26,2,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,7,0,
0,0,89,0,0,4,
70,142,32,0,1,0,
0,0,2,0,0,0,
90,0,0,3,0,96,
16,0,2,0,0,0,
88,24,0,4,0,112,
16,0,2,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,9,0,0,0,
14,0,0,9,18,0,
16,0,0,0,0,0,
42,128,32,0,0,0,
0,0,6,0,0,0,
10,128,32,0,1,0,
0,0,1,0,0,0,
56,0,0,8,34,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,62,58,128,32,0,
0,0,0,0,6,0,
0,0,24,0,0,8,
66,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,42,128,
32,0,1,0,0,0,
1,0,0,0,56,0,
0,10,50,0,16,0,
1,0,0,0,86,21,
16,0,0,0,0,0,
2,64,0,0,0,0,
131,67,0,0,3,67,
0,0,0,0,0,0,
0,0,65,0,0,5,
130,0,16,0,0,0,
0,0,26,0,16,0,
1,0,0,0,50,0,
0,10,130,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
10,0,16,0,1,0,
0,0,56,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,219,15,73,64,
1,0,0,7,66,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,56,0,
0,8,130,0,16,0,
0,0,0,0,10,16,
16,0,0,0,0,0,
58,128,32,0,1,0,
0,0,0,0,0,0,
54,0,0,6,34,0,
16,0,1,0,0,0,
26,0,16,128,65,0,
0,0,0,0,0,0,
54,0,0,8,146,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,128,0,0,0,0,
0,0,0,0,0,0,
0,0,54,0,0,5,
18,0,16,0,2,0,
0,0,1,64,0,0,
0,0,128,63,54,0,
0,5,18,0,16,0,
3,0,0,0,1,64,
0,0,0,0,128,63,
54,0,0,5,18,0,
16,0,4,0,0,0,
1,64,0,0,0,0,
0,63,54,0,0,8,
114,0,16,0,5,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,54,0,
0,5,34,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,0,
54,0,0,5,130,0,
16,0,2,0,0,0,
1,64,0,0,253,255,
255,255,48,0,0,1,
33,0,0,7,130,0,
16,0,3,0,0,0,
58,0,16,0,2,0,
0,0,1,64,0,0,
4,0,0,0,3,0,
4,3,58,0,16,0,
3,0,0,0,43,0,
0,5,130,0,16,0,
3,0,0,0,58,0,
16,0,2,0,0,0,
56,0,0,7,130,0,
16,0,4,0,0,0,
58,0,16,0,3,0,
0,0,58,0,16,0,
3,0,0,0,56,0,
0,9,130,0,16,0,
4,0,0,0,58,0,
16,0,4,0,0,0,
26,128,32,128,65,0,
0,0,1,0,0,0,
0,0,0,0,56,0,
0,7,130,0,16,0,
4,0,0,0,58,0,
16,0,4,0,0,0,
1,64,0,0,59,170,
184,63,25,0,0,5,
130,0,16,0,4,0,
0,0,58,0,16,0,
4,0,0,0,50,0,
0,9,130,0,16,0,
5,0,0,0,58,0,
16,0,0,0,0,0,
1,64,0,0,102,102,
82,66,58,0,16,0,
3,0,0,0,50,0,
0,9,130,0,16,0,
5,0,0,0,58,0,
16,0,5,0,0,0,
1,64,0,0,219,15,
201,63,42,0,16,0,
0,0,0,0,0,0,
0,8,18,0,16,0,
6,0,0,0,58,0,
16,0,5,0,0,0,
26,128,32,0,1,0,
0,0,1,0,0,0,
77,0,0,7,18,0,
16,0,7,0,0,0,
18,0,16,0,8,0,
0,0,10,0,16,0,
6,0,0,0,56,0,
0,7,34,0,16,0,
2,0,0,0,10,0,
16,0,8,0,0,0,
1,64,0,0,0,0,
0,63,56,0,0,7,
66,0,16,0,2,0,
0,0,10,0,16,0,
7,0,0,0,1,64,
0,0,0,0,0,63,
0,0,0,7,18,0,
16,0,6,0,0,0,
10,0,16,0,6,0,
0,0,1,64,0,0,
219,15,73,64,77,0,
0,7,18,0,16,0,
6,0,0,0,18,0,
16,0,7,0,0,0,
10,0,16,0,6,0,
0,0,56,0,0,7,
34,0,16,0,3,0,
0,0,10,0,16,0,
7,0,0,0,1,64,
0,0,0,0,0,63,
56,0,0,7,66,0,
16,0,3,0,0,0,
10,0,16,0,6,0,
0,0,1,64,0,0,
0,0,0,63,77,0,
0,7,18,0,16,0,
6,0,0,0,18,0,
16,0,7,0,0,0,
58,0,16,0,5,0,
0,0,56,0,0,8,
34,0,16,0,4,0,
0,0,10,0,16,0,
7,0,0,0,10,128,
32,0,1,0,0,0,
0,0,0,0,56,0,
0,8,66,0,16,0,
4,0,0,0,10,0,
16,0,6,0,0,0,
10,128,32,0,1,0,
0,0,0,0,0,0,
56,0,0,7,66,0,
16,0,1,0,0,0,
10,0,16,0,0,0,
0,0,58,0,16,0,
3,0,0,0,0,0,
0,7,50,0,16,0,
6,0,0,0,230,10,
16,0,1,0,0,0,
70,16,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
7,0,0,0,70,0,
16,0,6,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
8,0,0,0,2,64,
0,0,135,22,153,62,
162,69,22,63,213,120,
233,61,0,0,0,0,
70,2,16,0,7,0,
0,0,16,0,0,10,
34,0,16,0,8,0,
0,0,2,64,0,0,
135,22,153,190,162,69,
22,191,229,208,98,63,
0,0,0,0,70,2,
16,0,7,0,0,0,
16,0,0,10,66,0,
16,0,8,0,0,0,
2,64,0,0,188,116,
51,63,162,69,22,191,
213,120,233,189,0,0,
0,0,70,2,16,0,
7,0,0,0,56,0,
0,7,114,0,16,0,
7,0,0,0,70,2,
16,0,2,0,0,0,
70,2,16,0,8,0,
0,0,16,0,0,10,
66,0,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,70,2,
16,0,7,0,0,0,
56,0,0,7,66,0,
16,0,1,0,0,0,
58,0,16,0,4,0,
0,0,42,0,16,0,
1,0,0,0,0,0,
0,7,98,0,16,0,
2,0,0,0,6,1,
16,0,1,0,0,0,
6,1,16,0,6,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
6,0,0,0,150,5,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
7,0,0,0,2,64,
0,0,135,22,153,62,
162,69,22,63,213,120,
233,61,0,0,0,0,
70,2,16,0,6,0,
0,0,16,0,0,10,
34,0,16,0,7,0,
0,0,2,64,0,0,
135,22,153,190,162,69,
22,191,229,208,98,63,
0,0,0,0,70,2,
16,0,6,0,0,0,
16,0,0,10,66,0,
16,0,7,0,0,0,
2,64,0,0,188,116,
51,63,162,69,22,191,
213,120,233,189,0,0,
0,0,70,2,16,0,
6,0,0,0,56,0,
0,7,226,0,16,0,
3,0,0,0,6,9,
16,0,3,0,0,0,
6,9,16,0,7,0,
0,0,16,0,0,10,
34,0,16,0,2,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,150,7,
16,0,3,0,0,0,
50,0,0,9,18,0,
16,0,6,0,0,0,
26,0,16,0,2,0,
0,0,58,0,16,0,
4,0,0,0,42,0,
16,0,1,0,0,0,
56,0,0,8,34,0,
16,0,2,0,0,0,
10,0,16,0,6,0,
0,0,42,128,32,0,
1,0,0,0,0,0,
0,0,50,0,0,13,
98,0,16,0,6,0,
0,0,86,5,16,128,
65,0,0,0,2,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,63,0,0,0,63,
0,0,0,0,166,10,
16,0,1,0,0,0,
50,0,0,9,114,0,
16,0,5,0,0,0,
70,2,16,0,6,0,
0,0,70,2,16,0,
4,0,0,0,70,2,
16,0,5,0,0,0,
0,0,0,7,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,58,0,16,0,
4,0,0,0,30,0,
0,7,130,0,16,0,
2,0,0,0,58,0,
16,0,2,0,0,0,
1,64,0,0,1,0,
0,0,22,0,0,1,
14,0,0,7,18,0,
16,0,0,0,0,0,
10,0,16,0,5,0,
0,0,26,0,16,0,
0,0,0,0,56,0,
0,10,98,0,16,0,
0,0,0,0,86,6,
16,0,5,0,0,0,
2,64,0,0,0,0,
0,0,37,73,18,62,
37,73,18,62,0,0,
0,0,15,0,0,10,
18,32,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,243,229,
145,63,0,0,0,0,
0,0,0,0,134,0,
16,0,0,0,0,0,
16,0,0,10,34,32,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,63,145,15,202,190,
52,162,20,191,0,0,
0,0,70,2,16,0,
0,0,0,0,15,0,
0,10,66,32,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
23,14,2,64,0,0,
0,0,0,0,0,0,
70,0,16,0,0,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,68,0,
0,0,9,0,0,0,
0,0,0,0,2,0,
0,0,47,0,0,0,
2,0,0,0,1,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
2,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,8,0,0,0,
0,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const uint32_t sVertexHash[] = 
{
0x9b9896a,0x39f35d0a,0x129e8aa,0xb4b6042a,0x4e70429a,0xc32ab4ce,
0x16e23490,0x1252d12e
};


static const uint32_t sFragmentHash[] =
{
0x77d1fd65,0xf64d4950,0xc24a11c6,0x7d0dc8e0,0xc645d25f,0xc7d94e09,
0x3cfedd39,0x20f23b44
};

}

namespace RetroArch
{
class NtscShadersNtscSimpleNtscMiniShaderDef : public ShaderDef
{
public:
	NtscShadersNtscSimpleNtscMiniShaderDef() : ShaderDef{}
	{
		Name = "ntsc-mini";
		VertexByteCode = RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs::sVertexByteCode);
		VertexHash = RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs::sVertexHash;
		FragmentByteCode = RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs::sFragmentByteCode);
		FragmentHash = RetroArchNtscShadersNtscSimpleNtscMiniShaderDefs::sFragmentHash;
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", 0, 112, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("ntsc_sat", -1, 0, 4, 0.000000f, 6.000000f, 3.000000f, 0.050000f, "Saturation"));
		Params.push_back(ShaderParam("lpass", -1, 4, 4, 0.000000f, 1.000000f, 0.200000f, 0.010000f, "Luma Low Pass (sharpness)"));
		Params.push_back(ShaderParam("comb_filter", -1, 8, 4, 0.000000f, 1.000000f, 0.600000f, 0.050000f, "Chroma Comb. Filter Str."));
		Params.push_back(ShaderParam("ofq", -1, 12, 4, 0.000000f, 14.320000f, 3.579000f, 0.447300f, "Color Clock Frequency Mhz (typical 3.579)"));
		Params.push_back(ShaderParam("luma_rate", -1, 16, 4, 1.000000f, 4.000000f, 2.000000f, 1.000000f, "Luma/Chroma Analysis Rate (typical 2.0)"));
		Params.push_back(ShaderParam("mini_hue", -1, 20, 4, -6.300000f, 6.300000f, 0.000000f, 0.050000f, "Hue Shift"));
		Params.push_back(ShaderParam("snes_mode", -1, 24, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Snes mode"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
