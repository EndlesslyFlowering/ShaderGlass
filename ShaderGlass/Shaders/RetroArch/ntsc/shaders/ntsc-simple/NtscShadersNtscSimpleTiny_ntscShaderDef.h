/*
ShaderGlass shader ntsc/shaders/ntsc-simple\tiny_ntsc imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/ntsc/shaders/ntsc-simple/tiny_ntsc.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// max 170.666 color "dots" per line
//snes line delay deployed at 170/256, 2/3 of pi(180'), 120' or 1/3 lines as in real snes
// comb filter line
// comb luma is line adding previous line, chroma is cancelled!
// comb chroma is line subtracting luma we already have!

*/

#pragma once

namespace RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,84,134,
14,194,240,115,100,79,
208,28,234,88,104,136,
220,100,1,0,0,0,
80,5,0,0,5,0,
0,0,52,0,0,0,
128,2,0,0,204,2,
0,0,60,3,0,0,
180,4,0,0,82,68,
69,70,68,2,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
28,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,5,0,
0,0,120,0,0,0,
128,0,0,0,0,0,
0,0,0,0,0,0,
64,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,84,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,120,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,148,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,184,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
148,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
204,1,0,0,96,0,
0,0,16,0,0,0,
2,0,0,0,148,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,222,1,
0,0,112,0,0,0,
4,0,0,0,0,0,
0,0,248,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
75,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,138,1,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,103,108,
111,98,97,108,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,240,1,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
104,0,0,0,3,0,
0,0,8,0,0,0,
80,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
80,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,3,0,0,
89,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,112,1,
0,0,80,0,1,0,
92,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,7,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
101,0,0,3,194,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,0,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,194,32,16,0,
0,0,0,0,6,4,
16,0,0,0,0,0,
6,132,32,0,0,0,
0,0,6,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
8,0,0,0,1,0,
0,0,0,0,0,0,
5,0,0,0,7,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,68,158,
1,96,128,151,244,44,
163,183,59,57,180,96,
118,196,1,0,0,0,
248,12,0,0,5,0,
0,0,52,0,0,0,
28,4,0,0,104,4,
0,0,156,4,0,0,
92,12,0,0,82,68,
69,70,224,3,0,0,
2,0,0,0,220,0,
0,0,4,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
184,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
188,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,204,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,211,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
215,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,95,83,111,117,
114,99,101,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,85,66,79,0,80,
117,115,104,0,211,0,
0,0,5,0,0,0,
12,1,0,0,128,0,
0,0,0,0,0,0,
0,0,0,0,215,0,
0,0,4,0,0,0,
176,2,0,0,16,0,
0,0,0,0,0,0,
0,0,0,0,212,1,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,232,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,2,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
40,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
76,2,0,0,80,0,
0,0,16,0,0,0,
2,0,0,0,40,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,96,2,
0,0,96,0,0,0,
16,0,0,0,2,0,
0,0,40,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,114,2,0,0,
112,0,0,0,4,0,
0,0,2,0,0,0,
140,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,108,111,98,97,108,
95,77,86,80,0,102,
108,111,97,116,52,120,
52,0,2,0,3,0,
4,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,223,1,
0,0,103,108,111,98,
97,108,95,79,117,116,
112,117,116,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,30,2,0,0,
103,108,111,98,97,108,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,103,108,111,98,
97,108,95,83,111,117,
114,99,101,83,105,122,
101,0,103,108,111,98,
97,108,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
132,2,0,0,80,3,
0,0,0,0,0,0,
4,0,0,0,2,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,136,3,0,0,
4,0,0,0,4,0,
0,0,2,0,0,0,
100,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
152,3,0,0,8,0,
0,0,4,0,0,0,
2,0,0,0,100,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,167,3,
0,0,12,0,0,0,
4,0,0,0,2,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,99,111,109,
98,0,102,108,111,97,
116,0,171,171,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
92,3,0,0,112,97,
114,97,109,115,95,108,
110,95,100,101,108,97,
121,0,112,97,114,97,
109,115,95,100,95,99,
114,97,119,108,0,112,
97,114,97,109,115,95,
115,104,97,114,112,95,
112,105,120,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,73,83,71,78,
68,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
56,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,12,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,184,7,0,0,
80,0,0,0,238,1,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,0,0,0,0,
8,0,0,0,89,0,
0,4,70,142,32,0,
1,0,0,0,1,0,
0,0,90,0,0,3,
0,96,16,0,2,0,
0,0,88,24,0,4,
0,112,16,0,2,0,
0,0,85,85,0,0,
98,16,0,3,50,16,
16,0,0,0,0,0,
98,16,0,3,194,16,
16,0,0,0,0,0,
101,0,0,3,242,32,
16,0,0,0,0,0,
104,0,0,2,11,0,
0,0,24,0,0,11,
114,0,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,182,141,
32,0,1,0,0,0,
0,0,0,0,55,0,
0,9,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,63,1,64,0,0,
0,0,64,63,56,0,
0,8,18,0,16,0,
1,0,0,0,10,0,
16,0,0,0,0,0,
42,128,32,0,0,0,
0,0,6,0,0,0,
86,0,0,6,18,0,
16,0,0,0,0,0,
10,128,32,0,0,0,
0,0,7,0,0,0,
56,0,0,7,130,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
171,170,170,62,65,0,
0,5,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
50,0,0,10,18,0,
16,0,0,0,0,0,
58,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,0,0,
64,64,10,0,16,0,
0,0,0,0,1,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,1,0,0,7,
34,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,58,16,
16,0,0,0,0,0,
54,0,0,5,34,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
0,0,0,0,0,8,
194,0,16,0,0,0,
0,0,6,4,16,128,
65,0,0,0,1,0,
0,0,6,20,16,0,
0,0,0,0,54,0,
0,5,18,0,16,0,
2,0,0,0,1,64,
0,0,0,0,128,63,
54,0,0,5,18,0,
16,0,3,0,0,0,
1,64,0,0,0,0,
128,63,54,0,0,8,
114,0,16,0,4,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,54,0,
0,5,66,0,16,0,
1,0,0,0,1,64,
0,0,0,0,0,0,
48,0,0,1,33,0,
0,7,130,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
1,64,0,0,2,0,
0,0,3,0,4,3,
58,0,16,0,1,0,
0,0,43,0,0,5,
130,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,56,0,
0,7,130,0,16,0,
2,0,0,0,58,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,56,0,0,7,
130,0,16,0,2,0,
0,0,58,0,16,0,
2,0,0,0,1,64,
0,0,20,153,93,190,
25,0,0,5,130,0,
16,0,2,0,0,0,
58,0,16,0,2,0,
0,0,0,0,0,7,
130,0,16,0,3,0,
0,0,58,0,16,0,
1,0,0,0,42,16,
16,0,0,0,0,0,
0,0,0,8,130,0,
16,0,3,0,0,0,
26,0,16,128,65,0,
0,0,0,0,0,0,
58,0,16,0,3,0,
0,0,0,0,0,7,
130,0,16,0,3,0,
0,0,10,0,16,0,
0,0,0,0,58,0,
16,0,3,0,0,0,
56,0,0,7,130,0,
16,0,3,0,0,0,
58,0,16,0,3,0,
0,0,1,64,0,0,
142,10,6,68,14,0,
0,8,130,0,16,0,
3,0,0,0,58,0,
16,0,3,0,0,0,
10,128,32,0,0,0,
0,0,5,0,0,0,
0,0,0,7,130,0,
16,0,4,0,0,0,
58,0,16,0,3,0,
0,0,1,64,0,0,
219,15,73,64,50,0,
0,9,50,0,16,0,
5,0,0,0,70,0,
16,0,1,0,0,0,
246,15,16,0,1,0,
0,0,230,10,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,6,0,0,0,
70,0,16,0,5,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,7,0,0,0,
2,64,0,0,135,22,
153,62,162,69,22,63,
213,120,233,61,0,0,
0,0,70,2,16,0,
6,0,0,0,16,0,
0,10,34,0,16,0,
7,0,0,0,2,64,
0,0,135,22,153,190,
162,69,22,191,229,208,
98,63,0,0,0,0,
70,2,16,0,6,0,
0,0,16,0,0,10,
66,0,16,0,7,0,
0,0,2,64,0,0,
188,116,51,63,162,69,
22,191,213,120,233,189,
0,0,0,0,70,2,
16,0,6,0,0,0,
50,0,0,10,34,0,
16,0,5,0,0,0,
58,128,32,0,0,0,
0,0,6,0,0,0,
1,64,0,0,0,0,
0,62,26,0,16,0,
5,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,5,0,0,0,
70,0,16,0,5,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,6,0,0,0,
2,64,0,0,135,22,
153,62,162,69,22,63,
213,120,233,61,0,0,
0,0,70,2,16,0,
5,0,0,0,16,0,
0,10,34,0,16,0,
6,0,0,0,2,64,
0,0,135,22,153,190,
162,69,22,191,229,208,
98,63,0,0,0,0,
70,2,16,0,5,0,
0,0,16,0,0,10,
66,0,16,0,6,0,
0,0,2,64,0,0,
188,116,51,63,162,69,
22,191,213,120,233,189,
0,0,0,0,70,2,
16,0,5,0,0,0,
77,0,0,7,18,0,
16,0,5,0,0,0,
18,0,16,0,8,0,
0,0,58,0,16,0,
3,0,0,0,77,0,
0,7,18,0,16,0,
9,0,0,0,18,0,
16,0,10,0,0,0,
58,0,16,0,4,0,
0,0,54,0,0,5,
34,0,16,0,2,0,
0,0,10,0,16,0,
5,0,0,0,54,0,
0,5,66,0,16,0,
2,0,0,0,10,0,
16,0,8,0,0,0,
56,0,0,7,114,0,
16,0,5,0,0,0,
70,2,16,0,2,0,
0,0,70,2,16,0,
7,0,0,0,54,0,
0,5,34,0,16,0,
3,0,0,0,10,0,
16,0,9,0,0,0,
54,0,0,5,66,0,
16,0,3,0,0,0,
10,0,16,0,10,0,
0,0,56,0,0,7,
226,0,16,0,3,0,
0,0,6,9,16,0,
3,0,0,0,6,9,
16,0,6,0,0,0,
16,0,0,10,130,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,63,0,0,0,63,
0,0,0,63,0,0,
0,0,70,2,16,0,
5,0,0,0,16,0,
0,10,34,0,16,0,
3,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,63,0,0,0,0,
150,7,16,0,3,0,
0,0,0,0,0,7,
34,0,16,0,3,0,
0,0,58,0,16,0,
1,0,0,0,26,0,
16,0,3,0,0,0,
56,0,0,8,66,0,
16,0,3,0,0,0,
26,0,16,0,3,0,
0,0,10,128,32,0,
1,0,0,0,0,0,
0,0,50,0,0,10,
130,0,16,0,1,0,
0,0,42,0,16,128,
65,0,0,0,3,0,
0,0,1,64,0,0,
0,0,0,63,58,0,
16,0,1,0,0,0,
50,0,0,9,18,0,
16,0,4,0,0,0,
26,0,16,0,3,0,
0,0,58,0,16,0,
2,0,0,0,10,0,
16,0,4,0,0,0,
0,0,0,7,130,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,58,0,16,0,
1,0,0,0,56,0,
0,7,98,0,16,0,
2,0,0,0,86,6,
16,0,2,0,0,0,
246,15,16,0,1,0,
0,0,50,0,0,9,
98,0,16,0,4,0,
0,0,86,6,16,0,
2,0,0,0,246,15,
16,0,2,0,0,0,
86,6,16,0,4,0,
0,0,30,0,0,7,
66,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,1,64,
0,0,1,0,0,0,
22,0,0,1,56,0,
0,10,114,0,16,0,
0,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,0,149,
9,63,0,149,9,63,
0,149,9,63,0,0,
0,0,15,0,0,10,
18,32,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,243,229,
145,63,0,0,0,0,
0,0,0,0,134,0,
16,0,0,0,0,0,
16,0,0,10,34,32,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,63,145,15,202,190,
52,162,20,191,0,0,
0,0,70,2,16,0,
0,0,0,0,15,0,
0,10,66,32,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
23,14,2,64,0,0,
0,0,0,0,0,0,
70,0,16,0,0,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,63,0,
0,0,11,0,0,0,
0,0,0,0,3,0,
0,0,38,0,0,0,
2,0,0,0,2,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
2,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,10,0,0,0,
1,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const uint32_t sVertexHash[] = 
{
0xd9196a33,0x5930c05d,0x8de7f45c,0xa3a1591e,0x2cd23cdf,0xb9e36c83,
0xf4d3a2e7,0x3699fa46
};


static const uint32_t sFragmentHash[] =
{
0xb31ec14e,0x82b47287,0x4d4c650b,0x22f1a815,0x1fe3708b,0x828ceab4,
0x672f70a1,0x88e02606
};

}

namespace RetroArch
{
class NtscShadersNtscSimpleTiny_ntscShaderDef : public ShaderDef
{
public:
	NtscShadersNtscSimpleTiny_ntscShaderDef() : ShaderDef{}
	{
		Name = "tiny_ntsc";
		VertexByteCode = RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs::sVertexByteCode);
		VertexHash = RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs::sVertexHash;
		FragmentByteCode = RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs::sFragmentByteCode);
		FragmentHash = RetroArchNtscShadersNtscSimpleTiny_ntscShaderDefs::sFragmentHash;
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", 0, 112, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("comb", -1, 0, 4, 0.000000f, 1.000000f, 0.800000f, 0.050000f, "Comb Filter Strength"));
		Params.push_back(ShaderParam("ln_delay", -1, 4, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "NES/SNES Line Delay"));
		Params.push_back(ShaderParam("d_crawl", -1, 8, 4, 0.000000f, 1.000000f, 1.000000f, 1.000000f, "NES/SNES Dot Crawl"));
		Params.push_back(ShaderParam("sharp_pix", -1, 12, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Sharper"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
