/*
ShaderGlass shader ntsc/shaders/ntsc-simple\ntsc-simple-1 imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/ntsc/shaders/ntsc-simple/ntsc-simple-1.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// nes & snes master clock, ppu needs 4 cycles per pixel, pce too on 256px. 320px pce is 21.47/3.0
// ms too is the same clock
// md uses 15*ntsc clock and each pixel has 8 cycles
// c64 runs 4*PAL/NTSC then divides 18 or 14(ntsc), feeds the cpu freq, then runs 8x times of cpu
// Atari 2600 is 1:1 ntsc
// md doesn't alternate every line, doesn't animate too
// pce alternates every two lines

*/

#pragma once

namespace RetroArchNtscShadersNtscSimpleNtscSimple1ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,68,124,
236,103,163,179,37,175,
77,214,108,171,136,141,
99,249,1,0,0,0,
228,4,0,0,5,0,
0,0,52,0,0,0,
128,2,0,0,204,2,
0,0,36,3,0,0,
72,4,0,0,82,68,
69,70,68,2,0,0,
1,0,0,0,96,0,
0,0,1,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
28,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
92,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,85,66,79,0,
92,0,0,0,5,0,
0,0,120,0,0,0,
128,0,0,0,0,0,
0,0,0,0,0,0,
64,1,0,0,0,0,
0,0,64,0,0,0,
2,0,0,0,84,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,120,1,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,148,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,184,1,0,0,
80,0,0,0,16,0,
0,0,0,0,0,0,
148,1,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
204,1,0,0,96,0,
0,0,16,0,0,0,
0,0,0,0,148,1,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,222,1,
0,0,112,0,0,0,
4,0,0,0,0,0,
0,0,248,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
75,1,0,0,103,108,
111,98,97,108,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,138,1,
0,0,103,108,111,98,
97,108,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,103,108,
111,98,97,108,95,83,
111,117,114,99,101,83,
105,122,101,0,103,108,
111,98,97,108,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,240,1,0,0,
77,105,99,114,111,115,
111,102,116,32,40,82,
41,32,72,76,83,76,
32,83,104,97,100,101,
114,32,67,111,109,112,
105,108,101,114,32,49,
48,46,49,0,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
80,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
65,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,1,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,28,1,
0,0,80,0,1,0,
71,0,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
56,0,0,10,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,2,64,0,0,
71,3,128,63,71,3,
128,63,0,0,0,0,
0,0,0,0,56,0,
0,8,242,0,16,0,
0,0,0,0,86,21,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,1,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
6,16,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,166,26,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,2,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,32,16,0,1,0,
0,0,246,31,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
3,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
6,0,0,0,1,0,
0,0,0,0,0,0,
4,0,0,0,5,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,157,168,
96,66,220,43,147,65,
8,158,77,137,86,240,
33,49,1,0,0,0,
12,12,0,0,5,0,
0,0,52,0,0,0,
36,4,0,0,88,4,
0,0,140,4,0,0,
112,11,0,0,82,68,
69,70,232,3,0,0,
2,0,0,0,220,0,
0,0,4,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
189,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
188,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,204,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,211,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
215,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,95,83,111,117,
114,99,101,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,85,66,79,0,80,
117,115,104,0,211,0,
0,0,5,0,0,0,
12,1,0,0,128,0,
0,0,0,0,0,0,
0,0,0,0,215,0,
0,0,4,0,0,0,
176,2,0,0,16,0,
0,0,0,0,0,0,
0,0,0,0,212,1,
0,0,0,0,0,0,
64,0,0,0,0,0,
0,0,232,1,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,2,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
40,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
76,2,0,0,80,0,
0,0,16,0,0,0,
0,0,0,0,40,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,96,2,
0,0,96,0,0,0,
16,0,0,0,2,0,
0,0,40,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,114,2,0,0,
112,0,0,0,4,0,
0,0,2,0,0,0,
140,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
103,108,111,98,97,108,
95,77,86,80,0,102,
108,111,97,116,52,120,
52,0,2,0,3,0,
4,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,223,1,
0,0,103,108,111,98,
97,108,95,79,117,116,
112,117,116,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,30,2,0,0,
103,108,111,98,97,108,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,103,108,111,98,
97,108,95,83,111,117,
114,99,101,83,105,122,
101,0,103,108,111,98,
97,108,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
132,2,0,0,80,3,
0,0,0,0,0,0,
4,0,0,0,2,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,136,3,0,0,
4,0,0,0,4,0,
0,0,2,0,0,0,
100,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
150,3,0,0,8,0,
0,0,4,0,0,0,
2,0,0,0,100,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,171,3,
0,0,12,0,0,0,
4,0,0,0,2,0,
0,0,100,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,110,116,115,
99,95,85,0,102,108,
111,97,116,0,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
94,3,0,0,112,97,
114,97,109,115,95,110,
116,115,99,95,86,0,
112,97,114,97,109,115,
95,115,121,115,116,101,
109,95,99,104,111,111,
115,101,0,112,97,114,
97,109,115,95,97,110,
105,109,95,111,118,101,
114,114,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,171,171,73,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
44,0,0,0,1,0,
0,0,8,0,0,0,
32,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,0,0,0,
83,86,95,84,97,114,
103,101,116,0,171,171,
83,72,69,88,220,6,
0,0,80,0,0,0,
183,1,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,8,0,0,0,
89,0,0,4,70,142,
32,0,1,0,0,0,
1,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,98,16,0,3,
50,16,16,0,0,0,
0,0,101,0,0,3,
242,32,16,0,0,0,
0,0,104,0,0,2,
4,0,0,0,85,0,
0,8,18,0,16,0,
0,0,0,0,10,128,
32,0,0,0,0,0,
7,0,0,0,1,64,
0,0,1,0,0,0,
86,0,0,5,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,56,0,0,7,
34,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
65,0,0,5,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,50,0,0,10,
34,0,16,0,0,0,
0,0,26,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,0,64,10,0,
16,0,0,0,0,0,
54,0,0,5,66,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,24,0,0,11,
242,0,16,0,1,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,64,0,0,160,64,
0,0,192,64,166,138,
32,0,1,0,0,0,
0,0,0,0,55,0,
0,9,130,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
1,64,0,0,207,197,
214,64,1,64,0,0,
170,170,42,63,55,0,
0,9,130,0,16,0,
0,0,0,0,26,0,
16,0,1,0,0,0,
1,64,0,0,150,217,
52,65,58,0,16,0,
0,0,0,0,55,0,
0,9,130,0,16,0,
0,0,0,0,42,0,
16,0,1,0,0,0,
1,64,0,0,231,162,
203,64,58,0,16,0,
0,0,0,0,55,0,
0,9,18,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
1,64,0,0,0,0,
0,63,58,0,16,0,
0,0,0,0,55,0,
0,12,114,0,16,0,
2,0,0,0,6,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,64,192,0,0,
0,0,70,2,16,0,
0,0,0,0,24,0,
0,11,114,0,16,0,
3,0,0,0,2,64,
0,0,0,0,0,64,
0,0,64,64,0,0,
128,63,0,0,0,0,
166,139,32,0,1,0,
0,0,0,0,0,0,
55,0,0,12,194,0,
16,0,0,0,0,0,
6,0,16,0,3,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,128,63,
0,0,0,0,6,4,
16,0,2,0,0,0,
54,0,0,5,194,0,
16,0,2,0,0,0,
166,10,16,0,2,0,
0,0,55,0,0,12,
50,0,16,0,2,0,
0,0,86,5,16,0,
3,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
230,10,16,0,0,0,
0,0,55,0,0,12,
242,0,16,0,2,0,
0,0,86,5,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,102,102,
230,63,102,102,230,63,
70,14,16,0,2,0,
0,0,55,0,0,12,
242,0,16,0,2,0,
0,0,166,10,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,205,204,
76,192,0,0,64,192,
70,14,16,0,2,0,
0,0,55,0,0,12,
242,0,16,0,2,0,
0,0,246,15,16,0,
1,0,0,0,2,64,
0,0,0,0,128,63,
0,0,0,0,51,51,
179,191,102,102,166,191,
70,14,16,0,2,0,
0,0,60,0,0,7,
66,0,16,0,0,0,
0,0,26,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
55,0,0,9,34,0,
16,0,0,0,0,0,
42,0,16,0,3,0,
0,0,26,0,16,0,
0,0,0,0,26,0,
16,0,2,0,0,0,
56,0,0,7,34,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,56,0,
0,8,50,0,16,0,
1,0,0,0,22,21,
16,0,0,0,0,0,
22,133,32,0,0,0,
0,0,6,0,0,0,
56,0,0,7,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,26,0,16,0,
1,0,0,0,56,0,
0,7,130,0,16,0,
0,0,0,0,10,0,
16,0,2,0,0,0,
10,0,16,0,1,0,
0,0,56,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,218,15,73,64,
50,0,0,10,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
218,15,73,64,58,0,
16,128,65,0,0,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
1,64,0,0,218,15,
73,64,10,0,16,0,
0,0,0,0,50,0,
0,10,34,0,16,0,
0,0,0,0,26,16,
16,0,0,0,0,0,
26,128,32,0,0,0,
0,0,6,0,0,0,
1,64,0,0,0,0,
0,63,65,0,0,5,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,56,0,
0,7,130,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,63,65,0,0,5,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,50,0,
0,10,34,0,16,0,
0,0,0,0,58,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,0,0,0,64,
26,0,16,0,0,0,
0,0,56,0,0,7,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,1,64,
0,0,218,15,73,64,
1,0,0,7,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,0,0,
0,7,18,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,0,0,0,9,
50,0,16,0,0,0,
0,0,6,0,16,0,
0,0,0,0,70,128,
32,128,65,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,7,
50,0,16,0,0,0,
0,0,230,10,16,0,
2,0,0,0,70,0,
16,0,0,0,0,0,
77,0,0,6,0,208,
0,0,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
77,0,0,6,34,0,
16,0,0,0,0,0,
0,208,0,0,26,0,
16,0,0,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,1,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
66,0,16,0,0,0,
0,0,2,64,0,0,
135,22,153,190,162,69,
22,191,229,208,98,63,
0,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,7,34,0,
16,0,2,0,0,0,
10,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,16,0,
0,10,18,0,16,0,
0,0,0,0,2,64,
0,0,188,116,51,63,
162,69,22,191,213,120,
233,189,0,0,0,0,
70,2,16,0,1,0,
0,0,16,0,0,10,
18,0,16,0,2,0,
0,0,2,64,0,0,
135,22,153,62,162,69,
22,63,213,120,233,61,
0,0,0,0,70,2,
16,0,1,0,0,0,
56,0,0,7,66,0,
16,0,2,0,0,0,
26,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,56,0,
0,10,114,0,16,0,
0,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,0,0,
128,63,0,0,0,63,
0,0,0,63,0,0,
0,0,16,0,0,10,
114,32,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,0,0,70,2,
16,0,0,0,0,0,
54,0,0,5,130,32,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,50,0,0,0,
4,0,0,0,0,0,
0,0,2,0,0,0,
30,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,11,0,
0,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};

}

namespace RetroArch
{
class NtscShadersNtscSimpleNtscSimple1ShaderDef : public ShaderDef
{
public:
	NtscShadersNtscSimpleNtscSimple1ShaderDef() : ShaderDef{}
	{
		Name = "ntsc-simple-1";
		VertexByteCode = RetroArchNtscShadersNtscSimpleNtscSimple1ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchNtscShadersNtscSimpleNtscSimple1ShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchNtscShadersNtscSimpleNtscSimple1ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchNtscShadersNtscSimpleNtscSimple1ShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", 0, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", 0, 80, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", 0, 96, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", 0, 112, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("ntsc_U", -1, 0, 4, -6.000000f, 6.000000f, 0.800000f, 0.050000f, "U Hue (Purple to Yellow)"));
		Params.push_back(ShaderParam("ntsc_V", -1, 4, 4, -6.000000f, 6.000000f, 1.000000f, 0.050000f, "V Hue (Red to Cyan)"));
		Params.push_back(ShaderParam("system_choose", -1, 8, 4, 0.000000f, 6.000000f, 0.000000f, 1.000000f, "SYSTEM CHOOSE"));
		Params.push_back(ShaderParam("anim_overr", -1, 12, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Force Animate Artifacts"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
