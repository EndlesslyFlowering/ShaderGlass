/*
ShaderGlass shader ntsc/shaders\ntsc-blastem imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/ntsc/shaders/ntsc-blastem.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// NTSC composite simulator for BlastEm, now with comb filter
// Shader by Sik, based on BlastEm's default shader
//
// Now with gamma correction (NTSC = 2.5 gamma, sRGB = 2.2 gamma*)
// *sorta, sRGB isn't exactly a gamma curve, but close enough
//
// It works by converting from RGB to YIQ and then encoding it into NTSC, then
// trying to decode it back. The lossy nature of the encoding process results in
// the rainbow effect. It also accounts for the differences between H40 and H32
// mode as it computes the exact colorburst cycle length.
//
// This shader tries to work around the inability to keep track of previous
// pixels by sampling seven points (in 0.25 colorburst cycle intervals), that
// seems to be enough to give decent filtering (four samples are used for
// low-pass filtering, but we need seven because decoding chroma also requires
// four samples so we're filtering over overlapping samples... just see the
// comments in the I/Q code to understand).
//
// The comb filter works by comparing against the previous scanline (which means
// sampling twice). This is done at the composite signal step, i.e. before the
// filtering to decode back YIQ is performed.
//
// Thanks to Tulio Adriano for helping compare against real hardware on a CRT.
//******************************************************************************
// How strong is the comb filter when reducing crosstalk between Y and IQ.
// 0% (0.0) means no separation at all, 100% (1.0) means complete filtering.
// 80% seems to approximate a model 1, while 90% is closer to a model 2 or 32X.
// Gamma of the TV to simulate.
// Converts from RGB to YIQ
// Encodes YIQ into composite
// Converts from YIQ to RGB
// The coordinate of the pixel we're supposed to access
// In interlaced mode, the entire screen is shifted down by half a scanline,
// y_offset is used to account for this.
// Horizontal distance of half a colorburst cycle
// sRGB approximates a gamma ramp of 2.2 while NTSC has a gamma of 2.5
// Use this value to do gamma correction of every RGB value
// Where we store the sampled pixels.
// [0] = current pixel
// [1] = 1/4 colorburst cycles earlier
// [2] = 2/4 colorburst cycles earlier
// [3] = 3/4 colorburst cycles earlier
// [4] = 1 colorburst cycle earlier
// [5] = 1 1/4 colorburst cycles earlier
// [6] = 1 2/4 colorburst cycles earlier
// Sample all the pixels we're going to use
// Compute colorburst phase at this point
// Y coordinate one scanline above
// Apparently GLSL doesn't allow a vec2 with a full expression for
// texture samplers? Whatever, putting it here (also makes the code
// below a bit easier to read I guess?)
// Get the raw composite data for this scanline
// Get the raw composite data for scanline above
// Note that the colorburst phase is shifted 180Â°
// Comb filter: isolate Y and IQ using the above two.
// Luma is obtained by adding the two scanlines, chroma will cancel out
// because chroma will be on opposite phases.
// Chroma is then obtained by cancelling this scanline from the luma
// to reduce the crosstalk. We don't cancel it entirely though since the
// filtering isn't perfect (which is why the rainbow leaks a bit).
// Decode Y by averaging over the last whole sampled cycle (effectively
// filtering anything above the colorburst frequency)
// Decode I and Q (see page below to understand what's going on)
// https://codeandlife.com/2012/10/09/composite-video-decoding-theory-and-practice/
//
// Retrieving I and Q out of the raw signal is done like this
// (use sin for I and cos for Q):
//
//    0.5 * raw[0] * sin(phase[0]) + 0.5 * raw[1] * sin(phase[1]) +
//    0.5 * raw[2] * sin(phase[2]) + 0.5 * raw[3] * sin(phase[3])
//
// i.e. multiply each of the sampled quarter cycles against the reference
// wave and average them (actually double that because for some reason
// that's needed to get the correct scale, hence 0.5 instead of 0.25)
//
// That turns out to be blocky tho, so we opt to filter down the chroma...
// which requires doing the above *four* times if we do it the same way as
// we did for luminance (note that 0.125 = 1/4 of 0.5):
//
//    0.125 * raw[0] * sin(phase[0]) + 0.125 * raw[1] * sin(phase[1]) +
//    0.125 * raw[2] * sin(phase[2]) + 0.125 * raw[3] * sin(phase[3]) +
//    0.125 * raw[1] * sin(phase[1]) + 0.125 * raw[2] * sin(phase[2]) +
//    0.125 * raw[3] * sin(phase[3]) + 0.125 * raw[4] * sin(phase[4]) +
//    0.125 * raw[2] * sin(phase[2]) + 0.125 * raw[3] * sin(phase[3]) +
//    0.125 * raw[4] * sin(phase[4]) + 0.125 * raw[5] * sin(phase[5]) +
//    0.125 * raw[3] * sin(phase[3]) + 0.125 * raw[4] * sin(phase[4]) +
//    0.125 * raw[5] * sin(phase[5]) + 0.125 * raw[6] * sin(phase[6])
//
// There are a lot of repeated values there that could be merged into one,
// what you see below is the resulting simplification.
// Convert YIQ back to RGB and output it
// If you're curious to see what the raw composite signal looks like,
// comment out the above and uncomment the line below instead
//gl_FragColor = vec4(raw[0], raw[0], raw[0], 1.0);
// Basic scanlines effect. This is done by multiplying the color against a
// "half sine" wave so the center is brighter and a narrow outer area in
// each scanline is noticeable darker.
// The weird constant in the middle line is 1-sqrt(2)/4 and it's used to
// make sure that the average multiplied value across the whole screen is 1
// to preserve the original brightness.

*/

#pragma once

namespace RetroArchNtscShadersNtscBlastemShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,10,147,
8,229,3,139,244,46,
139,134,83,93,79,30,
70,144,1,0,0,0,
184,7,0,0,5,0,
0,0,52,0,0,0,
156,3,0,0,232,3,
0,0,184,4,0,0,
28,7,0,0,82,68,
69,70,96,3,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
53,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,7,0,0,0,
24,1,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,48,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,76,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,2,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
76,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
132,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,76,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,150,2,
0,0,48,0,0,0,
4,0,0,0,2,0,
0,0,176,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,212,2,0,0,
52,0,0,0,4,0,
0,0,0,0,0,0,
236,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
16,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,236,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,34,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,236,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,66,2,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
168,2,0,0,112,97,
114,97,109,115,95,99,
111,109,98,95,115,116,
114,0,102,108,111,97,
116,0,171,171,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
228,2,0,0,112,97,
114,97,109,115,95,103,
97,109,109,97,95,99,
111,114,114,0,112,97,
114,97,109,115,95,115,
99,97,110,95,116,111,
103,103,108,101,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,171,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,200,0,0,0,
7,0,0,0,8,0,
0,0,176,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,176,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,12,3,
0,0,176,0,0,0,
2,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,14,
0,0,176,0,0,0,
3,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,2,13,
0,0,176,0,0,0,
4,0,0,0,0,0,
0,0,3,0,0,0,
2,0,0,0,1,14,
0,0,176,0,0,0,
5,0,0,0,0,0,
0,0,3,0,0,0,
2,0,0,0,2,13,
0,0,185,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
3,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
92,2,0,0,80,0,
1,0,151,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,4,0,
0,0,89,0,0,4,
70,142,32,0,1,0,
0,0,4,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
101,0,0,3,194,32,
16,0,0,0,0,0,
101,0,0,3,18,32,
16,0,1,0,0,0,
101,0,0,3,34,32,
16,0,1,0,0,0,
101,0,0,3,18,32,
16,0,2,0,0,0,
101,0,0,3,34,32,
16,0,2,0,0,0,
103,0,0,4,242,32,
16,0,3,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
54,0,0,5,50,32,
16,0,0,0,0,0,
70,16,16,0,1,0,
0,0,54,0,0,6,
194,32,16,0,0,0,
0,0,6,132,32,0,
1,0,0,0,0,0,
0,0,86,0,0,6,
18,0,16,0,0,0,
0,0,10,128,32,0,
1,0,0,0,3,0,
0,0,56,0,0,7,
34,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,1,64,
0,0,0,0,0,63,
65,0,0,5,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,50,0,0,10,
18,0,16,0,0,0,
0,0,26,0,16,128,
65,0,0,0,0,0,
0,0,1,64,0,0,
0,0,0,64,10,0,
16,0,0,0,0,0,
27,0,0,5,18,32,
16,0,1,0,0,0,
10,0,16,0,0,0,
0,0,27,0,0,6,
34,32,16,0,1,0,
0,0,58,128,32,0,
1,0,0,0,3,0,
0,0,49,0,0,8,
18,0,16,0,0,0,
0,0,1,64,0,0,
0,0,200,67,26,128,
32,0,1,0,0,0,
1,0,0,0,1,0,
0,7,34,32,16,0,
2,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,63,54,0,0,6,
18,32,16,0,2,0,
0,0,10,128,32,0,
1,0,0,0,0,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,3,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,16,0,
0,0,1,0,0,0,
0,0,0,0,9,0,
0,0,8,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,128,18,
22,118,80,44,187,5,
118,255,191,241,32,163,
241,136,1,0,0,0,
24,32,0,0,5,0,
0,0,52,0,0,0,
84,3,0,0,0,4,
0,0,52,4,0,0,
124,31,0,0,82,68,
69,70,24,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
237,2,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,7,0,0,0,
208,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,232,1,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,4,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,40,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
4,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
60,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,4,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,78,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,104,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,140,2,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
164,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
200,2,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,164,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,218,2,
0,0,60,0,0,0,
4,0,0,0,0,0,
0,0,164,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,250,1,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
96,2,0,0,112,97,
114,97,109,115,95,99,
111,109,98,95,115,116,
114,0,102,108,111,97,
116,0,171,171,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
156,2,0,0,112,97,
114,97,109,115,95,103,
97,109,109,97,95,99,
111,114,114,0,112,97,
114,97,109,115,95,115,
99,97,110,95,116,111,
103,103,108,101,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,171,171,
73,83,71,78,164,0,
0,0,6,0,0,0,
8,0,0,0,152,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,152,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
12,12,0,0,152,0,
0,0,2,0,0,0,
0,0,0,0,2,0,
0,0,1,0,0,0,
1,1,0,0,152,0,
0,0,3,0,0,0,
0,0,0,0,2,0,
0,0,1,0,0,0,
2,2,0,0,152,0,
0,0,4,0,0,0,
0,0,0,0,3,0,
0,0,2,0,0,0,
1,1,0,0,152,0,
0,0,5,0,0,0,
0,0,0,0,3,0,
0,0,2,0,0,0,
2,2,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
64,27,0,0,80,0,
0,0,208,6,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
1,0,0,0,4,0,
0,0,90,0,0,3,
0,96,16,0,2,0,
0,0,88,24,0,4,
0,112,16,0,2,0,
0,0,85,85,0,0,
98,16,0,3,50,16,
16,0,0,0,0,0,
98,16,0,3,194,16,
16,0,0,0,0,0,
98,8,0,3,18,16,
16,0,1,0,0,0,
98,8,0,3,34,16,
16,0,1,0,0,0,
98,16,0,3,18,16,
16,0,2,0,0,0,
98,16,0,3,34,16,
16,0,2,0,0,0,
101,0,0,3,242,32,
16,0,0,0,0,0,
104,0,0,2,9,0,
0,0,14,0,0,7,
18,0,16,0,0,0,
0,0,26,16,16,0,
0,0,0,0,58,16,
16,0,0,0,0,0,
43,0,0,5,34,0,
16,0,0,0,0,0,
10,16,16,0,1,0,
0,0,56,0,0,7,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,26,16,
16,0,2,0,0,0,
56,0,0,7,34,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,1,64,0,0,
0,0,0,191,14,0,
0,7,34,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
58,16,16,0,0,0,
0,0,0,0,0,7,
34,0,16,0,1,0,
0,0,26,0,16,0,
0,0,0,0,26,16,
16,0,0,0,0,0,
0,0,0,8,130,0,
16,0,1,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
26,0,16,0,1,0,
0,0,14,0,0,10,
18,0,16,0,0,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,42,16,
16,0,0,0,0,0,
56,0,0,7,18,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,10,16,16,0,
2,0,0,0,50,0,
0,10,18,0,16,0,
1,0,0,0,10,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,231,255,191,58,
10,16,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,226,0,16,0,
0,0,0,0,198,0,
16,0,1,0,0,0,
54,121,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,54,0,
0,5,194,0,16,0,
2,0,0,0,86,13,
16,0,1,0,0,0,
16,0,0,10,18,0,
16,0,3,0,0,0,
150,7,16,0,0,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,16,0,
0,10,34,0,16,0,
3,0,0,0,150,7,
16,0,0,0,0,0,
2,64,0,0,16,88,
25,63,68,250,141,190,
221,181,164,190,0,0,
0,0,16,0,0,10,
34,0,16,0,0,0,
0,0,150,7,16,0,
0,0,0,0,2,64,
0,0,172,28,90,62,
244,108,6,191,146,203,
159,62,0,0,0,0,
56,0,0,7,66,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,1,64,0,0,
231,255,63,59,14,0,
0,7,130,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
42,0,16,0,0,0,
0,0,50,0,0,9,
66,0,16,0,3,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,218,15,73,64,
1,64,0,0,218,15,
73,64,56,0,0,7,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,1,64,
0,0,218,15,73,64,
77,0,0,7,18,0,
16,0,4,0,0,0,
18,0,16,0,5,0,
0,0,58,0,16,0,
0,0,0,0,77,0,
0,7,18,0,16,0,
6,0,0,0,18,0,
16,0,7,0,0,0,
42,0,16,0,3,0,
0,0,50,0,0,9,
130,0,16,0,0,0,
0,0,26,0,16,0,
3,0,0,0,10,0,
16,0,6,0,0,0,
10,0,16,0,3,0,
0,0,50,0,0,9,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,10,0,
16,0,7,0,0,0,
58,0,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
3,0,0,0,70,0,
16,0,1,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,50,0,
0,10,34,0,16,0,
2,0,0,0,10,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,231,255,191,58,
10,0,16,0,1,0,
0,0,16,0,0,10,
130,0,16,0,0,0,
0,0,70,2,16,0,
3,0,0,0,2,64,
0,0,172,28,90,62,
244,108,6,191,146,203,
159,62,0,0,0,0,
16,0,0,10,130,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,16,0,
0,10,18,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
2,64,0,0,16,88,
25,63,68,250,141,190,
221,181,164,190,0,0,
0,0,50,0,0,9,
18,0,16,0,3,0,
0,0,10,0,16,0,
3,0,0,0,10,0,
16,0,4,0,0,0,
58,0,16,0,3,0,
0,0,50,0,0,9,
130,0,16,0,0,0,
0,0,58,0,16,0,
0,0,0,0,10,0,
16,0,5,0,0,0,
10,0,16,0,3,0,
0,0,0,0,0,7,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
56,0,0,11,50,0,
16,0,3,0,0,0,
2,64,0,0,46,186,
232,62,0,0,0,63,
0,0,0,0,0,0,
0,0,102,138,32,0,
1,0,0,0,3,0,
0,0,50,0,0,10,
130,0,16,0,0,0,
0,0,26,0,16,128,
65,0,0,0,0,0,
0,0,26,0,16,0,
3,0,0,0,58,0,
16,0,0,0,0,0,
56,0,0,10,162,0,
16,0,0,0,0,0,
86,13,16,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,63,0,0,0,0,
0,0,128,62,56,0,
0,7,66,0,16,0,
3,0,0,0,10,0,
16,0,4,0,0,0,
58,0,16,0,0,0,
0,0,56,0,0,7,
130,0,16,0,0,0,
0,0,10,0,16,0,
5,0,0,0,58,0,
16,0,0,0,0,0,
54,0,0,5,82,0,
16,0,1,0,0,0,
6,16,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
4,0,0,0,198,0,
16,0,1,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,18,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,172,28,
90,62,244,108,6,191,
146,203,159,62,0,0,
0,0,16,0,0,10,
130,0,16,0,1,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
16,0,0,10,130,0,
16,0,3,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
16,88,25,63,68,250,
141,190,221,181,164,190,
0,0,0,0,14,0,
0,7,18,0,16,0,
4,0,0,0,10,16,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,50,0,0,9,
34,0,16,0,4,0,
0,0,10,0,16,0,
4,0,0,0,1,64,
0,0,218,15,73,64,
1,64,0,0,218,15,
73,64,56,0,0,7,
18,0,16,0,4,0,
0,0,10,0,16,0,
4,0,0,0,1,64,
0,0,218,15,73,64,
77,0,0,7,18,0,
16,0,4,0,0,0,
18,0,16,0,5,0,
0,0,10,0,16,0,
4,0,0,0,77,0,
0,7,18,0,16,0,
6,0,0,0,18,0,
16,0,7,0,0,0,
26,0,16,0,4,0,
0,0,50,0,0,9,
130,0,16,0,1,0,
0,0,58,0,16,0,
3,0,0,0,10,0,
16,0,6,0,0,0,
58,0,16,0,1,0,
0,0,50,0,0,9,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,10,0,
16,0,7,0,0,0,
58,0,16,0,1,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,226,0,16,0,
4,0,0,0,102,10,
16,0,1,0,0,0,
54,121,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,56,0,
0,7,34,0,16,0,
1,0,0,0,26,0,
16,0,1,0,0,0,
58,16,16,0,0,0,
0,0,56,0,0,7,
34,0,16,0,1,0,
0,0,26,0,16,0,
1,0,0,0,1,64,
0,0,218,15,73,64,
77,0,0,6,34,0,
16,0,1,0,0,0,
0,208,0,0,26,0,
16,0,1,0,0,0,
50,0,0,10,34,0,
16,0,1,0,0,0,
26,0,16,128,129,0,
0,0,1,0,0,0,
1,64,0,0,0,0,
0,63,1,64,0,0,
134,125,37,63,16,0,
0,10,66,0,16,0,
1,0,0,0,150,7,
16,0,4,0,0,0,
2,64,0,0,172,28,
90,62,244,108,6,191,
146,203,159,62,0,0,
0,0,16,0,0,10,
130,0,16,0,1,0,
0,0,150,7,16,0,
4,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
16,0,0,10,130,0,
16,0,3,0,0,0,
150,7,16,0,4,0,
0,0,2,64,0,0,
16,88,25,63,68,250,
141,190,221,181,164,190,
0,0,0,0,50,0,
0,9,130,0,16,0,
1,0,0,0,58,0,
16,0,3,0,0,0,
10,0,16,0,4,0,
0,0,58,0,16,0,
1,0,0,0,50,0,
0,9,66,0,16,0,
1,0,0,0,42,0,
16,0,1,0,0,0,
10,0,16,0,5,0,
0,0,58,0,16,0,
1,0,0,0,0,0,
0,7,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,50,0,0,10,
66,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,26,0,16,0,
3,0,0,0,42,0,
16,0,1,0,0,0,
50,0,0,9,34,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,26,0,
16,0,0,0,0,0,
56,0,0,7,18,0,
16,0,1,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,62,50,0,
0,9,66,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,4,0,
0,0,42,0,16,0,
3,0,0,0,50,0,
0,9,130,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,5,0,
0,0,58,0,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
214,5,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,16,88,
25,63,68,250,141,190,
221,181,164,190,0,0,
0,0,16,0,0,10,
66,0,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,172,28,90,62,
244,108,6,191,146,203,
159,62,0,0,0,0,
14,0,0,7,130,0,
16,0,3,0,0,0,
26,0,16,0,2,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
4,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,218,15,
73,64,1,64,0,0,
218,15,73,64,56,0,
0,7,130,0,16,0,
3,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,218,15,
73,64,77,0,0,7,
18,0,16,0,5,0,
0,0,18,0,16,0,
6,0,0,0,58,0,
16,0,3,0,0,0,
77,0,0,7,18,0,
16,0,4,0,0,0,
18,0,16,0,7,0,
0,0,10,0,16,0,
4,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,4,0,
0,0,10,0,16,0,
1,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,42,0,
16,0,3,0,0,0,
10,0,16,0,7,0,
0,0,10,0,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
150,5,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
50,0,0,10,18,0,
16,0,2,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,231,255,
191,58,26,0,16,0,
2,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,172,28,
90,62,244,108,6,191,
146,203,159,62,0,0,
0,0,16,0,0,10,
66,0,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
16,0,0,10,130,0,
16,0,3,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
16,88,25,63,68,250,
141,190,221,181,164,190,
0,0,0,0,50,0,
0,9,66,0,16,0,
3,0,0,0,58,0,
16,0,3,0,0,0,
10,0,16,0,5,0,
0,0,42,0,16,0,
3,0,0,0,50,0,
0,9,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,6,0,
0,0,42,0,16,0,
3,0,0,0,0,0,
0,7,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,50,0,0,10,
130,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,26,0,16,0,
3,0,0,0,58,0,
16,0,1,0,0,0,
50,0,0,9,34,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,26,0,
16,0,0,0,0,0,
56,0,0,7,18,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
0,0,192,62,50,0,
0,9,66,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,5,0,
0,0,42,0,16,0,
1,0,0,0,50,0,
0,9,130,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,6,0,
0,0,58,0,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
198,0,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,16,88,
25,63,68,250,141,190,
221,181,164,190,0,0,
0,0,16,0,0,10,
66,0,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,172,28,90,62,
244,108,6,191,146,203,
159,62,0,0,0,0,
14,0,0,7,130,0,
16,0,3,0,0,0,
10,0,16,0,2,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
4,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,218,15,
73,64,1,64,0,0,
218,15,73,64,56,0,
0,7,130,0,16,0,
3,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,218,15,
73,64,77,0,0,7,
18,0,16,0,5,0,
0,0,18,0,16,0,
6,0,0,0,58,0,
16,0,3,0,0,0,
77,0,0,7,18,0,
16,0,4,0,0,0,
18,0,16,0,7,0,
0,0,10,0,16,0,
4,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,4,0,
0,0,10,0,16,0,
1,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,42,0,
16,0,3,0,0,0,
10,0,16,0,7,0,
0,0,10,0,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
134,0,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
50,0,0,10,34,0,
16,0,2,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,231,255,
191,58,10,0,16,0,
2,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,172,28,
90,62,244,108,6,191,
146,203,159,62,0,0,
0,0,16,0,0,10,
66,0,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
16,0,0,10,130,0,
16,0,3,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
16,88,25,63,68,250,
141,190,221,181,164,190,
0,0,0,0,50,0,
0,9,66,0,16,0,
3,0,0,0,58,0,
16,0,3,0,0,0,
10,0,16,0,5,0,
0,0,42,0,16,0,
3,0,0,0,50,0,
0,9,130,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,6,0,
0,0,42,0,16,0,
3,0,0,0,0,0,
0,7,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,50,0,0,10,
130,0,16,0,1,0,
0,0,10,0,16,128,
65,0,0,0,1,0,
0,0,26,0,16,0,
3,0,0,0,58,0,
16,0,1,0,0,0,
50,0,0,9,34,0,
16,0,0,0,0,0,
10,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,26,0,
16,0,0,0,0,0,
56,0,0,7,18,0,
16,0,1,0,0,0,
58,0,16,0,1,0,
0,0,1,64,0,0,
0,0,0,63,50,0,
0,9,66,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,5,0,
0,0,42,0,16,0,
1,0,0,0,50,0,
0,9,130,0,16,0,
0,0,0,0,10,0,
16,0,1,0,0,0,
10,0,16,0,6,0,
0,0,58,0,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
214,5,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
16,0,0,10,18,0,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,16,88,
25,63,68,250,141,190,
221,181,164,190,0,0,
0,0,16,0,0,10,
66,0,16,0,3,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,172,28,90,62,
244,108,6,191,146,203,
159,62,0,0,0,0,
14,0,0,7,130,0,
16,0,3,0,0,0,
26,0,16,0,2,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
4,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,218,15,
73,64,1,64,0,0,
218,15,73,64,56,0,
0,7,130,0,16,0,
3,0,0,0,58,0,
16,0,3,0,0,0,
1,64,0,0,218,15,
73,64,77,0,0,7,
18,0,16,0,5,0,
0,0,18,0,16,0,
6,0,0,0,58,0,
16,0,3,0,0,0,
77,0,0,7,18,0,
16,0,4,0,0,0,
18,0,16,0,7,0,
0,0,10,0,16,0,
4,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,4,0,
0,0,10,0,16,0,
1,0,0,0,50,0,
0,9,18,0,16,0,
1,0,0,0,42,0,
16,0,3,0,0,0,
10,0,16,0,7,0,
0,0,10,0,16,0,
1,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,4,0,0,0,
150,5,16,0,2,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
50,0,0,10,18,0,
16,0,2,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,231,255,
191,58,26,0,16,0,
2,0,0,0,50,0,
0,10,18,0,16,0,
7,0,0,0,10,0,
16,128,65,0,0,0,
0,0,0,0,1,64,
0,0,231,255,191,58,
10,0,16,0,2,0,
0,0,16,0,0,10,
18,0,16,0,0,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,172,28,90,62,
244,108,6,191,146,203,
159,62,0,0,0,0,
16,0,0,10,130,0,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
154,153,153,62,61,10,
23,63,174,71,225,61,
0,0,0,0,16,0,
0,10,34,0,16,0,
2,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,16,88,
25,63,68,250,141,190,
221,181,164,190,0,0,
0,0,50,0,0,9,
130,0,16,0,1,0,
0,0,26,0,16,0,
2,0,0,0,10,0,
16,0,5,0,0,0,
58,0,16,0,1,0,
0,0,50,0,0,9,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,10,0,
16,0,6,0,0,0,
58,0,16,0,1,0,
0,0,0,0,0,7,
18,0,16,0,1,0,
0,0,10,0,16,0,
1,0,0,0,10,0,
16,0,0,0,0,0,
50,0,0,10,18,0,
16,0,0,0,0,0,
10,0,16,128,65,0,
0,0,1,0,0,0,
26,0,16,0,3,0,
0,0,10,0,16,0,
0,0,0,0,56,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
192,62,50,0,0,9,
18,0,16,0,1,0,
0,0,10,0,16,0,
0,0,0,0,10,0,
16,0,5,0,0,0,
42,0,16,0,1,0,
0,0,50,0,0,9,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,10,0,
16,0,6,0,0,0,
58,0,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
4,0,0,0,198,0,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,16,0,
0,10,130,0,16,0,
0,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,154,153,
153,62,61,10,23,63,
174,71,225,61,0,0,
0,0,16,0,0,10,
66,0,16,0,1,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,16,88,25,63,
68,250,141,190,221,181,
164,190,0,0,0,0,
16,0,0,10,130,0,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
172,28,90,62,244,108,
6,191,146,203,159,62,
0,0,0,0,14,0,
0,7,34,0,16,0,
2,0,0,0,10,0,
16,0,2,0,0,0,
42,0,16,0,0,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
4,0,0,0,134,0,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,54,0,
0,5,98,0,16,0,
7,0,0,0,166,11,
16,0,2,0,0,0,
14,0,0,7,66,0,
16,0,0,0,0,0,
10,0,16,0,7,0,
0,0,42,0,16,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
2,0,0,0,26,0,
16,0,2,0,0,0,
1,64,0,0,218,15,
73,64,1,64,0,0,
218,15,73,64,56,0,
0,7,34,0,16,0,
2,0,0,0,26,0,
16,0,2,0,0,0,
1,64,0,0,218,15,
73,64,77,0,0,7,
18,0,16,0,5,0,
0,0,18,0,16,0,
6,0,0,0,26,0,
16,0,2,0,0,0,
77,0,0,7,18,0,
16,0,2,0,0,0,
18,0,16,0,8,0,
0,0,10,0,16,0,
2,0,0,0,50,0,
0,9,130,0,16,0,
0,0,0,0,42,0,
16,0,1,0,0,0,
10,0,16,0,2,0,
0,0,58,0,16,0,
0,0,0,0,50,0,
0,9,130,0,16,0,
0,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,8,0,
0,0,58,0,16,0,
0,0,0,0,16,0,
0,10,66,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,154,153,
153,62,61,10,23,63,
174,71,225,61,0,0,
0,0,16,0,0,10,
130,0,16,0,1,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,16,88,25,63,
68,250,141,190,221,181,
164,190,0,0,0,0,
16,0,0,10,18,0,
16,0,2,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
172,28,90,62,244,108,
6,191,146,203,159,62,
0,0,0,0,50,0,
0,9,66,0,16,0,
1,0,0,0,58,0,
16,0,1,0,0,0,
10,0,16,0,5,0,
0,0,42,0,16,0,
1,0,0,0,50,0,
0,9,66,0,16,0,
1,0,0,0,10,0,
16,0,2,0,0,0,
10,0,16,0,6,0,
0,0,42,0,16,0,
1,0,0,0,0,0,
0,7,130,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,50,0,0,10,
130,0,16,0,0,0,
0,0,58,0,16,128,
65,0,0,0,0,0,
0,0,26,0,16,0,
3,0,0,0,42,0,
16,0,1,0,0,0,
56,0,0,7,130,0,
16,0,0,0,0,0,
58,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,62,50,0,
0,9,18,0,16,0,
1,0,0,0,58,0,
16,0,0,0,0,0,
10,0,16,0,5,0,
0,0,10,0,16,0,
1,0,0,0,50,0,
0,9,18,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
10,0,16,0,6,0,
0,0,10,0,16,0,
0,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,2,0,0,0,
134,0,16,0,7,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,4,0,
0,0,70,0,16,0,
7,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,16,0,0,10,
130,0,16,0,0,0,
0,0,70,2,16,0,
2,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
16,0,0,10,66,0,
16,0,1,0,0,0,
70,2,16,0,2,0,
0,0,2,64,0,0,
16,88,25,63,68,250,
141,190,221,181,164,190,
0,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,2,0,0,0,
2,64,0,0,172,28,
90,62,244,108,6,191,
146,203,159,62,0,0,
0,0,50,0,0,9,
18,0,16,0,2,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,218,15,73,64,
1,64,0,0,218,15,
73,64,56,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,1,64,
0,0,218,15,73,64,
77,0,0,7,18,0,
16,0,5,0,0,0,
18,0,16,0,6,0,
0,0,42,0,16,0,
0,0,0,0,77,0,
0,7,18,0,16,0,
2,0,0,0,18,0,
16,0,7,0,0,0,
10,0,16,0,2,0,
0,0,50,0,0,9,
66,0,16,0,0,0,
0,0,42,0,16,0,
1,0,0,0,10,0,
16,0,2,0,0,0,
58,0,16,0,0,0,
0,0,50,0,0,9,
66,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,10,0,
16,0,7,0,0,0,
42,0,16,0,0,0,
0,0,16,0,0,10,
130,0,16,0,0,0,
0,0,70,2,16,0,
4,0,0,0,2,64,
0,0,154,153,153,62,
61,10,23,63,174,71,
225,61,0,0,0,0,
16,0,0,10,66,0,
16,0,1,0,0,0,
70,2,16,0,4,0,
0,0,2,64,0,0,
16,88,25,63,68,250,
141,190,221,181,164,190,
0,0,0,0,16,0,
0,10,130,0,16,0,
1,0,0,0,70,2,
16,0,4,0,0,0,
2,64,0,0,172,28,
90,62,244,108,6,191,
146,203,159,62,0,0,
0,0,50,0,0,9,
130,0,16,0,0,0,
0,0,42,0,16,0,
1,0,0,0,10,0,
16,0,5,0,0,0,
58,0,16,0,0,0,
0,0,50,0,0,9,
130,0,16,0,0,0,
0,0,58,0,16,0,
1,0,0,0,10,0,
16,0,6,0,0,0,
58,0,16,0,0,0,
0,0,0,0,0,7,
66,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
50,0,0,10,66,0,
16,0,0,0,0,0,
42,0,16,128,65,0,
0,0,0,0,0,0,
26,0,16,0,3,0,
0,0,58,0,16,0,
0,0,0,0,56,0,
0,7,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,62,50,0,0,9,
130,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,10,0,
16,0,5,0,0,0,
10,0,16,0,1,0,
0,0,50,0,0,9,
18,0,16,0,0,0,
0,0,42,0,16,0,
0,0,0,0,10,0,
16,0,6,0,0,0,
10,0,16,0,0,0,
0,0,56,0,0,10,
210,0,16,0,1,0,
0,0,246,15,16,0,
0,0,0,0,2,64,
0,0,10,104,114,63,
0,0,0,0,150,178,
140,62,205,204,140,63,
50,0,0,9,66,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,1,64,0,0,
0,0,128,62,10,0,
16,0,1,0,0,0,
50,0,0,13,162,0,
16,0,0,0,0,0,
86,5,16,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
128,62,0,0,0,0,
0,0,128,62,166,14,
16,128,65,0,0,0,
1,0,0,0,50,0,
0,9,66,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,64,164,
31,63,42,0,16,0,
0,0,0,0,47,0,
0,5,18,0,16,0,
2,0,0,0,42,0,
16,0,0,0,0,0,
50,0,0,10,34,0,
16,0,0,0,0,0,
10,0,16,128,65,0,
0,0,0,0,0,0,
1,64,0,0,60,189,
34,63,26,0,16,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,154,153,
217,63,58,0,16,0,
0,0,0,0,47,0,
0,5,66,0,16,0,
2,0,0,0,10,0,
16,0,0,0,0,0,
47,0,0,5,34,0,
16,0,2,0,0,0,
26,0,16,0,0,0,
0,0,56,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
2,0,0,0,6,0,
16,0,3,0,0,0,
54,0,0,5,130,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,0,25,0,0,5,
242,0,16,0,0,0,
0,0,70,14,16,0,
0,0,0,0,56,0,
0,7,114,0,16,0,
1,0,0,0,86,5,
16,0,1,0,0,0,
70,2,16,0,0,0,
0,0,54,0,0,5,
130,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,63,55,0,
0,9,242,32,16,0,
0,0,0,0,86,21,
16,0,1,0,0,0,
70,14,16,0,1,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,197,0,
0,0,9,0,0,0,
0,0,0,0,7,0,
0,0,161,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
14,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,5,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class NtscShadersNtscBlastemShaderDef : public ShaderDef
{
public:
	NtscShadersNtscBlastemShaderDef() : ShaderDef{}
	{
		Name = "ntsc-blastem";
		VertexByteCode = RetroArchNtscShadersNtscBlastemShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchNtscShadersNtscBlastemShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchNtscShadersNtscBlastemShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchNtscShadersNtscBlastemShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("comb_str", -1, 52, 4, 0.000000f, 1.000000f, 0.800000f, 0.010000f, "Combing Filter Strength"));
		Params.push_back(ShaderParam("gamma_corr", -1, 56, 4, 1.000000f, 4.000000f, 2.200000f, 0.050000f, "Gamma Correction (2.2 = passthru)"));
		Params.push_back(ShaderParam("scan_toggle", -1, 60, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Scanline Toggle"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
