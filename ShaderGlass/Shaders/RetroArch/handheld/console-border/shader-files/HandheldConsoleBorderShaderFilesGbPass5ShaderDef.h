/*
ShaderGlass shader handheld/console-border/shader-files\gb-pass-5 imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/23046258f7fd02242cc6dd4c08c997a8ddb84935/handheld/console-border/shader-files/gb-pass-5.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchHandheldConsoleBorderShaderFilesGbPass5ShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,218,43,
58,232,98,111,204,125,
134,54,30,147,242,99,
208,21,1,0,0,0,
148,7,0,0,5,0,
0,0,52,0,0,0,
188,3,0,0,8,4,
0,0,120,4,0,0,
248,6,0,0,82,68,
69,70,128,3,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
87,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,8,0,0,0,
24,1,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,88,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,116,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,152,2,0,0,
16,0,0,0,16,0,
0,0,2,0,0,0,
116,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
170,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,116,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,190,2,
0,0,48,0,0,0,
4,0,0,0,2,0,
0,0,216,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,252,2,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
216,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
24,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,216,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,49,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,216,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,68,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
216,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,115,
95,79,117,116,112,117,
116,83,105,122,101,0,
102,108,111,97,116,52,
0,171,171,171,1,0,
3,0,1,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
106,2,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,83,105,122,101,0,
112,97,114,97,109,115,
95,118,105,100,101,111,
95,115,99,97,108,101,
0,102,108,111,97,116,
0,171,0,0,3,0,
1,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,209,2,
0,0,112,97,114,97,
109,115,95,98,111,114,
100,101,114,95,116,101,
120,116,117,114,101,95,
115,99,97,108,101,0,
112,97,114,97,109,115,
95,98,111,114,100,101,
114,95,98,114,105,103,
104,116,110,101,115,115,
0,112,97,114,97,109,
115,95,103,98,95,120,
95,111,102,102,115,101,
116,0,112,97,114,97,
109,115,95,103,98,95,
121,95,111,102,102,115,
101,116,0,77,105,99,
114,111,115,111,102,116,
32,40,82,41,32,72,
76,83,76,32,83,104,
97,100,101,114,32,67,
111,109,112,105,108,101,
114,32,49,48,46,49,
0,171,73,83,71,78,
68,0,0,0,2,0,
0,0,8,0,0,0,
56,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,15,15,0,0,
56,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,3,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,104,0,
0,0,3,0,0,0,
8,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,12,0,0,80,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
12,3,0,0,89,0,
0,0,0,0,0,0,
1,0,0,0,3,0,
0,0,1,0,0,0,
15,0,0,0,84,69,
88,67,79,79,82,68,
0,83,86,95,80,111,
115,105,116,105,111,110,
0,171,171,171,83,72,
69,88,120,2,0,0,
80,0,1,0,158,0,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,0,0,0,0,
4,0,0,0,89,0,
0,4,70,142,32,0,
1,0,0,0,5,0,
0,0,95,0,0,3,
242,16,16,0,0,0,
0,0,95,0,0,3,
50,16,16,0,1,0,
0,0,101,0,0,3,
50,32,16,0,0,0,
0,0,101,0,0,3,
194,32,16,0,0,0,
0,0,103,0,0,4,
242,32,16,0,1,0,
0,0,1,0,0,0,
104,0,0,2,2,0,
0,0,56,0,0,11,
50,0,16,0,0,0,
0,0,2,64,0,0,
0,0,72,69,0,0,
200,68,0,0,0,0,
0,0,0,0,6,128,
32,0,1,0,0,0,
3,0,0,0,14,0,
0,8,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
86,133,32,0,1,0,
0,0,3,0,0,0,
56,0,0,9,18,0,
16,0,1,0,0,0,
42,128,32,0,1,0,
0,0,1,0,0,0,
58,128,32,0,1,0,
0,0,3,0,0,0,
56,0,0,10,34,0,
16,0,1,0,0,0,
58,128,32,0,1,0,
0,0,1,0,0,0,
10,128,32,128,65,0,
0,0,1,0,0,0,
4,0,0,0,50,0,
0,12,194,0,16,0,
0,0,0,0,6,4,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,160,64,0,0,
160,64,6,20,16,0,
1,0,0,0,0,0,
0,10,50,0,16,0,
1,0,0,0,230,10,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,191,0,0,0,191,
0,0,0,0,0,0,
0,0,54,0,0,5,
50,32,16,0,0,0,
0,0,230,10,16,0,
0,0,0,0,56,0,
0,8,194,0,16,0,
0,0,0,0,6,4,
16,0,1,0,0,0,
6,132,32,0,1,0,
0,0,0,0,0,0,
14,0,0,7,50,0,
16,0,0,0,0,0,
230,10,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,0,0,
0,10,194,32,16,0,
0,0,0,0,6,4,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,63,0,0,
0,63,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,1,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,15,0,
0,0,2,0,0,0,
0,0,0,0,5,0,
0,0,13,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,42,69,
96,122,4,65,8,48,
117,89,23,94,87,67,
21,202,1,0,0,0,
28,6,0,0,5,0,
0,0,52,0,0,0,
204,3,0,0,24,4,
0,0,76,4,0,0,
128,5,0,0,82,68,
69,70,144,3,0,0,
1,0,0,0,16,1,
0,0,5,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
103,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
220,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,236,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
1,0,0,0,252,0,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
2,0,0,0,1,0,
0,0,13,0,0,0,
3,1,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,3,0,0,0,
1,0,0,0,13,0,
0,0,10,1,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,95,83,
111,117,114,99,101,95,
115,97,109,112,108,101,
114,0,95,66,79,82,
68,69,82,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,66,79,82,68,69,
82,0,80,117,115,104,
0,171,10,1,0,0,
8,0,0,0,40,1,
0,0,80,0,0,0,
0,0,0,0,0,0,
0,0,104,2,0,0,
0,0,0,0,16,0,
0,0,0,0,0,0,
132,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
168,2,0,0,16,0,
0,0,16,0,0,0,
0,0,0,0,132,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,186,2,
0,0,32,0,0,0,
16,0,0,0,0,0,
0,0,132,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,206,2,0,0,
48,0,0,0,4,0,
0,0,0,0,0,0,
232,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
12,3,0,0,52,0,
0,0,4,0,0,0,
0,0,0,0,232,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,40,3,
0,0,56,0,0,0,
4,0,0,0,2,0,
0,0,232,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,65,3,0,0,
60,0,0,0,4,0,
0,0,0,0,0,0,
232,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
84,3,0,0,64,0,
0,0,4,0,0,0,
0,0,0,0,232,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,122,2,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,118,
105,100,101,111,95,115,
99,97,108,101,0,102,
108,111,97,116,0,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,225,2,0,0,
112,97,114,97,109,115,
95,98,111,114,100,101,
114,95,116,101,120,116,
117,114,101,95,115,99,
97,108,101,0,112,97,
114,97,109,115,95,98,
111,114,100,101,114,95,
98,114,105,103,104,116,
110,101,115,115,0,112,
97,114,97,109,115,95,
103,98,95,120,95,111,
102,102,115,101,116,0,
112,97,114,97,109,115,
95,103,98,95,121,95,
111,102,102,115,101,116,
0,77,105,99,114,111,
115,111,102,116,32,40,
82,41,32,72,76,83,
76,32,83,104,97,100,
101,114,32,67,111,109,
112,105,108,101,114,32,
49,48,46,49,0,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
12,12,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
44,1,0,0,80,0,
0,0,75,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
1,0,0,0,4,0,
0,0,90,0,0,3,
0,96,16,0,2,0,
0,0,90,0,0,3,
0,96,16,0,3,0,
0,0,88,24,0,4,
0,112,16,0,2,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,3,0,0,0,
85,85,0,0,98,16,
0,3,50,16,16,0,
0,0,0,0,98,16,
0,3,194,16,16,0,
0,0,0,0,101,0,
0,3,242,32,16,0,
0,0,0,0,104,0,
0,2,3,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
242,0,16,0,0,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,242,0,16,0,
1,0,0,0,230,26,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,0,96,16,0,
3,0,0,0,50,0,
0,11,242,0,16,0,
2,0,0,0,70,14,
16,0,1,0,0,0,
166,138,32,0,1,0,
0,0,3,0,0,0,
70,14,16,128,65,0,
0,0,0,0,0,0,
50,0,0,9,242,32,
16,0,0,0,0,0,
246,15,16,0,1,0,
0,0,70,14,16,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
62,0,0,1,83,84,
65,84,148,0,0,0,
5,0,0,0,3,0,
0,0,0,0,0,0,
3,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0
};

}

namespace RetroArch
{
class HandheldConsoleBorderShaderFilesGbPass5ShaderDef : public ShaderDef
{
public:
	HandheldConsoleBorderShaderFilesGbPass5ShaderDef() : ShaderDef{}
	{
		Name = "gb-pass-5";
		VertexByteCode = RetroArchHandheldConsoleBorderShaderFilesGbPass5ShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchHandheldConsoleBorderShaderFilesGbPass5ShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchHandheldConsoleBorderShaderFilesGbPass5ShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchHandheldConsoleBorderShaderFilesGbPass5ShaderDefs::sFragmentByteCode);
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("video_scale", -1, 48, 4, 2.000000f, 20.000000f, 3.000000f, 1.000000f, "Video Scale"));
		Params.push_back(ShaderParam("border_texture_scale", -1, 52, 4, 1.000000f, 20.000000f, 4.000000f, 0.005000f, "Border Scale"));
		Params.push_back(ShaderParam("border_brightness", -1, 56, 4, 0.000000f, 1.000000f, 1.000000f, 0.010000f, "Border Brightness"));
		Params.push_back(ShaderParam("gb_x_offset", -1, 60, 4, -10000.000000f, 10000.000000f, 0.000000f, 1.000000f, "Viewpoint X Coord Offset"));
		Params.push_back(ShaderParam("gb_y_offset", -1, 64, 4, -10000.000000f, 10000.000000f, 0.000000f, 1.000000f, "Viewpoint Y Coord Offset"));
		Samplers.push_back(ShaderSampler("Source", 2));
		Samplers.push_back(ShaderSampler("BORDER", 3));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
