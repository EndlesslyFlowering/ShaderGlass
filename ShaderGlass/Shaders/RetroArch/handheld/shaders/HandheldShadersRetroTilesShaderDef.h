/*
ShaderGlass shader handheld/shaders\retro-tiles imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/25311dc03332d9ef2dff8d9d06c611d828028fac/handheld/shaders/retro-tiles.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

*/

#pragma once

namespace RetroArchHandheldShadersRetroTilesShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,152,102,
2,54,91,41,154,129,
0,212,100,228,179,180,
225,183,1,0,0,0,
188,7,0,0,5,0,
0,0,52,0,0,0,
116,4,0,0,192,4,
0,0,24,5,0,0,
32,7,0,0,82,68,
69,70,56,4,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
13,4,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,11,0,0,0,
24,1,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,208,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,232,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,12,3,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
232,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
31,3,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,232,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,48,3,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,72,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,108,3,0,0,
52,0,0,0,4,0,
0,0,0,0,0,0,
132,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
168,3,0,0,56,0,
0,0,4,0,0,0,
0,0,0,0,132,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,185,3,
0,0,60,0,0,0,
4,0,0,0,0,0,
0,0,132,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,201,3,0,0,
64,0,0,0,4,0,
0,0,0,0,0,0,
132,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
219,3,0,0,68,0,
0,0,4,0,0,0,
2,0,0,0,132,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,234,3,
0,0,72,0,0,0,
4,0,0,0,0,0,
0,0,132,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,251,3,0,0,
76,0,0,0,4,0,
0,0,0,0,0,0,
132,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,95,
83,111,117,114,99,101,
83,105,122,101,0,102,
108,111,97,116,52,0,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,225,2,0,0,
112,97,114,97,109,95,
79,114,105,103,105,110,
97,108,83,105,122,101,
0,112,97,114,97,109,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,95,
70,114,97,109,101,67,
111,117,110,116,0,100,
119,111,114,100,0,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,65,3,0,0,
112,97,114,97,109,95,
84,73,76,69,95,70,
79,82,77,65,84,0,
102,108,111,97,116,0,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,126,3,0,0,
112,97,114,97,109,95,
84,73,76,69,95,68,
69,80,84,72,0,112,
97,114,97,109,95,84,
73,76,69,95,83,73,
90,69,0,112,97,114,
97,109,95,67,79,76,
79,82,95,66,79,79,
83,84,0,112,97,114,
97,109,95,79,86,69,
82,83,67,65,78,0,
112,97,114,97,109,95,
73,110,112,117,116,71,
97,109,109,97,0,112,
97,114,97,109,95,79,
117,116,112,117,116,71,
97,109,109,97,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,171,171,
73,83,71,78,68,0,
0,0,2,0,0,0,
8,0,0,0,56,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,15,0,0,56,0,
0,0,1,0,0,0,
0,0,0,0,3,0,
0,0,1,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,80,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,3,12,
0,0,65,0,0,0,
0,0,0,0,1,0,
0,0,3,0,0,0,
1,0,0,0,15,0,
0,0,84,69,88,67,
79,79,82,68,0,83,
86,95,80,111,115,105,
116,105,111,110,0,171,
171,171,83,72,69,88,
0,2,0,0,80,0,
1,0,128,0,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
0,0,0,0,4,0,
0,0,89,0,0,4,
70,142,32,0,1,0,
0,0,5,0,0,0,
95,0,0,3,242,16,
16,0,0,0,0,0,
95,0,0,3,50,16,
16,0,1,0,0,0,
101,0,0,3,50,32,
16,0,0,0,0,0,
103,0,0,4,242,32,
16,0,1,0,0,0,
1,0,0,0,104,0,
0,2,1,0,0,0,
14,0,0,9,50,0,
16,0,0,0,0,0,
70,128,32,0,1,0,
0,0,2,0,0,0,
70,128,32,0,1,0,
0,0,0,0,0,0,
65,0,0,5,194,0,
16,0,0,0,0,0,
6,4,16,0,0,0,
0,0,0,0,0,8,
194,0,16,0,0,0,
0,0,166,14,16,0,
0,0,0,0,86,133,
32,0,1,0,0,0,
4,0,0,0,51,0,
0,7,66,0,16,0,
0,0,0,0,58,0,
16,0,0,0,0,0,
42,0,16,0,0,0,
0,0,14,0,0,7,
50,0,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,166,10,
16,0,0,0,0,0,
50,0,0,15,194,0,
16,0,0,0,0,0,
6,20,16,0,1,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,71,3,128,63,
71,3,128,63,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,191,0,0,0,191,
50,0,0,12,50,32,
16,0,0,0,0,0,
230,10,16,0,0,0,
0,0,70,0,16,0,
0,0,0,0,2,64,
0,0,0,0,0,63,
0,0,0,63,0,0,
0,0,0,0,0,0,
56,0,0,8,242,0,
16,0,0,0,0,0,
86,21,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,1,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,6,16,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,0,
16,0,0,0,0,0,
166,26,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,2,0,
0,0,70,14,16,0,
0,0,0,0,50,0,
0,10,242,32,16,0,
1,0,0,0,246,31,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,3,0,0,0,
70,14,16,0,0,0,
0,0,62,0,0,1,
83,84,65,84,148,0,
0,0,12,0,0,0,
1,0,0,0,0,0,
0,0,4,0,0,0,
11,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,185,226,
234,18,167,96,230,130,
44,140,167,71,62,88,
68,140,1,0,0,0,
156,11,0,0,5,0,
0,0,52,0,0,0,
44,4,0,0,96,4,
0,0,148,4,0,0,
0,11,0,0,82,68,
69,70,240,3,0,0,
1,0,0,0,184,0,
0,0,3,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
197,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
156,0,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,172,0,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,179,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,0,0,0,0,
95,83,111,117,114,99,
101,95,115,97,109,112,
108,101,114,0,83,111,
117,114,99,101,0,80,
117,115,104,0,179,0,
0,0,11,0,0,0,
208,0,0,0,80,0,
0,0,0,0,0,0,
0,0,0,0,136,2,
0,0,0,0,0,0,
16,0,0,0,2,0,
0,0,160,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,196,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
160,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
215,2,0,0,32,0,
0,0,16,0,0,0,
0,0,0,0,160,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,232,2,
0,0,48,0,0,0,
4,0,0,0,0,0,
0,0,0,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,36,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
60,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
96,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,60,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,113,3,
0,0,60,0,0,0,
4,0,0,0,2,0,
0,0,60,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,129,3,0,0,
64,0,0,0,4,0,
0,0,2,0,0,0,
60,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
147,3,0,0,68,0,
0,0,4,0,0,0,
0,0,0,0,60,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,162,3,
0,0,72,0,0,0,
4,0,0,0,2,0,
0,0,60,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,179,3,0,0,
76,0,0,0,4,0,
0,0,2,0,0,0,
60,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
112,97,114,97,109,95,
83,111,117,114,99,101,
83,105,122,101,0,102,
108,111,97,116,52,0,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,153,2,0,0,
112,97,114,97,109,95,
79,114,105,103,105,110,
97,108,83,105,122,101,
0,112,97,114,97,109,
95,79,117,116,112,117,
116,83,105,122,101,0,
112,97,114,97,109,95,
70,114,97,109,101,67,
111,117,110,116,0,100,
119,111,114,100,0,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,249,2,0,0,
112,97,114,97,109,95,
84,73,76,69,95,70,
79,82,77,65,84,0,
102,108,111,97,116,0,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,54,3,0,0,
112,97,114,97,109,95,
84,73,76,69,95,68,
69,80,84,72,0,112,
97,114,97,109,95,84,
73,76,69,95,83,73,
90,69,0,112,97,114,
97,109,95,67,79,76,
79,82,95,66,79,79,
83,84,0,112,97,114,
97,109,95,79,86,69,
82,83,67,65,78,0,
112,97,114,97,109,95,
73,110,112,117,116,71,
97,109,109,97,0,112,
97,114,97,109,95,79,
117,116,112,117,116,71,
97,109,109,97,0,77,
105,99,114,111,115,111,
102,116,32,40,82,41,
32,72,76,83,76,32,
83,104,97,100,101,114,
32,67,111,109,112,105,
108,101,114,32,49,48,
46,49,0,171,171,171,
73,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
3,3,0,0,84,69,
88,67,79,79,82,68,
0,171,171,171,79,83,
71,78,44,0,0,0,
1,0,0,0,8,0,
0,0,32,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,0,
0,0,83,86,95,84,
97,114,103,101,116,0,
171,171,83,72,69,88,
100,6,0,0,80,0,
0,0,153,1,0,0,
106,8,0,1,89,0,
0,4,70,142,32,0,
1,0,0,0,5,0,
0,0,90,0,0,3,
0,96,16,0,2,0,
0,0,88,24,0,4,
0,112,16,0,2,0,
0,0,85,85,0,0,
98,16,0,3,50,16,
16,0,0,0,0,0,
101,0,0,3,242,32,
16,0,0,0,0,0,
104,0,0,2,5,0,
0,0,56,0,0,8,
50,0,16,0,0,0,
0,0,70,16,16,0,
0,0,0,0,70,128,
32,0,1,0,0,0,
0,0,0,0,26,0,
0,5,50,0,16,0,
0,0,0,0,70,0,
16,0,0,0,0,0,
0,0,0,10,50,0,
16,0,0,0,0,0,
70,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,191,0,0,
0,191,0,0,0,0,
0,0,0,0,49,0,
0,10,50,0,16,0,
1,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
70,0,16,0,0,0,
0,0,49,0,0,10,
194,0,16,0,1,0,
0,0,6,4,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
30,0,0,8,50,0,
16,0,1,0,0,0,
70,0,16,128,65,0,
0,0,1,0,0,0,
230,10,16,0,1,0,
0,0,43,0,0,5,
50,0,16,0,1,0,
0,0,70,0,16,0,
1,0,0,0,56,0,
0,8,146,0,16,0,
1,0,0,0,6,4,
16,0,1,0,0,0,
166,142,32,0,1,0,
0,0,0,0,0,0,
54,0,0,8,98,0,
16,0,1,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,7,
242,0,16,0,2,0,
0,0,70,14,16,0,
1,0,0,0,70,20,
16,0,0,0,0,0,
0,0,0,7,50,0,
16,0,1,0,0,0,
230,10,16,0,1,0,
0,0,70,0,16,0,
2,0,0,0,69,0,
0,139,194,0,0,128,
67,85,21,0,114,0,
16,0,1,0,0,0,
70,0,16,0,1,0,
0,0,70,126,16,0,
2,0,0,0,0,96,
16,0,2,0,0,0,
47,0,0,5,114,0,
16,0,1,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,8,
114,0,16,0,1,0,
0,0,70,2,16,0,
1,0,0,0,166,138,
32,0,1,0,0,0,
4,0,0,0,25,0,
0,5,114,0,16,0,
1,0,0,0,70,2,
16,0,1,0,0,0,
0,0,0,11,194,0,
16,0,0,0,0,0,
6,4,16,128,65,0,
0,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,128,63,0,0,
128,63,14,0,0,8,
242,0,16,0,0,0,
0,0,134,13,16,0,
0,0,0,0,246,143,
32,0,1,0,0,0,
3,0,0,0,52,0,
0,9,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
166,138,32,128,65,0,
0,0,1,0,0,0,
3,0,0,0,51,0,
0,10,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
128,63,50,0,0,13,
242,0,16,0,3,0,
0,0,70,14,16,128,
65,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,2,64,
0,0,0,0,128,63,
0,0,128,63,0,0,
128,63,0,0,128,63,
56,0,0,7,242,0,
16,0,4,0,0,0,
70,14,16,0,0,0,
0,0,70,14,16,0,
0,0,0,0,56,0,
0,7,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
70,14,16,0,4,0,
0,0,50,0,0,10,
242,0,16,0,3,0,
0,0,86,133,32,0,
1,0,0,0,3,0,
0,0,70,14,16,0,
3,0,0,0,70,14,
16,0,4,0,0,0,
50,0,0,13,242,0,
16,0,0,0,0,0,
70,14,16,128,65,0,
0,0,0,0,0,0,
70,14,16,0,3,0,
0,0,2,64,0,0,
0,0,128,63,0,0,
128,63,0,0,128,63,
0,0,128,63,56,0,
0,7,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
70,14,16,0,0,0,
0,0,56,0,0,7,
114,0,16,0,1,0,
0,0,86,5,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,3,0,
0,0,230,10,16,0,
2,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,69,0,0,139,
194,0,0,128,67,85,
21,0,114,0,16,0,
2,0,0,0,70,0,
16,0,2,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,47,0,
0,5,114,0,16,0,
2,0,0,0,70,2,
16,0,2,0,0,0,
56,0,0,8,114,0,
16,0,2,0,0,0,
70,2,16,0,2,0,
0,0,166,138,32,0,
1,0,0,0,4,0,
0,0,25,0,0,5,
114,0,16,0,2,0,
0,0,70,2,16,0,
2,0,0,0,56,0,
0,7,114,0,16,0,
2,0,0,0,86,5,
16,0,0,0,0,0,
70,2,16,0,2,0,
0,0,47,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,8,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
166,138,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,50,0,0,9,
114,0,16,0,1,0,
0,0,70,2,16,0,
3,0,0,0,6,0,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,7,
114,0,16,0,1,0,
0,0,246,15,16,0,
0,0,0,0,70,2,
16,0,1,0,0,0,
69,0,0,139,194,0,
0,128,67,85,21,0,
114,0,16,0,3,0,
0,0,70,16,16,0,
0,0,0,0,70,126,
16,0,2,0,0,0,
0,96,16,0,2,0,
0,0,47,0,0,5,
114,0,16,0,3,0,
0,0,70,2,16,0,
3,0,0,0,56,0,
0,8,114,0,16,0,
3,0,0,0,70,2,
16,0,3,0,0,0,
166,138,32,0,1,0,
0,0,4,0,0,0,
25,0,0,5,114,0,
16,0,3,0,0,0,
70,2,16,0,3,0,
0,0,50,0,0,9,
178,0,16,0,0,0,
0,0,70,8,16,0,
3,0,0,0,6,0,
16,0,0,0,0,0,
70,8,16,0,2,0,
0,0,50,0,0,9,
114,0,16,0,0,0,
0,0,70,3,16,0,
0,0,0,0,166,10,
16,0,0,0,0,0,
70,2,16,0,1,0,
0,0,56,0,0,8,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,6,128,
32,0,1,0,0,0,
4,0,0,0,47,0,
0,5,114,0,16,0,
0,0,0,0,70,2,
16,0,0,0,0,0,
14,0,0,11,130,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
128,63,0,0,128,63,
0,0,128,63,0,0,
128,63,58,128,32,0,
1,0,0,0,4,0,
0,0,56,0,0,7,
114,0,16,0,0,0,
0,0,70,2,16,0,
0,0,0,0,246,15,
16,0,0,0,0,0,
25,0,0,5,114,32,
16,0,0,0,0,0,
70,2,16,0,0,0,
0,0,54,0,0,5,
130,32,16,0,0,0,
0,0,1,64,0,0,
0,0,128,63,62,0,
0,1,83,84,65,84,
148,0,0,0,50,0,
0,0,5,0,0,0,
0,0,0,0,2,0,
0,0,41,0,0,0,
1,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
0,0,0,0,2,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const uint32_t sVertexHash[] = 
{
0x76bd8345,0x62ba60bf,0xc73de1d1,0xa16e70f0,0xbf31f700,0x87ed9b70,
0x439636b9,0xd67d23c6
};


static const uint32_t sFragmentHash[] =
{
0x68ca10b1,0x61520070,0xd44f3291,0x16d79089,0x1f8edf27,0x70d7a0e3,
0xb98fc781,0xe7177014
};

}

namespace RetroArch
{
class HandheldShadersRetroTilesShaderDef : public ShaderDef
{
public:
	HandheldShadersRetroTilesShaderDef() : ShaderDef{}
	{
		Name = "retro-tiles";
		VertexByteCode = RetroArchHandheldShadersRetroTilesShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchHandheldShadersRetroTilesShaderDefs::sVertexByteCode);
		VertexHash = RetroArchHandheldShadersRetroTilesShaderDefs::sVertexHash;
		FragmentByteCode = RetroArchHandheldShadersRetroTilesShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchHandheldShadersRetroTilesShaderDefs::sFragmentByteCode);
		FragmentHash = RetroArchHandheldShadersRetroTilesShaderDefs::sFragmentHash;
		Format = "";
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("TILE_FORMAT", -1, 52, 4, 0.000000f, 1.000000f, 0.000000f, 1.000000f, "Tile Format [ Normal | Deep]"));
		Params.push_back(ShaderParam("TILE_DEPTH", -1, 56, 4, 0.000000f, 1.000000f, 1.000000f, 0.100000f, "Tile Depth"));
		Params.push_back(ShaderParam("TILE_SIZE", -1, 60, 4, 0.400000f, 0.600000f, 0.500000f, 0.010000f, "Tile Size"));
		Params.push_back(ShaderParam("COLOR_BOOST", -1, 64, 4, 1.000000f, 2.000000f, 1.000000f, 0.050000f, "Color Boost"));
		Params.push_back(ShaderParam("OVERSCAN", -1, 68, 4, -3.000000f, 3.000000f, 0.000000f, 1.000000f, "Over Scan"));
		Params.push_back(ShaderParam("InputGamma", -1, 72, 4, 0.000000f, 4.000000f, 2.400000f, 0.100000f, "INPUT GAMMA"));
		Params.push_back(ShaderParam("OutputGamma", -1, 76, 4, 0.000000f, 3.000000f, 2.200000f, 0.100000f, "OUTPUT GAMMA"));
		Samplers.push_back(ShaderSampler("Source", 2));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
